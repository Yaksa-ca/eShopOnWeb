swagger: '2.0'
info:
  title: Overture API
  version: 1.0.0
host: dev-ocs-cm.develop.orckestra.cloud
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /monitoring/health:
    get:
      tags:
        - monitoring
      summary: '<Add summary here> - {GetOvertureHostInfoRequest}'
      description: 'Do not work in Swagger. To test it, send AccessToken value for example in the url {servicesUrl}api/monitoring/health?AccessToken='
      operationId: GetOvertureHostInfoRequesthealth_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OvertureHostInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /my/applications/:
    get:
      tags:
        - my
      summary: 'Retrieve the authorized applications list with the preferred application first. - {GetAuthorizedApplicationsRequest}'
      description: Retrieve the authorized applications list with the preferred application first.
      operationId: GetAuthorizedApplicationsRequestapplications_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Application>
            type: array
            items:
              $ref: '#/definitions/Application'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Application>
            type: array
            items:
              $ref: '#/definitions/Application'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /my/application:
    get:
      tags:
        - my
      summary: 'Retrieve the user default application id - {GetUserApplicationRequest}'
      description: Retrieve the user default application id
      operationId: GetUserApplicationRequestapplication_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /my/culture:
    get:
      tags:
        - my
      summary: 'Retrive the user prefered culture - {GetUserCultureRequest}'
      description: Retrive the user prefered culture
      operationId: GetUserCultureRequestculture_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Culture'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /applications/:
    get:
      tags:
        - applications
      summary: 'Retrieve the full list of applications. - {GetAllApplicationsRequest}'
      description: Retrieve the full list of applications.
      operationId: GetAllApplicationsRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Application>
            type: array
            items:
              $ref: '#/definitions/Application'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Application>
            type: array
            items:
              $ref: '#/definitions/Application'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/my/application/{ApplicationId}':
    post:
      tags:
        - my
      summary: 'Set the user default application by providing the application id - {SaveUserApplicationRequest}'
      description: Set the user default application by providing the application id
      operationId: SaveUserApplicationRequestapplicationApplicationId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ApplicationId
          in: path
          description: The id of the application
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveUserApplicationRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/my/culture/{CultureIso}':
    post:
      tags:
        - my
      summary: 'Set the user culture providing it''s ISO format (ie en-US) - {SaveUserCultureRequest}'
      description: 'Set the user culture providing it''s ISO format (ie en-US) '
      operationId: SaveUserCultureRequestcultureCultureIso_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureIso
          in: path
          description: The culture in iso format
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveUserCultureRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/my/scope/{Module}':
    get:
      tags:
        - my
      summary: 'Retrive the default user scope id for the provided module - {GetUserScopeRequest}'
      description: Retrive the user scope id for the provided module
      operationId: GetUserScopeRequestscopeModule_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Module
          in: path
          description: The module for which the scope will be define as default
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Scope'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /modules/:
    get:
      tags:
        - modules
      summary: 'Retrieve the full list of modules. - {GetModulesRequest}'
      description: Retrieve the full list of modules.
      operationId: GetModulesRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Module>
            type: array
            items:
              $ref: '#/definitions/Module'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Module>
            type: array
            items:
              $ref: '#/definitions/Module'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/applications/{ApplicationId}/visibility':
    put:
      tags:
        - applications
      summary: 'Set the application visibility. - {SetApplicationVisibilityRequest}'
      description: Set the application visibility.
      operationId: SetApplicationVisibilityRequestApplicationIdvisibility_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ApplicationId
          in: path
          description: The id of the application
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetApplicationVisibilityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Application'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/signin:
    post:
      tags:
        - authentication
      summary: 'Redirect the user from where he came from - {SignInRequest}'
      description: Redirect the user from where he came from.
      operationId: SignInRequestsignin_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SignInRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IHttpResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/IHttpResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/signout:
    post:
      tags:
        - authentication
      summary: 'Signout the user - {SignOutRequest}'
      description: Signout the user
      operationId: SignOutRequestsignout_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SignOutRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/fedsignoutreply:
    get:
      tags:
        - authentication
      summary: 'Returns a redirect to the provided returl url. - {FederationSignoutReplyRequest}'
      description: Returns a redirect to the provided returl url. This service acts as a pass-thru for Azure active directory reply from signout.
      operationId: FederationSignoutReplyRequestfedsignoutreply_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ReturnUrl
          in: query
          description: the return URL.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IHttpResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/IHttpResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/status:
    get:
      tags:
        - authentication
      summary: 'Get the authentication status. - {GetAuthenticationStatusRequest}'
      description: Get the authentication status.
      operationId: GetAuthenticationStatusRequeststatus_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthenticatedStatus'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/profile:
    get:
      tags:
        - authentication
      summary: 'Get the user profile. - {GetUserPermissionsRequest}'
      description: Get the user profile.
      operationId: GetUserPermissionsRequestprofile_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserPermissions'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/signinwithtoken:
    post:
      tags:
        - authentication
      summary: 'Sign in the user with a received token. - {SignInWithIssuedTokenRequest}'
      description: Sign in the user with a received token.  Return the user permissions when the authentication is successfull.
      operationId: SignInWithIssuedTokenRequestsigninwithtoken_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SignInWithIssuedTokenRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserPermissions'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/signinwithcredentials:
    post:
      tags:
        - authentication
      summary: 'Sign in the user with credentials. - {SignInWithCredentialsRequest}'
      description: Sign in the user with credentials.  Return a security token.
      operationId: SignInWithCredentialsRequestsigninwithcredentials_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SignInWithCredentialsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserPermissions'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/configuration:
    get:
      tags:
        - authentication
      summary: 'Get the authentication configuration. - {GetAuthenticationConfiguration}'
      description: Get the authentication configuration.
      operationId: GetAuthenticationConfigurationconfiguration_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthenticationConfiguration'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/signinwithjwt:
    post:
      tags:
        - authentication
      summary: 'Sign in user with JWT token. Set authentication cookies and return the current user permissions. - {SignInWithJWTRequest}'
      description: Sign in user with JWT token. Set authentication cookies and return the current user permissions.
      operationId: SignInWithJWTRequestsigninwithjwt_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SignInWithJWTRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserPermissions'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authentication/customer/signin:
    post:
      tags:
        - authentication
      summary: 'Sign in the customer with credentials - {CustomerSignInRequest}'
      description: Sign in the customer with credentials.  Return a token.
      operationId: CustomerSignInRequestcustomersignin_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CustomerSignInRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Invalid credentials
          schema:
            $ref: '#/definitions/Token'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /diagnostic/caches:
    get:
      tags:
        - diagnostic
      summary: 'Get caches status  - {GetCacheStatusRequest}'
      description: Get caches status
      operationId: GetCacheStatusRequestcaches_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: query
          description: Optional. Name of the cache to retrieve. If none specified return status for all caches
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<CacheStatus>
            type: array
            items:
              $ref: '#/definitions/CacheStatus'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /diagnostic/basic:
    get:
      tags:
        - diagnostic
      summary: 'Check the latency - {BasicDiagnosticRequest}'
      description: 'Check the latency, no computation done'
      operationId: BasicDiagnosticRequestbasic_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicDiagnostic'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /diagnostic/versioninfo:
    get:
      tags:
        - diagnostic
      summary: 'Return Orckestra Commerce Cloud platform Version Information - {GetVersionInfoRequest}'
      description: Request used to return Orckestra Commerce Cloud platform Version Information
      operationId: GetVersionInfoRequestversioninfo_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the url will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VersionInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/groups/{DisplayName}/':
    post:
      tags:
        - groups
      summary: 'Create a new Group - {CreateGroupRequest}'
      description: Create a new Group
      operationId: CreateGroupRequestDisplayName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: DisplayName
          in: path
          description: the display name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Group'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/groups/{GroupId}':
    delete:
      tags:
        - groups
      summary: 'Delete the group using its id. - {DeleteGroupRequest}'
      description: Delete the group using its id.
      operationId: DeleteGroupRequestGroupId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: The group identifier.
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /groups/find/:
    post:
      tags:
        - groups
      summary: 'Find the groups with the specified name - {FindGroupsRequest}'
      description: Find the groups with the specified name
      operationId: FindGroupsRequestfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindGroupsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindGroupsResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindGroupsResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/groups/{GroupId}/':
    get:
      tags:
        - groups
      summary: 'Retrieve the group by Id. - {GetGroupRequest}'
      description: Retrieve the group by Id.
      operationId: GetGroupRequestGroupId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: The group identifier.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Group'
      deprecated: false
    put:
      tags:
        - groups
      summary: 'Save the group. - {SaveGroupRequest}'
      description: Save the group.
      operationId: SaveGroupRequestGroupId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: the object identifier of this group.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Group'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/groups/{GroupId}/users':
    get:
      tags:
        - groups
      summary: 'Retrieve the group members by group Id. - {GetGroupMembersWithPagingRequest}'
      description: 'Retrieve the group members by group Id. If MaximumItems and StartingIndex are not set, 0 is taken and so the request returns 0 results.'
      operationId: GetGroupMembersWithPagingRequestGroupIdusers_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: The group identifier.
          type: string
          required: true
        - name: StartingIndex
          in: query
          description: The starting index.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: The maximum of items to be returned.
          type: integer
          format: int32
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupMembersWithPagingResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetGroupMembersWithPagingResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/groups/{GroupId}/{UserName}':
    post:
      tags:
        - groups
      summary: 'Add a user to a group - {AddUserToGroupRequest}'
      description: Add a user to a group
      operationId: AddUserToGroupRequestGroupIdUserName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: The group identifier.
          type: string
          required: true
        - name: UserName
          in: path
          description: The username.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddUserToGroupRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - groups
      summary: 'Remove a user from a group - {RemoveUserFromGroupRequest}'
      description: Remove a user from a group
      operationId: RemoveUserFromGroupRequestGroupIdUserName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GroupId
          in: path
          description: The group identifier.
          type: string
          required: true
        - name: UserName
          in: path
          description: The username.
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{Id}':
    get:
      tags:
        - roles
      summary: 'Retrieve the role by Id. - {GetRoleByIdRequest}'
      description: Retrieve the role by Id.
      operationId: GetRoleByIdRequestId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Id
          in: path
          description: The role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Role'
      deprecated: false
    put:
      tags:
        - roles
      summary: 'Update an existing role. - {UpdateRoleRequest}'
      description: Update an existing role.
      operationId: UpdateRoleRequestId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Id
          in: path
          description: the role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateRoleRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - roles
      summary: 'Delete role. - {DeleteRoleRequest}'
      description: Delete role.
      operationId: DeleteRoleRequestId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Id
          in: path
          description: the role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ModuleId
          in: query
          description: the module identifier.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: Name
          in: query
          description: the name.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{Name}':
    post:
      tags:
        - roles
      summary: 'Create a new role. - {CreateRoleRequest}'
      description: Create a new role.
      operationId: CreateRoleRequestName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: the role name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRoleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /roles/custom:
    get:
      tags:
        - roles
      summary: 'Retrieve all the custom roles. - {GetCustomRolesRequest}'
      description: Retrieve all the custom roles.
      operationId: GetCustomRolesRequestcustom_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OrderBy
          in: query
          description: 'The ''order by attribute'' use to sort custom roles return. By default, the custom roles will be order by DisplayName.'
          type: string
          required: false
          x-nullable: false
        - name: CultureCode
          in: query
          description: 'The CultureCode is use when you sort by DisplayName. By default, the culture ''en_US'' will be use. If you don''t sort by display name, this parameter is not mandatory.'
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{ModuleId}/{RoleName}':
    get:
      tags:
        - roles
      summary: 'Retrieve the role by name and module Id - {GetRoleRequest}'
      description: Retrieve the role by name and module Id
      operationId: GetRoleRequestModuleIdRoleName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ModuleId
          in: path
          description: The module identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: RoleName
          in: path
          description: The role name.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/custom/{Name}':
    post:
      tags:
        - roles
      summary: 'Create a new custom role. - {CreateCustomRoleRequest}'
      description: Create a new custom role.
      operationId: CreateCustomRoleRequestcustomName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: the role name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCustomRoleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{ParentRoleId}/{ChildRoleId}':
    post:
      tags:
        - roles
      summary: 'Add a child role to a parent. - {AddRoleChildRequest}'
      description: Add a child role to a parent.
      operationId: AddRoleChildRequestParentRoleIdChildRoleId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ParentRoleId
          in: path
          description: the parent role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ChildRoleId
          in: path
          description: the child role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddRoleChildRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - roles
      summary: 'Remove a child role to a parent. - {RemoveRoleChildRequest}'
      description: Remove a child role to a parent.
      operationId: RemoveRoleChildRequestParentRoleIdChildRoleId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ParentRoleId
          in: path
          description: the parent role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ChildRoleId
          in: path
          description: the child role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ApplicationName
          in: query
          description: the application name.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{ParentRoleId}/child':
    post:
      tags:
        - roles
      summary: 'Add a list of child role to a parent. - {AddRoleChildrenRequest}'
      description: Add a list of child role to a parent.
      operationId: AddRoleChildrenRequestParentRoleIdchild_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ParentRoleId
          in: path
          description: the parent role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddRoleChildrenRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - roles
      summary: 'Remove a list of children roles from a parent. - {RemoveRoleChildrenRequest}'
      description: Remove a list of children roles from a parent.
      operationId: RemoveRoleChildrenRequestParentRoleIdchild_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ParentRoleId
          in: path
          description: the parent role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ChildRoleIds
          in: query
          description: the list of child role identifier.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: ApplicationName
          in: query
          description: the application name.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/custom/{RoleId}':
    put:
      tags:
        - roles
      summary: 'Save the custom role. - {SaveCustomRoleRequest}'
      description: Save the custom role.
      operationId: SaveCustomRoleRequestcustomRoleId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RoleId
          in: path
          description: the role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveCustomRoleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/{ChildRoleId}/childOf':
    post:
      tags:
        - roles
      summary: 'Check if child role id is a hierarchical child of parent role ids. - {RoleIsHierarchicalChildOfParentRolesRequest}'
      description: Check if child role id is a hierarchical child of parent role ids
      operationId: RoleIsHierarchicalChildOfParentRolesRequestChildRoleIdchildOf_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ChildRoleId
          in: path
          description: the child role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RoleIsHierarchicalChildOfParentRolesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<RoleChildAssociation>
            type: array
            items:
              $ref: '#/definitions/RoleChildAssociation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<RoleChildAssociation>
            type: array
            items:
              $ref: '#/definitions/RoleChildAssociation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/roles/systemAdministrator/{ChildRoleId}':
    post:
      tags:
        - roles
      summary: 'This message is used to add a child role to the Global Administrator Role. - {AddRoleChildToGlobalAdministratorRoleRequest}'
      description: This message is used to add a child role to the Global Administrator Role.
      operationId: AddRoleChildToGlobalAdministratorRoleRequestsystemAdministratorChildRoleId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ChildRoleId
          in: path
          description: the child role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddRoleChildToGlobalAdministratorRoleRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authorizations/GetEffectiveAuthorizations:
    post:
      tags:
        - authorizations
      summary: 'Retrieve the effective authorizations - {GetEffectiveAuthorizationsRequest}'
      description: Retrieve the effective authorizations
      operationId: GetEffectiveAuthorizationsRequestGetEffectiveAuthorizations_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetEffectiveAuthorizationsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/authorizations/{ObjectId}':
    post:
      tags:
        - authorizations
      summary: 'Grant a list of authorization to an object (user or group for instance). - {GrantAuthorizationsRequest}'
      description: 'Grant a list of authorization to an object (user or group for instance). If the RequestedScopeId is not specified all scopes will be granted (*). ObjectType is a short description about the object you are giving a permission (User, Group etc.)'
      operationId: GrantAuthorizationsRequestObjectId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ObjectId
          in: path
          description: The object identifier.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GrantAuthorizationsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - authorizations
      summary: 'Revoke a list of authorization to an object (user or group for instance). - {RevokeAuthorizationsRequest}'
      description: Revoke a list of authorization to an object (user or group for instance).
      operationId: RevokeAuthorizationsRequestObjectId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ObjectId
          in: path
          description: The object identifier.
          type: string
          required: true
        - name: AuthorizationsToRevoke
          in: query
          description: The list of authorization to revoke.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /authorizations/settings:
    get:
      tags:
        - authorizations
      summary: 'Retrieve the membership settings - {GetMembershipSettingsRequest}'
      description: Retrieve the membership settings
      operationId: GetMembershipSettingsRequestsettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MembershipSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/MembershipSettings'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/authorizations/direct/{ObjectsIds}':
    post:
      tags:
        - authorizations
      summary: 'Retrievet the direct authorizations - {GetDirectAuthorizationsRequest}'
      description: Retrieve the direct authorizations
      operationId: GetDirectAuthorizationsRequestdirectObjectsIds_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ObjectsIds
          in: path
          description: The objects identifiers.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetDirectAuthorizationsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/authorizations/{RoleId}/{ObjectId}':
    post:
      tags:
        - authorizations
      summary: 'Grant an authorization to an object (user or group for instance). - {GrantAuthorizationRequest}'
      description: 'Grant an authorization to an object (user or group for instance). If the RequestedScopeId is not specified all scopes will be granted (*). ObjectType is a short description about the object you are giving a permission (User, Group etc.)'
      operationId: GrantAuthorizationRequestRoleIdObjectId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RoleId
          in: path
          description: The role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ObjectId
          in: path
          description: The object identifier.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GrantAuthorizationRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    delete:
      tags:
        - authorizations
      summary: 'Revoke an authorization to an object (user or group for instance). - {RevokeAuthorizationRequest}'
      description: Revoke an authorization to an object (user or group for instance).
      operationId: RevokeAuthorizationRequestRoleIdObjectId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RoleId
          in: path
          description: The Role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
        - name: ObjectId
          in: path
          description: The Object identifier.
          type: string
          required: true
        - name: RequestedScopeId
          in: query
          description: The Scope identifier.
          type: string
          required: false
        - name: ObjectType
          in: query
          description: The object type.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/authorizations/{UserName}/GetEffectiveAuthorizations':
    get:
      tags:
        - authorizations
      summary: 'Retrieve the user effective authorizations - {GetUserEffectiveAuthorizationsRequest}'
      description: Retrieve the user effective authorizations
      operationId: GetUserEffectiveAuthorizationsRequestUserNameGetEffectiveAuthorizations_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username of the user.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<MembershipAuthorization>
            type: array
            items:
              $ref: '#/definitions/MembershipAuthorization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/modules/byApplicationName/{ApplicationName}':
    get:
      tags:
        - modules
      summary: 'Retrieve all the specified application modules. - {GetApplicationModules}'
      description: Retrieve all the specified application modules.
      operationId: GetApplicationModulesbyApplicationNameApplicationName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ApplicationName
          in: path
          description: The application name.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<Module>
            type: array
            items:
              $ref: '#/definitions/Module'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Module>
            type: array
            items:
              $ref: '#/definitions/Module'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /roles:
    get:
      tags:
        - roles
      summary: 'Retrieve all the roles - {GetRolesRequest}'
      description: Retrieve all the roles
      operationId: GetRolesRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/role/{RoleId}/parents':
    get:
      tags:
        - role
      summary: 'Retrieve the list of parent role of a child role - {GetParentRolesRequest}'
      description: Retrieve the list of parent role of a child role
      operationId: GetParentRolesRequestRoleIdparents_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RoleId
          in: path
          description: The child role identifier.
          type: integer
          format: int32
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Role>
            type: array
            items:
              $ref: '#/definitions/Role'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/providers/{ScopeId}/payment':
    get:
      tags:
        - providers
      summary: 'Get the payment providers information - {GetPaymentProvidersRequest}'
      description: Get the payment providers information.
      operationId: GetPaymentProvidersRequestScopeIdpayment_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProviderInfos'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /providers/fulfillment/metadata:
    get:
      tags:
        - providers
      summary: 'Get the fulfillment providers information - {GetFulfillmentProvidersMetadataRequest}'
      description: Get the fulfillment providers information.
      operationId: GetFulfillmentProvidersMetadataRequestfulfillmentmetadata_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentProvidersMetadata'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/providers/{ScopeId}/fulfillment':
    get:
      tags:
        - providers
      summary: 'Get the fulfillment providers information - {GetFulfillmentProvidersRequest}'
      description: Get the fulfillment providers information.
      operationId: GetFulfillmentProvidersRequestScopeIdfulfillment_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeParentScopes
          in: query
          description: Determines whether parent scopes are included.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentProviderInfos'
      deprecated: false
    put:
      tags:
        - providers
      summary: 'Create or update a fulfillment provider - {CreateOrUpdateFulfillmentProviderRequest}'
      description: Create or update a fulfillment provider.
      operationId: CreateOrUpdateFulfillmentProviderRequestScopeIdfulfillment_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateFulfillmentProviderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentProviderInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentProviderInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/providers/{ScopeId}/carrier':
    get:
      tags:
        - providers
      summary: 'Get the carrier providers information - {GetCarrierProvidersRequest}'
      description: Get the carrier providers information.
      operationId: GetCarrierProvidersRequestScopeIdcarrier_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeParentScopes
          in: query
          description: Determines whether parent scopes are included.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCarrierProviderInfos'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/providers/{ScopeId}/types':
    get:
      tags:
        - providers
      summary: 'Retrieve all providers configured for the given scope - {GetProvidersRequest}'
      description: Retrieve all providers of all different types configured for the given scope or retreive all providers of a specific type for a given scope.
      operationId: GetProvidersRequestScopeIdtypes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProviderType
          in: query
          description: 'Type of this provider: [''Undefined'' or ''StoreLocator'' or ''Geolocation'' or ''PrintOrder'' or ''PrintShipment'' or ''OrderProcessing'' or ''Shipping'' or ''Payment'' or ''Tax'' or ''Rounding'' or ''TargetingContext'' or ''OrderNumberGenerator'' or ''RmaNumberGenerator'' or ''DigitalAssetManagement'' or ''DirectoryProvider'' or ''MembershipProvider'' or ''Inventory'' or ''Audit'' or ''SlotInstance'' or ''PriceCalculator'' or ''SearchPriceCalculator'' or ''Search'' or ''BlobStorage'' or ''ShipmentProcessingDate'' or ''ProductImportParser'' or ''DataExchange'' or ''ProductDataExchangeImport'' or ''ProductDataExchangeExport'' or ''ProductPriceDataExchangeImport'' or ''ProductPriceDataExchangeExport'' or ''MailProvider'' or ''NotificationProvider'' or ''OrderImportParser'' or ''PromotionLineItemValidator'' or ''PickingMissionNumberGenerator'' or ''FulfillmentCarrier'' or ''FulfillmentRouting'']  // Note: ''Undefined'' retrieves all providers.'
          type: string
          required: false
          x-nullable: false
        - name: IncludeParentScopes
          in: query
          description: Determine if parent scopes are considered when retrieving providers.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProvidersResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/providers/{ScopeId}/fulfillment/{Id}':
    delete:
      tags:
        - providers
      summary: 'Delete a fulfillment provider - {DeleteFulfillmentProviderRequest}'
      description: Delete a fulfillment provider.
      operationId: DeleteFulfillmentProviderRequestScopeIdfulfillmentId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique identifier for the EntityTypeDefinition
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /providers/validateProviderSettings:
    get:
      tags:
        - providers
      summary: 'Validate the settings of a provider in the system - {ValidateProviderSettingsRequest}'
      description: Validate the settings of a provider in the system.
      operationId: ValidateProviderSettingsRequestvalidateProviderSettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ProviderId
          in: query
          description: the unique identifier of the provider to validate.
          type: string
          required: false
          x-nullable: false
        - name: ProviderType
          in: query
          description: the type of the provider to validate.
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<ValidationResult>
            type: array
            items:
              $ref: '#/definitions/ValidationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /reporting/ssrs/reports:
    get:
      tags:
        - reporting
      summary: 'Retrieve a list of all reports in Ssrs - {GetSsrsReportsRequest}'
      description: Retrieve a list of all reports in Ssrs
      operationId: GetSsrsReportsRequestssrsreports_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<Report>
            type: array
            items:
              $ref: '#/definitions/Report'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: IEnumerable<Report>
            type: array
            items:
              $ref: '#/definitions/Report'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/reporting/ssrs/reports/{ReportId}/parameters':
    post:
      tags:
        - reporting
      summary: 'Retrieve a list of all report parameterss in Ssrs - {GetSsrsReportParametersRequest}'
      description: Retrieve a list of all reports in Ssrs
      operationId: GetSsrsReportParametersRequestssrsreportsReportIdparameters_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ReportId
          in: path
          description: The report to be used for retrieving report parameters.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetSsrsReportParametersRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<ReportParameter>
            type: array
            items:
              $ref: '#/definitions/ReportParameter'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: IEnumerable<ReportParameter>
            type: array
            items:
              $ref: '#/definitions/ReportParameter'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/reporting/ssrs/reports/{ReportId}/previews':
    post:
      tags:
        - reporting
      summary: 'Retrieve a preview image of a report in Ssrs - {CreateSsrsReportPreviewRequest}'
      description: Retrieve a preview image of a report in Ssrs
      operationId: CreateSsrsReportPreviewRequestssrsreportsReportIdpreviews_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ReportId
          in: path
          description: The report to be used for retrieving the preview image.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateSsrsReportPreviewRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReportPreview'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ReportPreview'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/reporting/ssrs/reports/{ReportId}/export':
    post:
      tags:
        - reporting
      summary: 'Export a report from Ssrs - {ExportSsrsReportRequest}'
      description: Export a report from Ssrs
      operationId: ExportSsrsReportRequestssrsreportsReportIdexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ReportId
          in: path
          description: The report to be used for retrieving the preview image.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportSsrsReportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /reporting/ssrs/reports/renderingformats:
    get:
      tags:
        - reporting
      summary: 'Retrieve a list of supported rendering formats for an Ssrs export - {GetSsrsRenderingFormatsRequest}'
      description: Retrieve a list of supported rendering formats for an Ssrs export
      operationId: GetSsrsRenderingFormatsRequestssrsreportsrenderingformats_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<ReportExportType>
            type: array
            items:
              type: string
              x-nullable: false
        '401':
          description: You must be authenticated to use this request
          schema:
            title: IEnumerable<ReportExportType>
            type: array
            items:
              type: string
              x-nullable: false
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/searchqueries/{ScopeId}/{QueryType}/{Name}':
    get:
      tags:
        - searchqueries
      summary: 'Gets a search query based on its Scope, its type and its name. - {GetSearchQueryByNameRequest}'
      description: 'Gets a search query based on its Scope, its type and its name.'
      operationId: GetSearchQueryByNameRequestScopeIdQueryTypeName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: QueryType
          in: path
          description: The type of the requested search query
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the requested search query
          type: string
          required: true
        - name: UseScopeStrictMode
          in: query
          description: 'Indicates whether the system should use a strict mode (allow only Sales Scope), or should search for a parent Sales Scope'
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchQuery'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchQuery'
        '404':
          description: No search query matching the provided parameters could be found.
          schema:
            $ref: '#/definitions/SearchQuery'
      deprecated: false
    put:
      tags:
        - searchqueries
      summary: 'Updates a Search Query. - {UpdateSearchQueryRequest}'
      description: Updates a Search Query.
      operationId: UpdateSearchQueryRequestScopeIdQueryTypeName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: QueryType
          in: path
          description: The type of the requested search query
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the requested search query
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateSearchQueryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchQuery'
      deprecated: false
    post:
      tags:
        - searchqueries
      summary: 'Creates a Search Query. - {CreateSearchQueryRequest}'
      description: Creates a Search Query.
      operationId: CreateSearchQueryRequestScopeIdQueryTypeName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: QueryType
          in: path
          description: The type of the requested search query
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the requested search query
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateSearchQueryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchQuery'
      deprecated: false
    delete:
      tags:
        - searchqueries
      summary: 'Deletes a search query based on its Scope, its type and its name. - {DeleteSearchQueryRequest}'
      description: 'Deletes a search query based on its Scope, its type and its name.'
      operationId: DeleteSearchQueryRequestScopeIdQueryTypeName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: QueryType
          in: path
          description: The type of the requested search query
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the requested search query
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/searchqueries/{ScopeId}/find':
    post:
      tags:
        - searchqueries
      summary: 'Finds search queries based on the Scope and the specified filters. - {FindSearchQueriesRequest}'
      description: Finds search queries based on the Scope and the specified filters.
      operationId: FindSearchQueriesRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindSearchQueriesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindSearchQueriesResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindSearchQueriesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/templates/{ScopeId}/Variables/{Name}':
    put:
      tags:
        - templates
      summary: 'Create or update a template variable - {CreateOrUpdateTemplateVariableRequest}'
      description: Create or update a template variable
      operationId: CreateOrUpdateTemplateVariableRequestScopeIdVariablesName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Name
          in: path
          description: The template variable's name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateTemplateVariableRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TemplateVariable'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TemplateVariable'
      deprecated: false
    delete:
      tags:
        - templates
      summary: 'Deletes a template variable - {DeleteTemplateVariableRequest}'
      description: Deletes a template variable
      operationId: DeleteTemplateVariableRequestScopeIdVariablesName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Name
          in: path
          description: The name of the template variable to be deleted from the scope.
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/templates/{ScopeId}/{Type}/{Name}':
    get:
      tags:
        - templates
      summary: 'Retrieves a template available for a scope and a name - {GetTemplateByNameRequest}'
      description: Retrieve a template available for a scope and a name
      operationId: GetTemplateByNameRequestScopeIdTypeName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Type
          in: path
          description: Type of the template to retrieve
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: Name of the template to retrieve
          type: string
          required: true
        - name: IncludeContents
          in: query
          description: Determines whether the template content will be included with the result
          type: boolean
          required: false
          x-nullable: false
        - name: Cultures
          in: query
          description: List of cultures for which to retrieve the content
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: ActiveOnly
          in: query
          description: Determines whether the result will include inactive templates
          type: boolean
          required: false
          x-nullable: false
        - name: ReplaceTemplateVariables
          in: query
          description: Determines if the template variable tags will be replaced with their actual values.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Template'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Template'
      deprecated: false
    post:
      tags:
        - templates
      summary: 'Create a new template - {CreateTemplateRequest}'
      description: Create a new template
      operationId: CreateTemplateRequestScopeIdTypeName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Type
          in: path
          description: Template type to create
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: Template name
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateTemplateRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Template'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Template'
      deprecated: false
    delete:
      tags:
        - templates
      summary: 'Delete a template - {DeleteTemplateRequest}'
      description: Delete a template
      operationId: DeleteTemplateRequestScopeIdTypeName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Type
          in: path
          description: the type of the template
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: the name of the template
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/templates/{ScopeId}/Variables':
    get:
      tags:
        - templates
      summary: 'Gets a list of template variables for a scope - {GetTemplateVariablesRequest}'
      description: Gets a list of template variables for a scope
      operationId: GetTemplateVariablesRequestScopeIdVariables_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<TemplateVariable>
            type: array
            items:
              $ref: '#/definitions/TemplateVariable'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<TemplateVariable>
            type: array
            items:
              $ref: '#/definitions/TemplateVariable'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/templates/{ScopeId}/{Type}':
    get:
      tags:
        - templates
      summary: 'Retrieve a list of all templates available for a scope and a type - {GetTemplatesRequest}'
      description: Retrieve a list of all templates available for a scope and a type
      operationId: GetTemplatesRequestScopeIdType_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Type
          in: path
          description: Template type to retrieve
          type: string
          required: true
          x-nullable: false
        - name: IncludeContents
          in: query
          description: Determines whether the template content will be included with the result
          type: boolean
          required: false
          x-nullable: false
        - name: ActiveOnly
          in: query
          description: Determines whether the result will include inactive templates
          type: boolean
          required: false
          x-nullable: false
        - name: Cultures
          in: query
          description: List of cultures for which to retrieve the content
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: ReplaceTemplateVariables
          in: query
          description: Determines if the template variable tags will be replaced with their actual values.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Template>
            type: array
            items:
              $ref: '#/definitions/Template'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Template>
            type: array
            items:
              $ref: '#/definitions/Template'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}':
    get:
      tags:
        - users
      summary: 'Retrieve the user by its username - {GetUserRequest}'
      description: Retrieve the user by its username
      operationId: GetUserRequestUserName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username of user.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/User'
        '404':
          description: The user was not found.
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    put:
      tags:
        - users
      summary: 'Save the user. - {SaveUserRequest}'
      description: Save the user.
      operationId: SaveUserRequestUserName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: the username of the user.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    post:
      tags:
        - users
      summary: 'Create a new user - {CreateUserRequest}'
      description: Create a new user
      operationId: CreateUserRequestUserName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: the name of the user.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    delete:
      tags:
        - users
      summary: 'Delete the user. - {DeleteUserRequest}'
      description: Delete the user using its username.
      operationId: DeleteUserRequestUserName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username of the user.
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /users/find:
    post:
      tags:
        - users
      summary: 'Find the users by name. Search in userPrincipalName, displayName and givenName - {FindUsersByNameRequest}'
      description: 'Find the users by name. Search in userPrincipalName, displayName and givenName'
      operationId: FindUsersByNameRequestfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindUsersByNameRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindUsersByNameResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindUsersByNameResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /users/domains:
    get:
      tags:
        - users
      summary: 'Retrieve the available domains of the tenant. - {GetAvailableDomainsRequest}'
      description: Retrieve the available domains of the tenant.
      operationId: GetAvailableDomainsRequestdomains_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<String>
            type: array
            items:
              type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<String>
            type: array
            items:
              type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /users/desactivate:
    put:
      tags:
        - users
      summary: 'Deactivate a batch of users using theirs usernames - {DeactivateUsersRequest}'
      description: Deactivate a batch of users using theirs usernames
      operationId: DeactivateUsersRequestdesactivate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DeactivateUsersRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /users/activate:
    put:
      tags:
        - users
      summary: 'Activate a batch of users using theirs usernames - {ActivateUsersRequest}'
      description: Activate a batch of users using theirs usernames
      operationId: ActivateUsersRequestactivate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ActivateUsersRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}/deactivate':
    post:
      tags:
        - users
      summary: 'Deactivate the user using its username - {DeactivateUserRequest}'
      description: Deactivate the user using its username
      operationId: DeactivateUserRequestUserNamedeactivate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The name of the user.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DeactivateUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}/activate':
    post:
      tags:
        - users
      summary: 'Activate the user. - {ActivateUserRequest}'
      description: Activate the user using its username.
      operationId: ActivateUserRequestUserNameactivate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ActivateUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}/resetUserPassword':
    put:
      tags:
        - users
      summary: 'Reset the user password. - {ResetUserPasswordRequest}'
      description: Reset the user password.
      operationId: ResetUserPasswordRequestUserNameresetUserPassword_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username of the user.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ResetUserPasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetUserPasswordResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ResetUserPasswordResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}/forceChangePassword':
    post:
      tags:
        - users
      summary: 'Force the change of a user''s password. - {ForceChangeUserPasswordRequest}'
      description: Force the change of a user's password.
      operationId: ForceChangeUserPasswordRequestUserNameforceChangePassword_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ForceChangeUserPasswordRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/users/{UserName}/groups':
    get:
      tags:
        - users
      summary: 'Retrieve the user''s group(s). - {GetUserGroupsRequest}'
      description: Retrieve the user's group(s).
      operationId: GetUserGroupsRequestUserNamegroups_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UserName
          in: path
          description: The username of the user.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<Group>
            type: array
            items:
              $ref: '#/definitions/Group'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Group>
            type: array
            items:
              $ref: '#/definitions/Group'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/definitions/order/{Name}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the entity definition from Orders entities - {GetOrderDefinitionRequest}'
      description: 'Retrieve the entity definition from Orders entities. A definition is a list of properties that is allowed to be set to the instance being used. Warning : The name is case sensitive'
      operationId: GetOrderDefinitionRequestdefinitionsorderName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The id to retrieve related entity definition
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EntityDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/EntityDefinition'
        '404':
          description: Requested definition not found
          schema:
            $ref: '#/definitions/EntityDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/definitions/customer/{Name}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the entity definition from Profiles entities - {GetCustomerDefinitionRequest}'
      description: 'Retrieve the entity definition from Profiles entities. A definition is a list of properties that is allowed to be set to the instance being used. Warning : The name is case sensitive'
      operationId: GetCustomerDefinitionRequestdefinitionscustomerName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The id to retrieve related entity definition
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EntityDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/EntityDefinition'
        '404':
          description: Requested definition not found
          schema:
            $ref: '#/definitions/EntityDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/definitions/product/{Name}':
    put:
      tags:
        - metadata
      summary: 'Update a product definition - {UpdateProductDefinitionRequest}'
      description: Update a product definition.
      operationId: UpdateProductDefinitionRequestdefinitionsproductName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the product definition
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDefinition'
      deprecated: false
    post:
      tags:
        - metadata
      summary: 'Create a product definition - {CreateProductDefinitionRequest}'
      description: Create a product definition.
      operationId: CreateProductDefinitionRequestdefinitionsproductName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the product definition.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateProductDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/definitions/category/{Name}':
    put:
      tags:
        - metadata
      summary: 'Update a category definition - {UpdateCategoryDefinitionRequest}'
      description: Update a category definition.
      operationId: UpdateCategoryDefinitionRequestdefinitionscategoryName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the category definition
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCategoryDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDefinition'
      deprecated: false
    post:
      tags:
        - metadata
      summary: 'Create a category definition - {CreateCategoryDefinitionRequest}'
      description: Create a category definition.
      operationId: CreateCategoryDefinitionRequestdefinitionscategoryName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the category definition.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCategoryDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/lookups/product/{LookupName}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the lookup from Products lookups - {GetProductLookupRequest}'
      description: 'This entity represents a lookup, defining its metadata for Product entity. Overture provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetProductLookupRequestlookupsproductLookupName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The id to retrieve related lookup
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '404':
          description: Requested lookup id not found
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    put:
      tags:
        - metadata
      summary: 'Update a product lookup type definition - {UpdateProductLookupTypeDefinitionRequest}'
      description: Update a product lookup type definition
      operationId: UpdateProductLookupTypeDefinitionRequestlookupsproductLookupName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The name of this lookup
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductLookupTypeDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    post:
      tags:
        - metadata
      summary: 'Creates a new product lookup type definition - {CreateProductLookupTypeDefinitionRequest}'
      description: Creates a new product lookup type definition
      operationId: CreateProductLookupTypeDefinitionRequestlookupsproductLookupName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The name of this lookup
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateProductLookupTypeDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/lookups/order/{LookupName}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the lookup from Orders lookups - {GetOrderLookupRequest}'
      description: 'This entity represents a lookup, defining its metadata for Order entity. Overture provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetOrderLookupRequestlookupsorderLookupName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The id to retrieve related lookup
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '404':
          description: Requested lookup id not found
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/lookups/marketing/{LookupName}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the lookup from Marketing lookups - {GetMarketingLookupRequest}'
      description: 'This entity represents a lookup, defining its metadata for Marketing entity. Overture provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetMarketingLookupRequestlookupsmarketingLookupName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The id to retrieve related lookup
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '404':
          description: Requested lookup id not found
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/lookups/customer/{LookupName}':
    get:
      tags:
        - metadata
      summary: 'Retrieve the lookup from Profiles lookups - {GetCustomerLookupRequest}'
      description: 'This entity represents a lookup, defining its metadata for Customer entity. Overture provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetCustomerLookupRequestlookupscustomerLookupName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The id to retrieve related lookup
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '404':
          description: Requested lookup id not found
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/attributes/product/{AttributeName}':
    put:
      tags:
        - metadata
      summary: 'Update a product attribute - {UpdateProductAttributeRequest}'
      description: Update a product attribute.
      operationId: UpdateProductAttributeRequestattributesproductAttributeName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AttributeName
          in: path
          description: The name of the attribute
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductAttributeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPropertyDefinition'
      deprecated: false
    post:
      tags:
        - metadata
      summary: 'Create a product attribute - {CreateProductAttributeRequest}'
      description: Create a product attribute.
      operationId: CreateProductAttributeRequestattributesproductAttributeName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AttributeName
          in: path
          description: The name of the attribute
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateProductAttributeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPropertyDefinition'
      deprecated: false
    delete:
      tags:
        - metadata
      summary: 'Delete a product attribute - {DeleteProductAttributeRequest}'
      description: Delete a product attribute.
      operationId: DeleteProductAttributeRequestattributesproductAttributeName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AttributeName
          in: path
          description: The name of the attribute
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/attributegroups/product/find:
    post:
      tags:
        - metadata
      summary: 'Get list of product attribute groups - {FindProductAttributeGroupsRequest}'
      description: Get list of product attribute groups.
      operationId: FindProductAttributeGroupsRequestattributegroupsproductfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindProductAttributeGroupsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPropertyDefinitionGroupQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/attributegroups/product/{Name}':
    put:
      tags:
        - metadata
      summary: 'Update a product attribute group - {UpdateProductAttributeGroupRequest}'
      description: Update a product attribute group.
      operationId: UpdateProductAttributeGroupRequestattributegroupsproductName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the attribute group
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductAttributeGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPropertyDefinitionGroup'
      deprecated: false
    post:
      tags:
        - metadata
      summary: 'Create a product attribute group - {CreateProductAttributeGroupRequest}'
      description: Create a product attribute group.
      operationId: CreateProductAttributeGroupRequestattributegroupsproductName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the attribute group
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateProductAttributeGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPropertyDefinitionGroup'
      deprecated: false
    delete:
      tags:
        - metadata
      summary: 'Delete a product attribute group - {DeleteProductAttributeGroupRequest}'
      description: Delete a product attribute group.
      operationId: DeleteProductAttributeGroupRequestattributegroupsproductName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The name of the attribute group
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/LookupType/Marketing/{LookupName}':
    post:
      tags:
        - metadata
      summary: 'Update a marketing lookup type definition - {UpdateMarketingLookupTypeDefinitionRequest}'
      description: Update a marketing lookup type definition
      operationId: UpdateMarketingLookupTypeDefinitionRequestLookupTypeMarketingLookupName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The name of this lookup
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateMarketingLookupTypeDefinitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lookup'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/definitions/order:
    get:
      tags:
        - metadata
      summary: 'Retrieve the entity definitions defined in Orders - {GetOrderDefinitionsRequest}'
      description: Retrieve the entity definitions defined in Orders. A definition is a list of properties that is allowed to be set to the instance of entity being used
      operationId: GetOrderDefinitionsRequestdefinitionsorder_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
        '404':
          description: Requested definitions not found
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/definitions/customer:
    get:
      tags:
        - metadata
      summary: 'Retrieve the entity definitions in Profiles - {GetCustomerDefinitionsRequest}'
      description: Retrieve the customer entity definitions in Profiles. A definition is a list of properties that is allowed to be set to the instance of entity being used.
      operationId: GetCustomerDefinitionsRequestdefinitionscustomer_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
        '404':
          description: Requested definitions not found
          schema:
            title: List<EntityDefinition>
            type: array
            items:
              $ref: '#/definitions/EntityDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/EntityType/{EntityTypeName}':
    post:
      tags:
        - metadata
      summary: 'Create a new custom profile definition - {CreateEntityTypeRequest}'
      description: Create a new entity type definition
      operationId: CreateEntityTypeRequestEntityTypeEntityTypeName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: EntityTypeName
          in: path
          description: The unique name for this entity type.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateEntityTypeRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/lookups/marketing/:
    get:
      tags:
        - metadata
      summary: 'Retrieve the Marketing lookups - {GetMarketingLookupsRequest}'
      description: 'This entity represents a lookup, defining its metadata for Marketing entity. Orckestra provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetMarketingLookupsRequestlookupsmarketing_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Lookup>
            type: array
            items:
              $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/lookups/order/:
    get:
      tags:
        - metadata
      summary: 'Retrieve the Orders lookups - {GetOrderLookupsRequest}'
      description: 'This entity represents a lookup, defining its metadata for Order entity. Orckestra provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetOrderLookupsRequestlookupsorder_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Lookup>
            type: array
            items:
              $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/lookups/customer/:
    get:
      tags:
        - metadata
      summary: 'Retrieve the Profiles lookups - {GetCustomerLookupsRequest}'
      description: 'This entity represents a lookup, defining its metadata for Customer entity. Orckestra provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetCustomerLookupsRequestlookupscustomer_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Lookup>
            type: array
            items:
              $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/lookups/product/:
    get:
      tags:
        - metadata
      summary: 'Retrieve the Product lookups - {GetProductLookupsRequest}'
      description: 'This entity represents a lookup, defining its metadata for Product entity. Orckestra provides, out-of-the-box, a list of lookups which can be enriched by the administrator'
      operationId: GetProductLookupsRequestlookupsproduct_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Lookup>
            type: array
            items:
              $ref: '#/definitions/Lookup'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/metadata/lookups/product/{LookupName}/values':
    delete:
      tags:
        - metadata
      summary: 'Delete specified values from a product lookup type definition - {DeleteProductLookupValuesRequest}'
      description: Delete specified values from a product lookup type definition
      operationId: DeleteProductLookupValuesRequestlookupsproductLookupNamevalues_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LookupName
          in: path
          description: The name of a lookup
          type: string
          required: true
        - name: Values
          in: query
          description: The list of values to be removed from this lookup.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /countries:
    get:
      tags:
        - countries
      summary: 'Retrieve all countries - {GetCountriesRequest}'
      description: Retrieve all countries.
      operationId: GetCountriesRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeUnsupported
          in: query
          description: Whether to include the unsupported countries
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRegions
          in: query
          description: Whether to include the regions in each country
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Country>
            type: array
            items:
              $ref: '#/definitions/Country'
        '401':
          description: You must be authenticated for using this request
          schema:
            title: List<Country>
            type: array
            items:
              $ref: '#/definitions/Country'
      deprecated: false
    post:
      tags:
        - countries
      summary: 'Adds a country - {AddCountryRequest}'
      description: Adds a country.
      operationId: AddCountryRequest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddCountryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Country'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Country'
        '404':
          description: The specified country was not found.
          schema:
            $ref: '#/definitions/Country'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/countries/{CountryIsoCode}':
    get:
      tags:
        - countries
      summary: 'Retrieve a country - {GetCountryRequest}'
      description: Retrieve a country using its ISO code
      operationId: GetCountryRequestCountryIsoCode_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CountryIsoCode
          in: path
          description: The countryIsoCode (unique) that identifies the country to retrieve
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeRegions
          in: query
          description: Whether to include the regions in each country
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Country'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Country'
        '404':
          description: The specified country was not found.
          schema:
            $ref: '#/definitions/Country'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/countries/{IsoCode}':
    put:
      tags:
        - countries
      summary: 'Update a country and associated regions - {UpdateCountryAndRegionsRequest}'
      description: Updates a country and associated regions.
      operationId: UpdateCountryAndRegionsRequestIsoCode_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: IsoCode
          in: path
          description: Two letter code that identifies Country uniquely (ISO 3166)
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCountryAndRegionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Country'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Country'
        '404':
          description: The specified country was not found.
          schema:
            $ref: '#/definitions/Country'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/countries/{CountryIsoCode}/regions':
    get:
      tags:
        - countries
      summary: 'Retrieve all regions of a country - {GetRegionsRequest}'
      description: Retrieve all regions of a country
      operationId: GetRegionsRequestCountryIsoCoderegions_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CountryIsoCode
          in: path
          description: The unique countryIsoCode that identifies the country whose regions will be retrieved
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeUnsupported
          in: query
          description: Whether to include the unsupported regions
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Region>
            type: array
            items:
              $ref: '#/definitions/Region'
        '401':
          description: You must be authenticated for using this request
          schema:
            title: List<Region>
            type: array
            items:
              $ref: '#/definitions/Region'
        '404':
          description: Requested country iso code not found
          schema:
            title: List<Region>
            type: array
            items:
              $ref: '#/definitions/Region'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cultures:
    get:
      tags:
        - cultures
      summary: 'Retrieve all supported cultures of the system - {GetSupportedCulturesRequest}'
      description: Retrieve all supported cultures of the system
      operationId: GetSupportedCulturesRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<Culture>
            type: array
            items:
              $ref: '#/definitions/Culture'
        '401':
          description: You must be authenticated for using this request
          schema:
            title: List<Culture>
            type: array
            items:
              $ref: '#/definitions/Culture'
      deprecated: false
    put:
      tags:
        - cultures
      summary: 'Updates the list of supported cultures in the system - {SetSupportedCulturesRequest}'
      description: Updates the list of supported cultures in the system
      operationId: SetSupportedCulturesRequest_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetSupportedCulturesRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated for using this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cultures/all:
    get:
      tags:
        - cultures
      summary: 'Retrieve all cultures known to the system, including non supported - {GetAllCulturesRequest}'
      description: 'Retrieve all cultures known to the system, including non supported'
      operationId: GetAllCulturesRequestall_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CultureList'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/CultureList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cultures/default:
    put:
      tags:
        - cultures
      summary: 'Sets the default culture for the system - {SetDefaultCultureRequest}'
      description: Sets the default culture for the system
      operationId: SetDefaultCultureRequestdefault_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetDefaultCultureRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated for using this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /timezones:
    get:
      tags:
        - timezones
      summary: 'Retrieve a list of all time zones - {GetTimeZonesRequest}'
      description: Retrieve a list of all time zones
      operationId: GetTimeZonesRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<TimeZone>
            type: array
            items:
              $ref: '#/definitions/TimeZone'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<TimeZone>
            type: array
            items:
              $ref: '#/definitions/TimeZone'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /timezones/convert:
    post:
      tags:
        - timezones
      summary: 'Convert a UTC datetime to a specific TimeZone datetime - {FindUtcOffsetForTimeZoneRequest}'
      description: Convert a UTC datetime to a specific TimeZone datetime
      operationId: FindUtcOffsetForTimeZoneRequestconvert_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindUtcOffsetForTimeZoneRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UtcOffsetForTimeZone'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/UtcOffsetForTimeZone'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/currencies:
    get:
      tags:
        - metadata
      summary: 'Retrieve all currencies - {GetCurrenciesRequest}'
      description: Retrieve all currencies.
      operationId: GetCurrenciesRequestcurrencies_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeUnsupported
          in: query
          description: Whether to include the unsupported currencies
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCurrenciesResponse'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/GetCurrenciesResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /metadata/targeting:
    get:
      tags:
        - metadata
      summary: 'Return the targeting items (metadata used to construct targeting expression) - {GetTargetingMetadataRequest}'
      description: Return the targeting items (metadata used to construct targeting expression)
      operationId: GetTargetingMetadataRequesttargeting_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTargetingMetadataResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetTargetingMetadataResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/scopes/{ScopeId}':
    get:
      tags:
        - scopes
      summary: 'Retreive a specific scope - {GetScopeRequest}'
      description: Returns the requested scope. Optionally include Children and Currency information if the corresponding flags are set
      operationId: GetScopeRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: IncludeChildren
          in: query
          description: Whether to include the entire scope map
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeCurrency
          in: query
          description: Whether to include the associated currency
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Scope'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Scope'
        '404':
          description: Requested scope id not found
          schema:
            $ref: '#/definitions/Scope'
      deprecated: false
    put:
      tags:
        - scopes
      summary: 'Update a scope - {UpdateScopeRequest}'
      description: Update a scope
      operationId: UpdateScopeRequestScopeId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The unique identifier of the scope to create.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateScopeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Scope'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Scope'
      deprecated: false
    post:
      tags:
        - scopes
      summary: 'Create a scope - {CreateScopeRequest}'
      description: Create a scope
      operationId: CreateScopeRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The unique identifier of the scope to create.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateScopeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Scope'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Scope'
      deprecated: false
    delete:
      tags:
        - scopes
      summary: 'Delete a scope - {DeleteScopeRequest}'
      description: Delete a scope
      operationId: DeleteScopeRequestScopeId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The unique identifier of the scope to delete.
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/scopes/{ScopeId}/children':
    get:
      tags:
        - scopes
      summary: 'Retreive the children of a specific scope - {GetScopeChildrenRequest}'
      description: Return a list of children scopes for the requested parent scope
      operationId: GetScopeChildrenRequestScopeIdchildren_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeCurrency
          in: query
          description: Whether to include the associated currency
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Scope>
            type: array
            items:
              $ref: '#/definitions/Scope'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Scope>
            type: array
            items:
              $ref: '#/definitions/Scope'
        '404':
          description: Requested scope id not found
          schema:
            title: List<Scope>
            type: array
            items:
              $ref: '#/definitions/Scope'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/configurations/variant':
    get:
      tags:
        - search
      summary: 'Returns the list of variant search configurations in the system. - {GetVariantSearchConfigurationsRequest}'
      description: Returns the list of variant search configurations in the system.
      operationId: GetVariantSearchConfigurationsRequestScopeIdconfigurationsvariant_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<VariantSearchConfiguration>
            type: array
            items:
              $ref: '#/definitions/VariantSearchConfiguration'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<VariantSearchConfiguration>
            type: array
            items:
              $ref: '#/definitions/VariantSearchConfiguration'
        '404':
          description: Requested configurations not found
          schema:
            title: List<VariantSearchConfiguration>
            type: array
            items:
              $ref: '#/definitions/VariantSearchConfiguration'
      deprecated: false
    put:
      tags:
        - search
      summary: 'Adds or updates the variant search configuration for the specified product definition. - {AddOrUpdateVariantSearchConfigurationRequest}'
      description: Adds or updates the variant search configuration for the specified product definition.
      operationId: AddOrUpdateVariantSearchConfigurationRequestScopeIdconfigurationsvariant_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateVariantSearchConfigurationRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested configurations not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/products':
    post:
      tags:
        - search
      summary: 'Search for product - {SearchProductRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchProductRequestScopeIdCultureNameproducts_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchProductRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/customers':
    post:
      tags:
        - search
      summary: 'Search for customers - {SearchCustomersRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchCustomersRequestScopeIdCultureNamecustomers_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchCustomersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/availableProducts':
    post:
      tags:
        - search
      summary: 'Search for products available in the inventory - {SearchAvailableProductsRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchAvailableProductsRequestScopeIdCultureNameavailableProducts_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchAvailableProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductSearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductSearchResult'
        '404':
          description: Requested available products not found
          schema:
            $ref: '#/definitions/ProductSearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/advanced/{IndexName}':
    post:
      tags:
        - search
      summary: 'Make a generic search - {AdvancedSearchRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: AdvancedSearchRequestScopeIdCultureNameadvancedIndexName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: IndexName
          in: path
          description: 'The required name of the index to query: [Products, Customers, Stores, Inventories, ...]. See orckestra.overture.solr section in web.config for the complete list.'
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AdvancedSearchRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/products/byIds':
    post:
      tags:
        - search
      summary: 'Search product by ids - {SearchProductByIdsRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchProductByIdsRequestScopeIdCultureNameproductsbyIds_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchProductByIdsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/products/bySavedQuery/{QueryId}':
    post:
      tags:
        - search
      summary: 'Search product by saved query - {SearchProductBySavedQueryRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchProductBySavedQueryRequestScopeIdCultureNameproductsbySavedQueryQueryId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: QueryId
          in: path
          description: the id of the saved query to execute.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchProductBySavedQueryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/products/similar/{ProductId}':
    post:
      tags:
        - search
      summary: 'Search for similar products - {SearchSimilarProductsRequest}'
      description: Search for similar products
      operationId: SearchSimilarProductsRequestScopeIdCultureNameproductssimilarProductId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture name in which language tha data will be returned
          type: string
          required: true
        - name: ProductId
          in: path
          description: The product id
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchSimilarProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/bySearchQuery/{QueryType}/{QueryName}':
    post:
      tags:
        - search
      summary: 'Search using a Search Query as a template - {SearchBySearchQueryRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchBySearchQueryRequestScopeIdCultureNamebySearchQueryQueryTypeQueryName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: QueryType
          in: path
          description: The type of the requested search query
          type: string
          required: true
          x-nullable: false
        - name: QueryName
          in: path
          description: The name of the requested search query
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchBySearchQueryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/activities/{TaskId}':
    post:
      tags:
        - tasks
      summary: 'Queue a new task activity - {QueueActivityTaskRequest}'
      description: Queue a new task activity
      operationId: QueueActivityTaskRequestactivitiesTaskId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/QueueActivityTaskRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/workflows/{TaskId}':
    post:
      tags:
        - tasks
      summary: 'Queue a new task workflow - {QueueWorkflowTaskRequest}'
      description: Queue a new task workflow
      operationId: QueueWorkflowTaskRequestworkflowsTaskId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/QueueWorkflowTaskRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/{TaskId}/logs':
    get:
      tags:
        - tasks
      summary: 'Retrieve the log entries from a long running task - {GetTaskExecutionLogsRequest}'
      description: Retrieve the log entries from a long running task
      operationId: GetTaskExecutionLogsRequestTaskIdlogs_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TaskExecutionLogEntry>
            type: array
            items:
              $ref: '#/definitions/TaskExecutionLogEntry'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/byCorrelationId/{Id}':
    get:
      tags:
        - tasks
      summary: 'Retrieve the state of long running tasks by correlation id - {GetTasksInfoByCorrelationIdRequest}'
      description: Retrieve the state of long running tasks by correlation id
      operationId: GetTasksInfoByCorrelationIdRequestbyCorrelationIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Id
          in: path
          description: The task correlation identifier
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/{TaskId}/cancel':
    post:
      tags:
        - tasks
      summary: 'Cancels the specified long running (batch processing) task. - {CancelTaskRequest}'
      description: Cancels the specified long running (batch processing) task.
      operationId: CancelTaskRequestTaskIdcancel_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelTaskRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /tasks/scheduled/all:
    get:
      tags:
        - tasks
      summary: 'Retrieve a list of all the scheduled tasks - {GetAllScheduledTasksRequest}'
      description: Retrieve a list of all the scheduled tasks
      operationId: GetAllScheduledTasksRequestscheduledall_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<ScheduledTaskInfo>
            type: array
            items:
              $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    delete:
      tags:
        - tasks
      summary: 'Remove all the scheduled task activities - {DeleteAllScheduledTasksRequest}'
      description: Remove all the scheduled task activities
      operationId: DeleteAllScheduledTasksRequestscheduledall_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /tasks/scheduled/running:
    get:
      tags:
        - tasks
      summary: 'Retrieve the job info of the currently running scheduled tasks - {GetRunningScheduledTasksRequest}'
      description: Retrieve the job info of the currently running scheduled tasks
      operationId: GetRunningScheduledTasksRequestscheduledrunning_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            title: List<RunningScheduledTaskInfo>
            type: array
            items:
              $ref: '#/definitions/RunningScheduledTaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /tasks:
    get:
      tags:
        - tasks
      summary: 'Retrieve a list of long running tasks for a specified requester - {GetRequesterTasksInfoRequest}'
      description: Retrieve a list of long running tasks for a specified requester
      operationId: GetRequesterTasksInfoRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Requester
          in: query
          description: The username of the user that requested the tasks.
          type: string
          required: false
        - name: LastModified
          in: query
          description: The last modification date of the task. Use this to limit the results to items after this date
          type: string
          format: date-time
          required: false
        - name: FilterTaskNames
          in: query
          description: 'The array of task type names to filter by, if none specified, no filtering is performed. The type names are the fully qualified type names (Eg. Orckestra.Overture.Providers.CommerceEngine.Profiles.ProfileSchemaImportTask, Orckestra.Overture.Providers.CommerceEngine)'
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/{TaskId}':
    get:
      tags:
        - tasks
      summary: 'Retrieve the state of a long running task - {GetTaskInfoRequest}'
      description: Retrieve the state of a long running task
      operationId: GetTaskInfoRequestTaskId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    delete:
      tags:
        - tasks
      summary: 'Delete a long running task - {DeleteTaskInfoRequest}'
      description: Delete a long running task
      operationId: DeleteTaskInfoRequestTaskId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskId
          in: path
          description: The task identifier.
          type: string
          required: true
          x-nullable: false
        - name: Force
          in: query
          description: force delete task.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/templates/{ScopeId}/{Type}/{Name}/{Culture}':
    put:
      tags:
        - templates
      summary: 'Update a template - {UpdateTemplateRequest}'
      description: Update a template
      operationId: UpdateTemplateRequestScopeIdTypeNameCulture_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Type
          in: path
          description: the type of the template
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: the name of the template
          type: string
          required: true
        - name: Culture
          in: path
          description: the culture of the template
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateTemplateRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Template'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /token:
    post:
      tags:
        - token
      summary: 'Retrieve an authentication token to be able to access external tool like the product picker - {GetTokenRequest}'
      description: Retrieve an authentication token to be able to access external tool like the product picker. An encrypted security token to pass to the tool
      operationId: GetTokenRequest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetTokenRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '422':
          description: Validation error.
          schema:
            $ref: '#/definitions/Token'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /token/customer/guest:
    get:
      tags:
        - token
      summary: 'Retrieve an authentication token for a guest customer to be able to access external tool like the product picker - {GetGuestTokenRequest}'
      description: Retrieve an authentication token for a guest customer to be able to access external tool like the product picker. An encrypted security token to pass to the tool
      operationId: GetGuestTokenRequestcustomerguest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ExpiryDate
          in: query
          description: The expiry date of the token. It must be in the future.
          type: string
          format: date-time
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '422':
          description: Validation error.
          schema:
            $ref: '#/definitions/Token'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/my/scope/{Module}/tree':
    get:
      tags:
        - my
      summary: 'Retrieve scope tree based on the user permissions for the provided module - {GetUserScopeTreeRequest}'
      description: Retrieve scope tree based on the user permissions for the provided module
      operationId: GetUserScopeTreeRequestscopeModuletree_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Module
          in: path
          description: The module for which the scope tree is returned.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizedScope'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/my/scope/{Module}/{ScopeId}':
    post:
      tags:
        - my
      summary: 'Set the user default scope providing the scope id and the module - {SaveUserScopeRequest}'
      description: Set the user default scope providing the scope id and the module
      operationId: SaveUserScopeRequestscopeModuleScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Module
          in: path
          description: The module for which the user will set the default scope
          type: string
          required: true
          x-nullable: false
        - name: ScopeId
          in: path
          description: The default scope id
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveUserScopeRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/addresses/byIds/{Ids}':
    get:
      tags:
        - addresses
      summary: 'Retrieve a list of addresses by Ids - {GetAddressesByIdsRequest}'
      description: Retrieve a list of addresses by Ids.
      operationId: GetAddressesByIdsRequestbyIdsIds_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Ids
          in: path
          description: The list of system-wide unique identifier for the Addresses to retrieve.
          type: array
          items:
            type: string
            x-nullable: false
          collectionFormat: csv
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<Address>
            type: array
            items:
              $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Address>
            type: array
            items:
              $ref: '#/definitions/Address'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/addresses/{AddressId}':
    get:
      tags:
        - addresses
      summary: 'Retrieve an address using its Id - {GetAddressRequest}'
      description: Retrieve an address using its Id.
      operationId: GetAddressRequestAddressId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AddressId
          in: path
          description: The unique identifier of the address.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    put:
      tags:
        - addresses
      summary: 'Updates an address - {UpdateAddressRequest}'
      description: Updates an address
      operationId: UpdateAddressRequestAddressId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AddressId
          in: path
          description: Unique identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateAddressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    delete:
      tags:
        - addresses
      summary: 'Remove an address - {RemoveAddressRequest}'
      description: Remove an address.
      operationId: RemoveAddressRequestAddressId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AddressId
          in: path
          description: The unique identifier of the address.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/addresses/customer/{CustomerId}/{AddressId}':
    get:
      tags:
        - addresses
      summary: 'Retrieve an address of a customer using its Id - {GetCustomerAddressRequest}'
      description: Retrieve an address of a customer using its Id
      operationId: GetCustomerAddressRequestcustomerCustomerIdAddressId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: AddressId
          in: path
          description: The unique identifier of the address.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    put:
      tags:
        - addresses
      summary: 'Updates a customer address - {UpdateCustomerAddressRequest}'
      description: Updates a customer address
      operationId: UpdateCustomerAddressRequestcustomerCustomerIdAddressId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: AddressId
          in: path
          description: Unique identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCustomerAddressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    delete:
      tags:
        - addresses
      summary: 'Remove an address of a customer - {RemoveCustomerAddressRequest}'
      description: Remove an address of a customer.
      operationId: RemoveCustomerAddressRequestcustomerCustomerIdAddressId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: AddressId
          in: path
          description: The unique identifier of the address.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}':
    get:
      tags:
        - customers
      summary: 'Retrieve a customer - {GetCustomerRequest}'
      description: Retrieve a customer.
      operationId: GetCustomerRequestScopeIdCustomerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique id of the requested customer
          type: string
          required: true
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to fully load the collection of addresses linked to the customer.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    put:
      tags:
        - customers
      summary: 'Updates a customer - {UpdateCustomerRequest}'
      description: Updates a customer
      operationId: UpdateCustomerRequestScopeIdCustomerId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the entity.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCustomerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/find':
    post:
      tags:
        - customers
      summary: 'Search for customers - {FindCustomersRequest}'
      description: Search for customers.
      operationId: FindCustomersRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindCustomersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerQueryResult'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/CustomerQueryResult'
        '404':
          description: No customers was found
          schema:
            $ref: '#/definitions/CustomerQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{CustomerId}/addresses/{AddressId}':
    put:
      tags:
        - customers
      summary: 'Add or updates a customer address - {AddOrUpdateCustomerAddressRequest}'
      description: Add or updates a customer address
      operationId: AddOrUpdateCustomerAddressRequestCustomerIdaddressesAddressId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: AddressId
          in: path
          description: Unique identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateCustomerAddressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/stores':
    get:
      tags:
        - customers
      summary: 'Retrieve the customer''s stores - {GetCustomerStoresRequest}'
      description: Retrieve the customer's stores.
      operationId: GetCustomerStoresRequestScopeIdCustomerIdstores_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique id of the customer
          type: string
          required: true
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: The value indicating whether the addresses should be included
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerStoresAssociations'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/CustomerStoresAssociations'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/CustomerStoresAssociations'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/byUsername/{Username}':
    get:
      tags:
        - customers
      summary: 'Retrieve a customer by user name - {GetCustomerByUsernameRequest}'
      description: Retrieve a customer by user name.
      operationId: GetCustomerByUsernameRequestScopeIdbyUsernameUsername_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Username
          in: path
          description: The username associated to the requested customer
          type: string
          required: true
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to fully load the collection of addresses linked to the customer.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: no customer has the username.
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/addresses':
    get:
      tags:
        - customers
      summary: 'Retrieve the addresses of a customer - {GetCustomerAddressesRequest}'
      description: Retrieve the addresses of a customer
      operationId: GetCustomerAddressesRequestScopeIdCustomerIdaddresses_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier associated to the requested customer
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Address>
            type: array
            items:
              $ref: '#/definitions/Address'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Address>
            type: array
            items:
              $ref: '#/definitions/Address'
        '404':
          description: Requested customer addresses not found
          schema:
            title: List<Address>
            type: array
            items:
              $ref: '#/definitions/Address'
      deprecated: false
    post:
      tags:
        - customers
      summary: 'Add an address to a customer''s addresses - {AddAddressToCustomerRequest}'
      description: Add an address to a customer's addresses.
      operationId: AddAddressToCustomerRequestScopeIdCustomerIdaddresses_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: Customer unique identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddAddressToCustomerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/organizations':
    get:
      tags:
        - customers
      summary: 'Get customer organizations for a scope - {GetCustomerOrganizationsRequest}'
      description: Get customer organizations for a scope
      operationId: GetCustomerOrganizationsRequestScopeIdCustomerIdorganizations_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the customer.
          type: string
          required: true
          x-nullable: false
        - name: IncludeAllAddresses
          in: query
          description: Gets or sets a value indicating whether all addresses should be returned or only the first one. If False only one organization address will be returned using either IsPreferredBilling or IsPreferredShipping as priority. If True every organization addresses for the customer will be returned
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Organization>
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Organization>
            type: array
            items:
              $ref: '#/definitions/Organization'
        '404':
          description: Requested customer not found
          schema:
            title: List<Organization>
            type: array
            items:
              $ref: '#/definitions/Organization'
      deprecated: false
    post:
      tags:
        - customers
      summary: 'Add organizations to a customer - {AddOrganizationsToCustomerRequest}'
      description: Add organizations to a customer.
      operationId: AddOrganizationsToCustomerRequestScopeIdCustomerIdorganizations_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier for the customer.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrganizationsToCustomerRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    delete:
      tags:
        - customers
      summary: 'Remove organizations from a customer - {RemoveOrganizationsToCustomerRequest}'
      description: Remove organizations from a customer.
      operationId: RemoveOrganizationsToCustomerRequestScopeIdCustomerIdorganizations_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier for the customer
          type: string
          required: true
          x-nullable: false
        - name: AssociatedIds
          in: query
          description: The list of unique identifier for the associated entities
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/notes':
    get:
      tags:
        - customers
      summary: 'Get customer notes - {GetCustomerNotesRequest}'
      description: Get customer notes.
      operationId: GetCustomerNotesRequestScopeIdCustomerIdnotes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the customer.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '404':
          description: Requested customer not found
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
      deprecated: false
    post:
      tags:
        - customers
      summary: 'Add a note to a customer - {AddCustomerNoteRequest}'
      description: Add a note to a customer.
      operationId: AddCustomerNoteRequestScopeIdCustomerIdnotes_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddCustomerNoteRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/paymentProfiles':
    get:
      tags:
        - customers
      summary: 'Get customer payment profiles for a scope - {GetCustomerPaymentProfilesRequest}'
      description: Get customer payment profiles for a scope
      operationId: GetCustomerPaymentProfilesRequestScopeIdCustomerIdpaymentProfiles_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the customer.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<PaymentProfile>
            type: array
            items:
              $ref: '#/definitions/PaymentProfile'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<PaymentProfile>
            type: array
            items:
              $ref: '#/definitions/PaymentProfile'
        '404':
          description: Requested customer not found
          schema:
            title: List<PaymentProfile>
            type: array
            items:
              $ref: '#/definitions/PaymentProfile'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/orders':
    get:
      tags:
        - customers
      summary: 'Retrieve the order history of a customer - {GetCustomerOrderHistoryRequest}'
      description: Retrieve the order history of a customer
      operationId: GetCustomerOrderHistoryRequestScopeIdCustomerIdorders_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier associated to the requested customer
          type: string
          required: true
          x-nullable: false
        - name: OrdersCreatedAfter
          in: query
          description: Shows the orders after this date.
          type: string
          format: date-time
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderQueryResult'
        '404':
          description: Requested customer orders not found
          schema:
            $ref: '#/definitions/OrderQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}':
    post:
      tags:
        - customers
      summary: 'Create a customer - {CreateCustomerRequest}'
      description: Create a customer.
      operationId: CreateCustomerRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope in which the customer belong.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCustomerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /customers/byTicket:
    get:
      tags:
        - customers
      summary: 'Retrieve the customer from a password reset ticket - {GetCustomerFromPasswordTicketRequest}'
      description: Decrypts a password reset ticket and returns a customer
      operationId: GetCustomerFromPasswordTicketRequestbyTicket_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Ticket
          in: query
          description: The ticket
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: CustomerId decrypted in the ticket does not match with an existing customer or is not valid
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}/{EntityId}/scopes':
    get:
      tags:
        - customProfiles
      summary: 'Retrieve the associated scopes - {GetAssociatedScopesRequest}'
      description: Retrieve the associated scopes  for a given profile.
      operationId: GetAssociatedScopesRequestScopeIdEntityTypeNameEntityIdscopes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the scope.
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: The EntityTypeName of the profile instance to which the scopes are linked.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The identifier (business key) of the instance of entity to which the scopes are associated.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
      deprecated: false
    put:
      tags:
        - customProfiles
      summary: 'Adds/Updates the association between scopes and an entity - {UpdateScopeAssociationsRequest}'
      description: Adds/Updates the association between scopes and an entity
      operationId: UpdateScopeAssociationsRequestScopeIdEntityTypeNameEntityIdscopes_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope in which the profile instance belongs.
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: The name (business key) of the entity type of the instance to which the scopes are linked.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The Id (business key) of the instance of entity to which the scopes are associated.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateScopeAssociationsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
      deprecated: false
    delete:
      tags:
        - customProfiles
      summary: 'Remove the association between a scope and a custom profile - {RemoveScopeAssociationRequest}'
      description: Remove the association between a scope and a custom profile.
      operationId: RemoveScopeAssociationRequestScopeIdEntityTypeNameEntityIdscopes_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The Id (business key) of the Scope to which the associations must be deleted.
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: The name (business key) of the entity type of the instance to which the scopes are linked.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The Id (business key) of the instance of entity to which the scopes are associated.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<ScopeAssociation>
            type: array
            items:
              $ref: '#/definitions/ScopeAssociation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}/byName/{Name}':
    get:
      tags:
        - customProfiles
      summary: 'Retrieve custom profile instance by type and name - {GetProfileInstanceByNameRequest}'
      description: Retrieve custom profile instance by type and name.
      operationId: GetProfileInstanceByNameRequestScopeIdEntityTypeNamebyNameName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: Name of the custom type of the profile instance represented by this entity.
          type: string
          required: true
        - name: Name
          in: path
          description: Unique identifier name for the entity.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomProfile'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}/{OrganizationId}/customers':
    get:
      tags:
        - organizations
      summary: 'Retrieve Customers based on the organization id - {GetCustomersByOrganizationRequest}'
      description: Retrieve the Customers based on the organization id
      operationId: GetCustomersByOrganizationRequestScopeIdOrganizationIdcustomers_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrganizationId
          in: path
          description: The organization identifier of the customer to search for.
          type: string
          required: true
          x-nullable: false
        - name: StartingIndex
          in: query
          description: The starting index.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: The maximum items returned by the search query.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Whether or not to fully load the collection of addresses linked to the customer.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCustomersByOrganizationQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}/byName/{Name}':
    get:
      tags:
        - organizations
      summary: 'Retreive a specific organization by name - {GetOrganizationByNameRequest}'
      description: Retrieve a specific organization by name
      operationId: GetOrganizationByNameRequestScopeIdbyNameName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Name
          in: path
          description: The name of the organization to retrieve.
          type: string
          required: true
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to fully load the addresses.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Organization'
        '404':
          description: Organization with provided name does not exist.
          schema:
            $ref: '#/definitions/Organization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}/byName/{Name}/customers':
    get:
      tags:
        - organizations
      summary: 'Retrieve Customers based on the organization name - {GetCustomersByOrganizationNameRequest}'
      description: Retrieve the customers of an organization. Paging is available
      operationId: GetCustomersByOrganizationNameRequestScopeIdbyNameNamecustomers_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Name
          in: path
          description: The organization name of the Customer to search for.
          type: string
          required: true
        - name: StartingIndex
          in: query
          description: The starting index.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: The maximum items returned by the search query.
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to fully load the collection of addresses linked to the customer.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCustomersByOrganizationQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/{PaymentProviderName}/paymentProfile':
    get:
      tags:
        - customers
      summary: 'Retrieve customer payment profile related to a specific payment provider - {GetCustomerPaymentProfileRequest}'
      description: Retrieve the customer payment profile related to a specific payment provider.
      operationId: GetCustomerPaymentProfileRequestScopeIdCustomerIdPaymentProviderNamepaymentProfile_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the customer to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: The name of the payment provider.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProfile'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PaymentProfile'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/PaymentProfile'
      deprecated: false
    put:
      tags:
        - customers
      summary: 'Update a customer payment profile related to a specific payment provider - {UpdateCustomerPaymentProfileRequest}'
      description: Update a customert payment profile related to a specific payment provider.
      operationId: UpdateCustomerPaymentProfileRequestScopeIdCustomerIdPaymentProviderNamepaymentProfile_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier of the payment profile.
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: The unique identifier of the provider related to the payment profile.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCustomerPaymentProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProfile'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PaymentProfile'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/PaymentProfile'
      deprecated: false
    post:
      tags:
        - customers
      summary: 'Add customer payment profile related to a specific payment provider - {AddCustomerPaymentProfileRequest}'
      description: Add customer payment profile related to a specific payment provider.
      operationId: AddCustomerPaymentProfileRequestScopeIdCustomerIdPaymentProviderNamepaymentProfile_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier of the payment profile.
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: The unique identifier of the provider related to the payment profile.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddCustomerPaymentProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProfile'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PaymentProfile'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/PaymentProfile'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/preferred/store':
    put:
      tags:
        - customers
      summary: 'Updates the customer''s preferred store - {UpdatePreferredStoreRequest}'
      description: Updates the customer's preferred store
      operationId: UpdatePreferredStoreRequestScopeIdCustomerIdpreferredstore_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique id of the customer
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePreferredStoreRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Requested customer or store not found
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/{PaymentProviderName}/paymentMethods':
    get:
      tags:
        - customers
      summary: 'Retrieve the Payment methods from a payment provider for a customer - {GetCustomerPaymentMethodsRequest}'
      description: Retrieve the payment methods from a provider previously used by a specific customer. This request calls the method GetPaymentMethods(string customerId) of the payment provider.
      operationId: GetCustomerPaymentMethodsRequestScopeIdCustomerIdPaymentProviderNamepaymentMethods_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the unique identifier of the Customer
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: the name of the payment provider to use
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<PaymentMethod>
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/near/{SearchTerms}':
    get:
      tags:
        - stores
      summary: 'Find the nearest stores based on search terms - {FindNearestStoresRequest}'
      description: Search for the nearest Stores based on search terms
      operationId: FindNearestStoresRequestScopeIdnearSearchTerms_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: SearchTerms
          in: path
          description: The search terms.
          type: string
          required: true
        - name: StartingIndex
          in: query
          description: The starting index used to find the stores
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItemsCount
          in: query
          description: The maximum number of stores
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: FulfillmentMethodType
          in: query
          description: The fulfillment method type used to filter the stores.
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindNearestStoresResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/byName/{Name}':
    get:
      tags:
        - stores
      summary: 'Retrieve a store using its name - {GetStoreByNameRequest}'
      description: Retrieve a specific store using its name
      operationId: GetStoreByNameRequestScopeIdbyNameName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Name
          in: path
          description: the name of the store.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load the collection of addresses linked to the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeOperatingStatus
          in: query
          description: Specifies whether or not to load the operating status the store.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Store'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Store'
        '404':
          description: Requested store not found
          schema:
            $ref: '#/definitions/Store'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/byNumber/{Number}':
    get:
      tags:
        - stores
      summary: 'Retrieve a store using its number - {GetStoreByNumberRequest}'
      description: Retrieve a specific store using its number
      operationId: GetStoreByNumberRequestScopeIdbyNumberNumber_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Number
          in: path
          description: the number of the store.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load the collection of addresses linked to the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeOperatingStatus
          in: query
          description: Specifies whether or not to load the operating status the store.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Store'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Store'
        '404':
          description: Requested store not found
          schema:
            $ref: '#/definitions/Store'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/Validate':
    put:
      tags:
        - membership
      summary: 'Validate a username/password combination - {ValidateUserRequest}'
      description: Retrieve true if it's a valid combination
      operationId: ValidateUserRequestScopeIdValidate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ValidateUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidateUserResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/Login':
    put:
      tags:
        - membership
      summary: 'Login the user with the values provided - {LoginRequest}'
      description: 'Login the user. A result is returned that indicates if the operation succeeded but raise an error and provide details when there is a problem. The error could be : CustomerMembershipDoesNotExist, PasswordDoesNotMatch or CustomerMembershipAccountIsNotActive.'
      operationId: LoginRequestScopeIdLogin_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginResponse'
        '404':
          description: No customer found
          schema:
            $ref: '#/definitions/LoginResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/ResetPassword':
    post:
      tags:
        - membership
      summary: 'Send a password reset email or reset password directly - {ResetPasswordRequest}'
      description: 'Send a password reset email or reset password directly. Return information indicating whether the password was successfully reset or not.If an email is specified in the request, the method sends an email to reset the password. If not, set an username, the password answer and a new password to reset the password directly'
      operationId: ResetPasswordRequestScopeIdResetPassword_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ResetPasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}':
    post:
      tags:
        - membership
      summary: 'Create a new customer membership - {CreateCustomerMembershipRequest}'
      description: 'Create a new customer membership. Return the customer if the operation succeeded but raise an error and provide details when there is a problem. The error could be : UserNameAlreadyUsed, InvalidPassword or PasswordQuestionNoSet.'
      operationId: CreateCustomerMembershipRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCustomerMembershipRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /membership/configuration:
    get:
      tags:
        - membership
      summary: 'Retrieve the membership configuration from the system - {GetMembershipConfigurationRequest}'
      description: Retrieve the membership configuration.
      operationId: GetMembershipConfigurationRequestconfiguration_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MembershipConfiguration'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/ChangePassword/{UserName}':
    post:
      tags:
        - membership
      summary: 'Change a Customer''s password - {ChangePasswordRequest}'
      description: Change a Customer's password. Return information indicating whether the password was successfully changed or not.
      operationId: ChangePasswordRequestScopeIdChangePasswordUserName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: UserName
          in: path
          description: The UserName
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/ChangeUserName/{OldUsername}':
    post:
      tags:
        - membership
      summary: 'Change a Customer''s user name - {ChangeUserNameRequest}'
      description: Change a Customer's user name. Return information indicating whether the user name was successfully changed or not.
      operationId: ChangeUserNameRequestScopeIdChangeUserNameOldUsername_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OldUsername
          in: path
          description: The old (current) username
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeUserNameRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChangeUserNameResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/membership/{ScopeId}/UnlockUser/{UserName}':
    post:
      tags:
        - membership
      summary: 'Unlock a User account - {UnlockUserRequest}'
      description: 'Unlock a user. If the user is locked down, the request will unlock the account. If the user is not locked down, the request will succeed as if the account were locked down. If the user does not exists, the request will fail'
      operationId: UnlockUserRequestScopeIdUnlockUserUserName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: UserName
          in: path
          description: The username
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UnlockUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnlockUserResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}/find':
    post:
      tags:
        - organizations
      summary: 'Search for Organizations based on search terms - {FindOrganizationsRequest}'
      description: Search for Organizations based on search terms
      operationId: FindOrganizationsRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindOrganizationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindOrganizationsQueryResult'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/FindOrganizationsQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}/{OrganizationId}':
    get:
      tags:
        - organizations
      summary: 'Retreive a specific organization - {GetOrganizationRequest}'
      description: Retrieve a specific organization
      operationId: GetOrganizationRequestScopeIdOrganizationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrganizationId
          in: path
          description: The identifier of the organization to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to fully load the addresses.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Organization'
        '404':
          description: Organization with provided id does not exist.
          schema:
            $ref: '#/definitions/Organization'
      deprecated: false
    put:
      tags:
        - organizations
      summary: 'Update an organization - {UpdateOrganizationRequest}'
      description: Update an organization
      operationId: UpdateOrganizationRequestScopeIdOrganizationId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope in which the organization belong.
          type: string
          required: true
        - name: OrganizationId
          in: path
          description: The unique identifier of the entity.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateOrganizationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Organization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/organizations/{ScopeId}':
    post:
      tags:
        - organizations
      summary: 'Create an organization - {CreateOrganizationRequest}'
      description: Create an organization
      operationId: CreateOrganizationRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope in which the organization belong.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrganizationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: You must be authenticated for using this request
          schema:
            $ref: '#/definitions/Organization'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}/{EntityId}':
    get:
      tags:
        - customProfiles
      summary: 'Retrieve a custom profile instance by type and id - {GetProfileInstanceRequest}'
      description: Retrieve a custom profile instance by type and id.
      operationId: GetProfileInstanceRequestScopeIdEntityTypeNameEntityId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: Name of the custom type of the profile instance represented by this entity.
          type: string
          required: true
        - name: EntityId
          in: path
          description: Unique identifier for the entity.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomProfile'
      deprecated: false
    put:
      tags:
        - customProfiles
      summary: 'Updates a custom profile - {UpdateCustomProfileRequest}'
      description: Updates a custom profile.
      operationId: UpdateCustomProfileRequestScopeIdEntityTypeNameEntityId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: The entity type name.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier for the entity.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCustomProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomProfile'
      deprecated: false
    delete:
      tags:
        - customProfiles
      summary: 'Deletes a existing custom profile - {DeleteCustomProfileRequest}'
      description: Deletes an existing custom profile.
      operationId: DeleteCustomProfileRequestScopeIdEntityTypeNameEntityId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: Entity type name.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier of the entity.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
        '404':
          description: Custom profile to be deleted was not found
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}/byIds/':
    post:
      tags:
        - customProfiles
      summary: 'Retrieve custom profile instances by type and id - {GetProfileInstancesRequest}'
      description: Retrieve custom profile instances by type and id.
      operationId: GetProfileInstancesRequestScopeIdEntityTypeNamebyIds_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: Name of the custom type of the profile instance represented by these entities.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProfileInstancesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<CustomProfile>
            type: array
            items:
              $ref: '#/definitions/CustomProfile'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}/find':
    post:
      tags:
        - customProfiles
      summary: 'Search for custom profiles based on search terms - {FindProfileInstancesRequest}'
      description: Search for custom profiles based on search terms.
      operationId: FindProfileInstancesRequestScopeIdEntityTypeNamefind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: ' Gets or sets the entity type name of the profile instance.'
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindProfileInstancesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindProfileInstancesQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindProfileInstancesQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityId}/addresses':
    post:
      tags:
        - customProfiles
      summary: 'Add an address to a custom profile''s addresses - {AddAddressToCustomProfileRequest}'
      description: Add an address to a custom profiles's addresses.
      operationId: AddAddressToCustomProfileRequestScopeIdEntityIdaddresses_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddAddressToCustomProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Address'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{EntityTypeName}':
    post:
      tags:
        - customProfiles
      summary: 'Create a new custom profile - {CreateCustomProfileRequest}'
      description: Create a new custom profile
      operationId: CreateCustomProfileRequestScopeIdEntityTypeName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityTypeName
          in: path
          description: Entity type name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCustomProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomProfile'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customProfiles/{ScopeId}/{ParentEntityTypeName}/{ParentId}/{AttributeName}/{EntityId}':
    post:
      tags:
        - customProfiles
      summary: 'Associate two entities together - {AssociateEntityRequest}'
      description: Associate two entities together
      operationId: AssociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of scope in which the parent entity belongs.
          type: string
          required: true
        - name: ParentEntityTypeName
          in: path
          description: Gets the name (business key) of the entity type of the profile instance to which the entity will be associated.
          type: string
          required: true
        - name: ParentId
          in: path
          description: The unique identifier for the parent entity.
          type: string
          required: true
          x-nullable: false
        - name: AttributeName
          in: path
          description: The name of the attribute in the parent definition under which the association is kept.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier for the associated entity.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AssociateEntityRequest'
      responses:
        '204':
          description: No Content
        '422':
          description: Validation error.
      deprecated: false
    delete:
      tags:
        - customProfiles
      summary: 'Removes the association between two entities - {DisassociateEntityRequest}'
      description: Removes the association between two entities
      operationId: DisassociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of scope in which the parent entity belong.
          type: string
          required: true
        - name: ParentEntityTypeName
          in: path
          description: Gets the name (business key) of the custom type of the profile instance to which the entity will be associated.
          type: string
          required: true
        - name: ParentId
          in: path
          description: The unique identifier for the parent entity.
          type: string
          required: true
          x-nullable: false
        - name: AttributeName
          in: path
          description: The name of the attribute in the parent definition under which the association is kept.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier for the associated entity.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{CustomerId}/customProfiles/{ScopeId}/{AttributeName}/{EntityId}':
    post:
      tags:
        - customers
      summary: 'Associate a customer to an entity - {AssociateCustomerEntityRequest}'
      description: Associate a customer to an entity
      operationId: AssociateCustomerEntityRequestCustomerIdcustomProfilesScopeIdAttributeNameEntityId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: ScopeId
          in: path
          description: The id of scope in which the parent entity belongs.
          type: string
          required: true
        - name: AttributeName
          in: path
          description: The name of the attribute in the parent definition under which the association is kept.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier for the associated entity.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AssociateCustomerEntityRequest'
      responses:
        '204':
          description: No Content
        '422':
          description: Validation error.
      deprecated: false
    delete:
      tags:
        - customers
      summary: 'Removes the association between a customer an entity - {DisassociateCustomerEntityRequest}'
      description: Removes the association between a customer an entity
      operationId: DisassociateCustomerEntityRequestCustomerIdcustomProfilesScopeIdAttributeNameEntityId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer identifier.
          type: string
          required: true
          x-nullable: false
        - name: ScopeId
          in: path
          description: The identifier of scope in which the parent entity belong.
          type: string
          required: true
        - name: AttributeName
          in: path
          description: The name of the attribute in the parent definition under which the association is kept.
          type: string
          required: true
        - name: EntityId
          in: path
          description: The unique identifier for the associated entity.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/{PaymentProviderName}/paymentMethods/{PaymentMethodId}':
    delete:
      tags:
        - customers
      summary: 'Remove the PaymentMethod associated with a customer - {DeleteCustomerPaymentMethodRequest}'
      description: Remove the PaymentMethod associated with a customer.
      operationId: DeleteCustomerPaymentMethodRequestScopeIdCustomerIdPaymentProviderNamepaymentMethodsPaymentMethodId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the unique identifier of the Customer owning the cart.
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: 'the name of the payment provider to use. If null, all methods will be returned'
          type: string
          required: true
        - name: PaymentMethodId
          in: path
          description: the unique identifier of the payment method to be removed
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/profiles/schema/export:
    post:
      tags:
        - integration
      summary: 'Export the profile system schema - {ExportProfileSchemaRequest}'
      description: Export the profile system schema. Return the task information for the started durable task.
      operationId: ExportProfileSchemaRequestprofilesschemaexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportProfileSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/profiles/schema/import:
    post:
      tags:
        - integration
      summary: 'Import the profile system schema - {ImportProfileSchemaRequest}'
      description: Import the profile system schema. Return the task information for the started durable task.
      operationId: ImportProfileSchemaRequestprofilesschemaimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportProfileSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/integration/products/{ScopeId}/import':
    post:
      tags:
        - integration
      summary: 'Import Metadatas, Products, Prices, Categories and RelationShips - {ImportProductsRequest}'
      description: 'Import Metadatas, Products, Prices, Categories and RelationShips'
      operationId: ImportProductsRequestproductsScopeIdimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: true
    parameters:
      - $ref: '#/parameters/Accept'
  '/integration/products/{ScopeId}/export':
    post:
      tags:
        - integration
      summary: 'Export Metadatas, Products, Prices, Categories and RelationShips - {ExportProductsRequest}'
      description: 'Export Metadatas, Products, Prices, Categories and RelationShips'
      operationId: ExportProductsRequestproductsScopeIdexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: true
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/orders/schema/export:
    post:
      tags:
        - integration
      summary: 'Export order schema to a file that will be stored in the blob - {ExportOrderSchemaRequest}'
      description: Export order schema to a file that will be stored in the blob
      operationId: ExportOrderSchemaRequestordersschemaexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportOrderSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/orders/schema/import:
    post:
      tags:
        - integration
      summary: 'Import order schema from file - {ImportOrderSchemaRequest}'
      description: Import order schema from file.
      operationId: ImportOrderSchemaRequestordersschemaimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportOrderSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/profiles/export:
    post:
      tags:
        - integration
      summary: 'Export the profile system data - {ExportProfilesRequest}'
      description: Export the profile system data. Return the task information for the started durable task.
      operationId: ExportProfilesRequestprofilesexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportProfilesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/profiles/import:
    post:
      tags:
        - integration
      summary: 'Import/Sync the profile system data - {ImportProfilesRequest}'
      description: "Import/Delete/Sync the profile system data. \r\n\r\nA result file containing all success and failures will be sent to the blob.\r\nThe task will always be set as RunToCompletion by design. \r\nTo see the status please check the property ErrorsInFiles in the task result or the result zip file in the blob.\r\n\r\nRestictions: \r\n             - Files must be in the root of the zip\r\n             - Only one import header by entity: Could not set different columns on the same profile in the same import zip\r\n             - Only one delete header by entity: Could not perform a delete on the same profile with different keys. Cannot set some with ChildrenOnly and other not.\r\n             - Importing an entity with extra will delete all related extra that have an import header\r\n             - Delete files doesn't apply on extra\r\n\r\nReturn the task information for the started durable task."
      operationId: ImportProfilesRequestprofilesimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportProfilesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/inventoryItems/import:
    post:
      tags:
        - integration
      summary: 'Import inventory items from a set of files - {ImportInventoryItemsRequest}'
      description: Import inventory items from a set of files
      operationId: ImportInventoryItemsRequestinventoryItemsimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportInventoryItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
        '404':
          description: The task could not be launched.
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /integration/orders/import:
    post:
      tags:
        - integration
      summary: 'Import Orders and their''s sub-elements :  Payments Shipments, LineItems, Taxes, Addresses, Order history, Notes, Additional fees, Discounts and coupons - {ImportOrdersRequest}'
      description: 'Import Orders and their''s sub-elements : Payments Shipments, LineItems, Taxes, Addresses, Order history, Notes, Additional fees, Discounts and coupons'
      operationId: ImportOrdersRequestordersimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportOrdersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/{Id}':
    get:
      tags:
        - stores
      summary: 'Retrieves a store using its Id - {GetStoreRequest}'
      description: Retrieve a specific store using its Id
      operationId: GetStoreRequestScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique id of the Store
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load the collection of addresses linked to the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the store.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeOperatingStatus
          in: query
          description: Specifies whether or not to load the operating status the store.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Store'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Store'
        '404':
          description: Requested store not found
          schema:
            $ref: '#/definitions/Store'
      deprecated: false
    delete:
      tags:
        - stores
      summary: 'Deletes a store using its Id - {DeleteStoreRequest}'
      description: Deletes a specific store using its Id
      operationId: DeleteStoreRequestScopeIdId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique id of the Store
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
        '404':
          description: Requested store not found
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/find':
    post:
      tags:
        - stores
      summary: 'Search for Stores based on search terms - {FindStoresRequest}'
      description: Search for Stores based on search terms
      operationId: FindStoresRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindStoresRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindStoresQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindStoresQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/stores/{ScopeId}/{Number}':
    post:
      tags:
        - stores
      summary: 'Create or update a store using its number - {CreateOrUpdateStoreByNumberRequest}'
      description: Creates or updates a store
      operationId: CreateOrUpdateStoreByNumberRequestScopeIdNumber_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Number
          in: path
          description: a business centric number to identify the store that could be used to link the store to external data.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateStoreByNumberRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Store'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Store'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/operatingStatus':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retreive a specific store''s OperatingStatus - {GetOperatingStatusRequest}'
      description: Retrieve a specific store's OperatingStatus
      operationId: GetOperatingStatusRequestScopeIdFulfillmentLocationIdoperatingStatus_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The unique identifier of the FulfillmentLocation (Store or other) to retrieve.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OperatingStatus'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OperatingStatus'
        '404':
          description: Requested store or operating status not found
          schema:
            $ref: '#/definitions/OperatingStatus'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/schedule':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retreive a specific store''s Schedule - {GetScheduleRequest}'
      description: Retrieve a specific store's Schedule
      operationId: GetScheduleRequestScopeIdFulfillmentLocationIdschedule_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The unique identifier of the Store to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: ScheduleType
          in: query
          description: ' Gets or sets the type of the schedule. The possible values are : OpeningHours, Delivery or PickUp.'
          type: string
          required: false
          enum:
            - OpeningHours
            - Delivery
            - Pickup
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentSchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentSchedule'
        '404':
          description: Requested Store or Schedule not found
          schema:
            $ref: '#/definitions/FulfillmentSchedule'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/elapsedTime':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve an elapsed time based on fulfillment location schedules - {GetFulfillmentLocationByIdElapsedTimeRequest}'
      description: Retrieve an elapsed time based on fulfillment location schedules
      operationId: GetFulfillmentLocationByIdElapsedTimeRequestScopeIdFulfillmentLocationIdelapsedTime_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The unique identifier of the fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: StartDate
          in: query
          description: The start date to determine elapsed time.
          type: string
          format: date-time
          required: false
          x-nullable: false
        - name: EndDate
          in: query
          description: The end date to determine elapsed time.
          type: string
          format: date-time
          required: false
          x-nullable: false
        - name: ScheduleType
          in: query
          description: The schedule type to use
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFulfillmentLocationByIdElapsedTimeResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetFulfillmentLocationByIdElapsedTimeResult'
        '404':
          description: Requested Fulfillment location not found
          schema:
            $ref: '#/definitions/GetFulfillmentLocationByIdElapsedTimeResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/inventory':
    put:
      tags:
        - fulfillmentLocations
      summary: 'Updates the inventory informations for a specified fulfillment location. - {SetFulfillmentLocationInventoryManagementRequest}'
      description: Updates the inventory details for a specified fulfillment location.
      operationId: SetFulfillmentLocationInventoryManagementRequestScopeIdFulfillmentLocationIdinventory_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetFulfillmentLocationInventoryManagementRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetFulfillmentLocationInventoryManagementResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SetFulfillmentLocationInventoryManagementResult'
        '404':
          description: Requested Fulfillment location not found
          schema:
            $ref: '#/definitions/SetFulfillmentLocationInventoryManagementResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/forSlot/{FulfillmentLocationId}/{FulfillmentType}':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Checks the availability of a specific slot time on a specific date using the calculated schedule availability. - {CheckAvailabilitySlotRequest}'
      description: Checks the availability of a specific slot time on a specific date using the calculated schedule availability.
      operationId: CheckAvailabilitySlotRequestforSlotFulfillmentLocationIdFulfillmentType_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CheckAvailabilitySlotRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}/find':
    post:
      tags:
        - warehouses
      summary: 'Search for warehouses based on search terms - {FindWarehousesRequest}'
      description: Search for warehouses based on search terms
      operationId: FindWarehousesRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindWarehousesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindWarehousesQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindWarehousesQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}/createOrUpdate':
    put:
      tags:
        - warehouses
      summary: 'Create or update a warehouse using its number - {CreateOrUpdateWarehouseByNumberRequest}'
      description: Creates or updates a warehouse
      operationId: CreateOrUpdateWarehouseByNumberRequestScopeIdcreateOrUpdate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateWarehouseByNumberRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Warehouse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Warehouse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}/{Id}':
    get:
      tags:
        - warehouses
      summary: 'Retrieves a warehouse using its Id - {GetWarehouseRequest}'
      description: Retrieve a specific warehouse using its Id
      operationId: GetWarehouseRequestScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The unique id of the warehouse.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load the collection of addresses linked to the warehouse.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the warehouse.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeOperatingStatus
          in: query
          description: Specifies whether or not to load the operating status of the warehouse.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Warehouse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Warehouse'
        '404':
          description: Requested warehouse not found
          schema:
            $ref: '#/definitions/Warehouse'
      deprecated: false
    put:
      tags:
        - warehouses
      summary: 'Update a warehouse using its Id - {UpdateWarehouseRequest}'
      description: Updates a warehouse
      operationId: UpdateWarehouseRequestScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique identifier of the Warehouse to be updated.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateWarehouseRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Warehouse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Warehouse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}':
    post:
      tags:
        - warehouses
      summary: 'Creates a warehouse using the provided iD, if not provided, a new Id will be generated  - {CreateWarehouseRequest}'
      description: Creates a warehouse
      operationId: CreateWarehouseRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateWarehouseRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Warehouse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Warehouse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}/{Id}/AssociatedScopes':
    put:
      tags:
        - warehouses
      summary: 'Updates the scope associations of a warehouse - {UpdateWarehouseScopeAssociationsRequest}'
      description: 'Updates the scope associations of a warehouse, there must be at least one scope in the list of associated scopes.'
      operationId: UpdateWarehouseScopeAssociationsRequestScopeIdIdAssociatedScopes_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique identifier of the Warehouse.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateWarehouseScopeAssociationsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/warehouses/{ScopeId}/{Id}/delete':
    delete:
      tags:
        - warehouses
      summary: 'Deletes a warehouse using its Id - {DeleteWarehouseRequest}'
      description: Deletes a warehouse
      operationId: DeleteWarehouseRequestScopeIdIddelete_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: the unique identifier of the Warehouse to be updated.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /promotion/engine/:
    post:
      tags:
        - promotion
      summary: 'Invoke the promotions evaluation of a given Cart - {ProcessPromotionEngineRequest}'
      description: Invoke the promotions evaluation of a given Cart
      operationId: ProcessPromotionEngineRequestengine_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProcessPromotionEngineRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromotionEngineResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{CampaignId}':
    get:
      tags:
        - campaigns
      summary: 'Retrieve a campaign - {GetCampaignRequest}'
      description: Retrieve a campaign
      operationId: GetCampaignRequestScopeIdCampaignId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the campaign to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: IncludePromotions
          in: query
          description: Indicates whether the promotions be fully loaded.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
        '404':
          description: Requested campaign not found
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/find':
    post:
      tags:
        - campaigns
      summary: 'Search for campaigns. - {FindCampaignsRequest}'
      description: Search for campaigns. The search results do not return the promotions associated with the campaigns.
      operationId: FindCampaignsRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindCampaignsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CampaignQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/getlive':
    get:
      tags:
        - campaigns
      summary: 'Retrieve a list of live campaigns - {GetLiveCampaignsRequest}'
      description: Retrieve a list of live campaigns.
      operationId: GetLiveCampaignsRequestScopeIdgetlive_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EffectiveDateTime
          in: query
          description: The date time at which the campaign must be effective.
          type: string
          format: date-time
          required: false
          x-nullable: false
        - name: IncludePromotions
          in: query
          description: Indicates whether to include promotions of retrieved campaigns.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Campaign>
            type: array
            items:
              $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}':
    put:
      tags:
        - campaigns
      summary: 'Update a campaign - {UpdateCampaignRequest}'
      description: Update a campaign
      operationId: UpdateCampaignRequestScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{CampaignId}/promotions':
    get:
      tags:
        - campaigns
      summary: 'Retrieve the promotions of a campaign - {GetCampaignPromotionsRequest}'
      description: Retrieve the promotions of a campaign
      operationId: GetCampaignPromotionsRequestScopeIdCampaignIdpromotions_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the campaign to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: ValidateTargeting
          in: query
          description: Indicates whether the targeting conditions in the promotions should be validated (only applicable if IncludePromotions is True)
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Promotion>
            type: array
            items:
              $ref: '#/definitions/Promotion'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Promotion>
            type: array
            items:
              $ref: '#/definitions/Promotion'
        '404':
          description: Requested promotions not found
          schema:
            title: List<Promotion>
            type: array
            items:
              $ref: '#/definitions/Promotion'
      deprecated: false
    post:
      tags:
        - campaigns
      summary: 'Add a promotion to an existing campaign - {CreatePromotionRequest}'
      description: Add a promotion to an existing campaign
      operationId: CreatePromotionRequestScopeIdCampaignIdpromotions_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the promotion's campaign
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreatePromotionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Promotion'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Promotion'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/byIds/{CampaignIds}':
    get:
      tags:
        - campaigns
      summary: 'Retrieve a list of campaigns by ids - {GetCampaignsRequest}'
      description: Retrieve a list of campaigns by ids
      operationId: GetCampaignsRequestScopeIdbyIdsCampaignIds_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignIds
          in: path
          description: Gets or sets the ids of the campaigns to retrieve.
          type: array
          items:
            type: string
            x-nullable: false
          collectionFormat: csv
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<Campaign>
            type: array
            items:
              $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Campaign>
            type: array
            items:
              $ref: '#/definitions/Campaign'
        '404':
          description: Requested campaigns not found
          schema:
            title: List<Campaign>
            type: array
            items:
              $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{FromCampaignId}/copy':
    post:
      tags:
        - campaigns
      summary: 'Copy a campaign - {CopyCampaignRequest}'
      description: Copy a campaign
      operationId: CopyCampaignRequestScopeIdFromCampaignIdcopy_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FromCampaignId
          in: path
          description: The id of the campaign
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CopyCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{CampaignId}/full':
    put:
      tags:
        - campaigns
      summary: 'Add or update a campaign - {AddOrUpdateCampaignRequest}'
      description: Add or update a campaign
      operationId: AddOrUpdateCampaignRequestScopeIdCampaignIdfull_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/status':
    put:
      tags:
        - campaigns
      summary: 'Update the status of a campaign - {UpdateCampaignStatusRequest}'
      description: 'Update the status of a campaign. The possible values are Ready, Paused, PendingApproval, Rejected, Cancelled. Live and Obsolete are computed values, so it is useless to use those statuses, use Ready instead. The status is updated without checking the campaign workflow (for example the campaign does not have to be paused before requesting its cancellation).'
      operationId: UpdateCampaignStatusRequestScopeIdIdstatus_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCampaignStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/cancel':
    post:
      tags:
        - campaigns
      summary: 'Cancel a Campaign - {CancelCampaignRequest}'
      description: Cancel a Campaign. The status will be changed to Canceled.
      operationId: CancelCampaignRequestScopeIdIdcancel_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/publish':
    post:
      tags:
        - campaigns
      summary: 'Publish a Campaign - {PublishCampaignRequest}'
      description: 'Publish a Campaign. The status will be changed to Ready or Live, depending on its processing'
      operationId: PublishCampaignRequestScopeIdIdpublish_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/PublishCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/reject':
    post:
      tags:
        - campaigns
      summary: 'Reject a Campaign - {RejectCampaignRequest}'
      description: Reject a Campaign. The status will be changed to Rejected.
      operationId: RejectCampaignRequestScopeIdIdreject_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RejectCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/submit':
    post:
      tags:
        - campaigns
      summary: 'Submit a Campaign - {SubmitCampaignRequest}'
      description: Submit a Campaign. The status will be changed to PendingApproval.
      operationId: SubmitCampaignRequestScopeIdIdsubmit_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SubmitCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{Id}/pause':
    post:
      tags:
        - campaigns
      summary: 'Pause a Campaign - {PauseCampaignRequest}'
      description: Pause a Campaign. The status will be changed to Paused.
      operationId: PauseCampaignRequestScopeIdIdpause_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The id of the campaign.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/PauseCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}':
    post:
      tags:
        - campaigns
      summary: 'Create a campaign - {CreateCampaignRequest}'
      description: Create a campaign
      operationId: CreateCampaignRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCampaignRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Campaign'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /marketing/settings:
    get:
      tags:
        - marketing
      summary: 'Get the marketing application settings - {GetMarketingSettingsRequest}'
      description: Get the marketing application settings
      operationId: GetMarketingSettingsRequestsettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Settings'
      deprecated: false
    put:
      tags:
        - marketing
      summary: 'Update the marketing application settings - {UpdateMarketingSettingsRequest}'
      description: Update the marketing application settings.
      operationId: UpdateMarketingSettingsRequestsettings_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateMarketingSettingsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Settings'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /coupons/consume:
    post:
      tags:
        - coupons
      summary: 'Consume a coupon - {ConsumeCouponRequest}'
      description: Consume a coupon
      operationId: ConsumeCouponRequestconsume_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ConsumeCouponRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /coupons/liberate:
    post:
      tags:
        - coupons
      summary: 'Liberates a coupon - {LiberateCouponRequest}'
      description: Liberates a coupon
      operationId: LiberateCouponRequestliberate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LiberateCouponRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/coupons/{CouponCode}':
    get:
      tags:
        - coupons
      summary: 'Retrieve a coupon using its coupon code - {GetCouponRequest}'
      description: Retrieve a coupon using its coupon code.
      operationId: GetCouponRequestCouponCode_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CouponCode
          in: path
          description: The coupon code.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Coupon'
        '404':
          description: The coupon does not exists.
          schema:
            $ref: '#/definitions/Coupon'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /coupons/consume/code:
    post:
      tags:
        - coupons
      summary: 'Consume a coupon using its code - {ConsumeCouponByCodeRequest}'
      description: Consume a coupon using its code
      operationId: ConsumeCouponByCodeRequestconsumecode_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ConsumeCouponByCodeRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /coupons/delete/code:
    delete:
      tags:
        - coupons
      summary: 'Delete a coupon - {DeleteCouponByCodeRequest}'
      description: Delete a coupon
      operationId: DeleteCouponByCodeRequestdeletecode_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CouponCode
          in: query
          description: The coupon code.
          type: string
          required: false
        - name: Force
          in: query
          description: Delete the promo code if it is used in an active promotion and update the promotion.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCouponResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/coupons/validates/{CustomerId}':
    post:
      tags:
        - coupons
      summary: 'Validates a list of coupons for a customer - {GetCouponsRequest}'
      description: Validates a list of coupon codes.
      operationId: GetCouponsRequestvalidatesCustomerId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer unique identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetCouponsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<Coupon>
            type: array
            items:
              $ref: '#/definitions/Coupon'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/promotions/{PromotionId}/promoCodes/import':
    post:
      tags:
        - dataexchange
      summary: 'Import the promo codes for the promotion - {ImportPromoCodesRequest}'
      description: 'Import the promo codes for the promotion. The promo codes to import are in csv file, one promo code per row'
      operationId: ImportPromoCodesRequestpromotionsPromotionIdpromoCodesimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportPromoCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/promotions/{PromotionId}/promoCodes/export':
    post:
      tags:
        - dataexchange
      summary: 'Export the promo codes of the promotion - {ExportPromoCodesRequest}'
      description: Export the promo codes of the promotion. The ouput is a csv file.
      operationId: ExportPromoCodesRequestpromotionsPromotionIdpromoCodesexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportPromoCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/products/{ScopeId}/legacy/import':
    post:
      tags:
        - dataexchange
      summary: 'Import Metadatas, Products, Prices, Categories and RelationShips - {ProductInformationLegacyImportRequest}'
      description: 'Import Metadatas, Products, Prices, Categories and RelationShips'
      operationId: ProductInformationLegacyImportRequestproductsScopeIdlegacyimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProductInformationLegacyImportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{PromotionId}/coupons/import':
    post:
      tags:
        - promotions
      summary: 'Import (insert or update) a promotion''s coupons - {ImportCouponCodesRequest}'
      description: Import (insert or update) a promotion's coupons
      operationId: ImportCouponCodesRequestPromotionIdcouponsimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PromotionId
          in: path
          description: The promotion id.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportCouponCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: true
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{PromotionId}/coupons/export':
    post:
      tags:
        - promotions
      summary: 'Export a promotion''s coupon codes list - {ExportCouponCodesRequest}'
      description: Export a promotion's coupon codes list
      operationId: ExportCouponCodesRequestPromotionIdcouponsexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PromotionId
          in: path
          description: The promotion id.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportCouponCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<String>
            type: array
            items:
              type: string
      deprecated: true
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{ScopeId}/{PromotionId}/promoCodes':
    post:
      tags:
        - promotions
      summary: 'Retrieve the list of the promotion''s promo codes - {FindPromoCodesRequest}'
      description: Retrieve the list of the promotion's promo codes. This is a paged result.
      operationId: FindPromoCodesRequestScopeIdPromotionIdpromoCodes_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindPromoCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindPromoCodesResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindPromoCodesResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{ScopeId}/{PromotionId}/promoCodes/count':
    get:
      tags:
        - promotions
      summary: 'Retrieve the number of promo codes associated to a promotion with multiple promo codes - {GetPromoCodesCountRequest}'
      description: 'Retrieve the number of promo codes associated to a promotion with multiple promo codes, return 0 if the promo code mode is different from Multiple.'
      operationId: GetPromoCodesCountRequestScopeIdPromotionIdpromoCodescount_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPromoCodesCountResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetPromoCodesCountResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{ScopeId}/{PromotionId}/promoCodes/generate':
    post:
      tags:
        - promotions
      summary: 'Generate promo codes for the promotion - {GeneratePromoCodesRequest}'
      description: Generate promo codes for the promotion.
      operationId: GeneratePromoCodesRequestScopeIdPromotionIdpromoCodesgenerate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GeneratePromoCodesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GeneratePromoCodesResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GeneratePromoCodesResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/promotions/{ScopeId}/{PromotionId}/promoCodes/{PromoCode}/validate':
    post:
      tags:
        - promotions
      summary: 'Validate if the promo code can be created - {ValidatePromoCodeRequest}'
      description: 'Validate if the promo code can be created. Returns true is the code is not created yet in the system, or created but associated to the specified promotion.'
      operationId: ValidatePromoCodeRequestScopeIdPromotionIdpromoCodesPromoCodevalidate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PromotionId
          in: path
          description: The id of the promotion.
          type: string
          required: true
          x-nullable: false
        - name: PromoCode
          in: path
          description: The promo code to validate
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ValidatePromoCodeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ValidationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{CampaignId}/promotions/{PromotionId}':
    get:
      tags:
        - campaigns
      summary: 'Retrieve a promotion - {GetPromotionRequest}'
      description: Retrieve a promotion
      operationId: GetPromotionRequestScopeIdCampaignIdpromotionsPromotionId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the promotion's campaign
          type: string
          required: true
          x-nullable: false
        - name: PromotionId
          in: path
          description: The id of the promotion to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: ValidateTargeting
          in: query
          description: Indicates whether the targeting conditions in the promotion should be validated
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Promotion'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Promotion'
        '404':
          description: Requested promotion not found
          schema:
            $ref: '#/definitions/Promotion'
      deprecated: false
    put:
      tags:
        - campaigns
      summary: 'Update an existing promotion - {UpdatePromotionRequest}'
      description: Update an existing promotion
      operationId: UpdatePromotionRequestScopeIdCampaignIdpromotionsPromotionId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the promotion's campaign
          type: string
          required: true
          x-nullable: false
        - name: PromotionId
          in: path
          description: The id of the promotion to be updated
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePromotionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Promotion'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Promotion'
      deprecated: false
    delete:
      tags:
        - campaigns
      summary: 'Delete the specified promotion - {DeletePromotionRequest}'
      description: Delete the specified promotion
      operationId: DeletePromotionRequestScopeIdCampaignIdpromotionsPromotionId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the promotion's campaign
          type: string
          required: true
          x-nullable: false
        - name: PromotionId
          in: path
          description: The id of the promotion to delete
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/campaigns/{ScopeId}/{CampaignId}/promotions/summaries':
    get:
      tags:
        - campaigns
      summary: 'Retrieve the summaries of all promotions of a campaign - {GetPromotionSummariesRequest}'
      description: Retrieve the summaries of all promotions of a campaign
      operationId: GetPromotionSummariesRequestScopeIdCampaignIdpromotionssummaries_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CampaignId
          in: path
          description: The id of the campaign
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromotionSummaries'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PromotionSummaries'
        '404':
          description: Requested campaign not found
          schema:
            $ref: '#/definitions/PromotionSummaries'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /segments:
    get:
      tags:
        - segments
      summary: 'Retrieve all segments - {GetSegmentsRequest}'
      description: Retrieve all segments
      operationId: GetSegmentsRequest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ValidateTargeting
          in: query
          description: Indicates whether the targeting conditions in the segment should be validated
          type: boolean
          required: false
          x-nullable: false
        - name: StartingIndex
          in: query
          description: The starting index. (The offset of the first record when requesting paged data)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: The number of items to return. (This is the page size when requesting paged data)
          type: integer
          format: int32
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Segment>
            type: array
            items:
              $ref: '#/definitions/Segment'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Segment>
            type: array
            items:
              $ref: '#/definitions/Segment'
        '404':
          description: Requested segment not found
          schema:
            title: List<Segment>
            type: array
            items:
              $ref: '#/definitions/Segment'
      deprecated: false
    post:
      tags:
        - segments
      summary: 'Create or update a segment based on name - {CreateOrUpdateSegmentRequest}'
      description: Create or update a segment based on name
      operationId: CreateOrUpdateSegmentRequest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateSegmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Segment'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /segment:
    put:
      tags:
        - segment
      summary: 'Update a segment - {UpdateSegmentRequest}'
      description: Update a segment
      operationId: UpdateSegmentRequest_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateSegmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Segment'
      deprecated: false
    post:
      tags:
        - segment
      summary: 'Create a segment - {CreateSegmentRequest}'
      description: Create a segment
      operationId: CreateSegmentRequest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateSegmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Segment'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/segments/{SegmentId}':
    get:
      tags:
        - segments
      summary: 'Retrieve a segment - {GetSegmentRequest}'
      description: Retrieve a segment
      operationId: GetSegmentRequestSegmentId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: SegmentId
          in: path
          description: The id of the segment to retrieve.
          type: string
          required: true
          x-nullable: false
        - name: ValidateTargeting
          in: query
          description: Indicates whether the targeting conditions in the segment should be validated
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Segment'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Segment'
        '404':
          description: Requested segment not found
          schema:
            $ref: '#/definitions/Segment'
      deprecated: false
    delete:
      tags:
        - segments
      summary: 'Delete a segment - {DeleteSegmentRequest}'
      description: Delete a segment
      operationId: DeleteSegmentRequestSegmentId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: SegmentId
          in: path
          description: The id of the segment to delete.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSegmentResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/DeleteSegmentResult'
        '404':
          description: Requested segment not found
          schema:
            $ref: '#/definitions/DeleteSegmentResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /segments/find:
    post:
      tags:
        - segments
      summary: 'Search for segments matching the parameters - {FindSegmentsRequest}'
      description: Search for segments matching the parameters
      operationId: FindSegmentsRequestfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindSegmentsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SegmentQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SegmentQueryResult'
        '404':
          description: Requested segment not found
          schema:
            $ref: '#/definitions/SegmentQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/catalogs/{CatalogId}':
    get:
      tags:
        - catalogs
      summary: 'Retrieve a catalog - {GetCatalogRequest}'
      description: Retrieve a catalog
      operationId: GetCatalogRequestCatalogId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CatalogId
          in: path
          description: The CatalogId of the request.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to process the request.
          type: string
          required: true
        - name: IncludeChildren
          in: query
          description: Indicates if the children must be included in the response.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Catalog'
        '404':
          description: Requested catalog id not found
          schema:
            $ref: '#/definitions/Catalog'
      deprecated: false
    put:
      tags:
        - catalogs
      summary: 'Update a catalog - {UpdateCatalogRequest}'
      description: Update a catalog
      operationId: UpdateCatalogRequestCatalogId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CatalogId
          in: path
          description: The unique identifier of the catalog to update.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCatalogRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Catalog'
        '404':
          description: Requested catalog id not found
          schema:
            $ref: '#/definitions/Catalog'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /catalogs/usedCultures:
    get:
      tags:
        - catalogs
      summary: 'Retrieve the list of cultures supported by product catalogs - {GetUsedLanguagesRequest}'
      description: 'Returns the list of cultures supported by product catalogs - {GetUsedLanguagesRequest}'
      operationId: GetUsedLanguagesRequestusedCultures_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CultureIsoList'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/CultureIsoList'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/CultureIsoList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/catalogs/{CatalogId}/children':
    get:
      tags:
        - catalogs
      summary: 'Retrieve all catalog children for a catalog - {GetCatalogChildrenIdsRequest}'
      description: Retrieve all catalog children for a catalog
      operationId: GetCatalogChildrenIdsRequestCatalogIdchildren_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CatalogId
          in: path
          description: The Id of the parent Catalog.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to process the request.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<Catalog>
            type: array
            items:
              $ref: '#/definitions/Catalog'
        '404':
          description: Requested catalog id not found
          schema:
            title: List<Catalog>
            type: array
            items:
              $ref: '#/definitions/Catalog'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/catalogs/closestlanguage/{CatalogId}/{Language}':
    get:
      tags:
        - catalogs
      summary: 'Retrieve the ''closest'' language supported by a catalog from the requested language - {GetClosestCatalogLanguageRequest}'
      description: 'Retrieve the ''closest'' language supported by a catalog from the requested language - {GetClosestCatalogLanguageRequest}. This allows to know if a language is supported by a given Catalog. If it is, it will be returned as is, otherwise the ''closest'' language is returned. The ''closest'' language could be the same language but different country, if it is not supported the default language of the catalog is returned.'
      operationId: GetClosestCatalogLanguageRequestclosestlanguageCatalogIdLanguage_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CatalogId
          in: path
          description: The ID of the catalog
          type: string
          required: true
        - name: Language
          in: path
          description: The requested language
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated for using this request
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}':
    get:
      tags:
        - categories
      summary: 'Retrieve the categories - {GetCategoriesV2Request}'
      description: 'Retrieve a flat list of the categories for a scope, the relationships will not be loaded'
      operationId: GetCategoriesV2Requestv2ScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}':
    get:
      tags:
        - categories
      summary: 'Retrieve a category - {GetCategoryRequest}'
      description: Retrieve a category  without loading the children or relationships
      operationId: GetCategoryRequestScopeIdCategoryId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: IncludeRelationships
          in: query
          description: Indicates if the relationships must be included in the response.
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Requested category id not found
          schema:
            $ref: '#/definitions/Category'
      deprecated: false
    post:
      tags:
        - categories
      summary: 'Update an existing category - {UpdateCategoryRequest}'
      description: Update an existing category
      operationId: UpdateCategoryRequestScopeIdCategoryId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category's id.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCategoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Category'
      deprecated: false
    delete:
      tags:
        - categories
      summary: 'Delete a category and related products - {DeleteCategoryRequest}'
      description: Delete a category and related products
      operationId: DeleteCategoryRequestScopeIdCategoryId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category's id.
          type: string
          required: true
        - name: DeleteProducts
          in: query
          description: Determines whether the products should be deleted or have the category association removed.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/existing':
    get:
      tags:
        - categories
      summary: 'Retrieve the category tree existing items of the specified parameters - {GetCategoryTreeExistingItemByStateRequest}'
      description: Retrieve the category tree existing items of the specified parameters
      operationId: GetCategoryTreeExistingItemByStateRequestScopeIdexisting_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture in which the data will be returned
          type: string
          required: false
        - name: DraftState
          in: query
          description: The draft state used to filter the products
          type: string
          required: false
        - name: IsNew
          in: query
          description: The flag to get only new or not new products
          type: boolean
          required: false
        - name: HasNotification
          in: query
          description: The flag to get only or not products with change notification
          type: boolean
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCategoryTreeExistingItemByStateResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/containingProducts':
    get:
      tags:
        - categories
      summary: 'Retrieve the ids of the categories that contain products in a given publication state - {GetCategoriesContainingProductsByStatusRequest}'
      description: Retrieve the ids of the categories that contain products in a given publication state
      operationId: GetCategoriesContainingProductsByStatusRequestScopeIdcontainingProducts_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PublicationStatus
          in: query
          description: The publication status to filter the products
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCategoriesContainingProductsByStatusResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}/{CategoryId}/children':
    get:
      tags:
        - categories
      summary: 'Retrieve the tree of child categories for a category - {GetCategoryChildrenV2Request}'
      description: 'Retrieve the tree of child categories for a category, the relationships will not be loaded'
      operationId: GetCategoryChildrenV2Requestv2ScopeIdCategoryIdchildren_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryList'
        '404':
          description: Happened when the category is not found.
          schema:
            $ref: '#/definitions/CategoryList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}/{CategoryId}/treeNodes':
    get:
      tags:
        - categories
      summary: 'Retrieve all the child nodes of a category node - {GetCategoryTreeNodesV2Request}'
      description: Request to retrieve all the child nodes of a category node
      operationId: GetCategoryTreeNodesV2Requestv2ScopeIdCategoryIdtreeNodes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The Scope of the request.
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The root node category unique identifier
          type: string
          required: true
        - name: MaximumItems
          in: query
          description: A hint that the service will use to determine the maximum number of nodes to return
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to process the request.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryTreeNode'
        '404':
          description: Category not found
          schema:
            $ref: '#/definitions/CategoryTreeNode'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}/{CategoryId}/relationships':
    get:
      tags:
        - categories
      summary: 'Retrieve all relationships for a category - {GetCategoryRelationshipsV2Request}'
      description: Retrieve all relationships for a category
      operationId: GetCategoryRelationshipsV2Requestv2ScopeIdCategoryIdrelationships_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Relationship>
            type: array
            items:
              $ref: '#/definitions/Relationship'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/treeNodes/{StartId}/{EndId}':
    get:
      tags:
        - categories
      summary: 'Retrieve all nodes and their child nodes of a category tree node path - {GetCategoryTreeNodesForPathRequest}'
      description: Request to retrieve all nodes and their child nodes of a category tree node path
      operationId: GetCategoryTreeNodesForPathRequestScopeIdtreeNodesStartIdEndId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The ScopeId of the request.
          type: string
          required: true
        - name: StartId
          in: path
          description: The unique identifier of the first node of the path (a category id).
          type: string
          required: true
        - name: EndId
          in: path
          description: The unique identifier of the last node of the path (a category id).
          type: string
          required: true
        - name: CultureName
          in: query
          description: The name of the culture to use to process the request.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryTreeNode'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}/children/sequence':
    post:
      tags:
        - categories
      summary: 'Update categories sequence - {UpdateCategorySequenceRequest}'
      description: Update categories sequence
      operationId: UpdateCategorySequenceRequestScopeIdCategoryIdchildrensequence_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category to which the child categories are associated.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCategorySequenceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCategorySequenceResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}/{CategoryId}/products':
    get:
      tags:
        - categories
      summary: 'Retrieve products from a category - {GetProductsByCategoryV2Request}'
      description: Retrieve products from a category
      operationId: GetProductsByCategoryV2Requestv2ScopeIdCategoryIdproducts_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id at which point in the category hierarchy should the 'get products' be started.
          type: string
          required: true
        - name: ContinuationToken
          in: query
          description: The continuation token used for pagination
          type: string
          required: false
        - name: PageSize
          in: query
          description: 'The maximum number of products to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: whether or not to include the variants (if they exists) of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeMedia
          in: query
          description: ' Gets or sets a value indicating whether or not to include the media of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductListPage'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/v2/{ScopeId}/{CategoryId}':
    get:
      tags:
        - categories
      summary: 'Retrieve a category - {GetCategoryV2Request}'
      description: Retrieve a category  without loading the children or relationships
      operationId: GetCategoryV2Requestv2ScopeIdCategoryId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: IncludeChildren
          in: query
          description: Indicates if the relationships must be included in the response.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: Indicates if the relationships must be included in the response.
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Requested category id not found
          schema:
            $ref: '#/definitions/Category'
      deprecated: false
    put:
      tags:
        - categories
      summary: 'Update an existing category - {UpdateCategoryV2Request}'
      description: Update an existing category
      operationId: UpdateCategoryV2Requestv2ScopeIdCategoryId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category's id.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCategoryV2Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Category'
      deprecated: false
    delete:
      tags:
        - categories
      summary: 'Delete a category and related products - {DeleteCategoryV2Request}'
      description: Delete a category and related products
      operationId: DeleteCategoryV2Requestv2ScopeIdCategoryId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category's id.
          type: string
          required: true
        - name: DeleteProducts
          in: query
          description: Determines whether the products should be deleted or have the category association removed.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}/relationships':
    get:
      tags:
        - categories
      summary: 'Retrieve all relationships for a category - {GetCategoryRelationshipsRequest}'
      description: Retrieve all relationships for a category
      operationId: GetCategoryRelationshipsRequestScopeIdCategoryIdrelationships_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Relationship>
            type: array
            items:
              $ref: '#/definitions/Relationship'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}/children':
    get:
      tags:
        - categories
      summary: 'Retrieve the tree of child categories for a category - {GetCategoryChildrenRequest}'
      description: 'Retrieve the tree of child categories for a category, the relationships will not be loaded'
      operationId: GetCategoryChildrenRequestScopeIdCategoryIdchildren_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Category>
            type: array
            items:
              $ref: '#/definitions/Category'
        '404':
          description: Happened when the category is not found.
          schema:
            title: List<Category>
            type: array
            items:
              $ref: '#/definitions/Category'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}/treeNodes':
    get:
      tags:
        - categories
      summary: 'Retrieve all the child nodes of a category node - {GetCategoryTreeNodesRequest}'
      description: Request to retrieve all the child nodes of a category node
      operationId: GetCategoryTreeNodesRequestScopeIdCategoryIdtreeNodes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The Scope of the request.
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The root node category unique identifier
          type: string
          required: true
        - name: MaximumItems
          in: query
          description: A hint that the service will use to determine the maximum number of nodes to return
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to process the request.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryTreeNode'
        '404':
          description: Category not found
          schema:
            $ref: '#/definitions/CategoryTreeNode'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/treeNodes/{SearchTerms}':
    get:
      tags:
        - categories
      summary: 'Find category tree nodes - {FindCategoryTreeNodesRequest}'
      description: Request to find category tree nodes
      operationId: FindCategoryTreeNodesRequestScopeIdtreeNodesSearchTerms_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The Scope of the request.
          type: string
          required: true
        - name: SearchTerms
          in: path
          description: The search terms for the query.
          type: string
          required: true
        - name: MaximumResultSize
          in: query
          description: A hint that the service will use to determine the maximum number of nodes to return
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to process the request.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<CategoryTreeNode>
            type: array
            items:
              $ref: '#/definitions/CategoryTreeNode'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}/{CategoryId}/products':
    get:
      tags:
        - categories
      summary: 'Retrieve products from a category - {GetProductsByCategoryRequest}'
      description: Retrieve products from a category
      operationId: GetProductsByCategoryRequestScopeIdCategoryIdproducts_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id at which point in the category hierarchy should the 'get products' be started.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
        - name: StartingIndex
          in: query
          description: the starting index in the results to start getting the products (used for paging purpose)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum number of results to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: Whether or not to include the variants (if they exists) of the products.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePriceLists
          in: query
          description: Whether or not to include the price lists of the products.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Product>
            type: array
            items:
              $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/categories/{ScopeId}':
    get:
      tags:
        - categories
      summary: 'Retrieve the categories - {GetCategoriesRequest}'
      description: 'Retrieve a flat list of the categories for a scope, the relationships will not be loaded'
      operationId: GetCategoriesRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Category>
            type: array
            items:
              $ref: '#/definitions/Category'
      deprecated: false
    post:
      tags:
        - categories
      summary: 'Create a category - {CreateCategoryRequest}'
      description: Create a category
      operationId: CreateCategoryRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCategoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Category'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{CategoryId}/count':
    get:
      tags:
        - products
      summary: 'Retrieve the numbers of products by category - {GetProductsCountByCategoryRequest}'
      description: Retrieve the numbers of products by category
      operationId: GetProductsCountByCategoryRequestScopeIdCategoryIdcount_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id at which point in the category hierarchy the 'get products' should  be started. If nothing is specified the root is used as starting point
          type: string
          required: true
        - name: IncludeDescendantsCategories
          in: query
          description: Whether or not the descendant categories content should be recursively included below the specified starting categoryId
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsCountByCategoryResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/draft/{ProductId}':
    get:
      tags:
        - products
      summary: 'Retrieve a product draft by product id - {GetProductDraftRequest}'
      description: Retrieve a product draft by product id
      operationId: GetProductDraftRequestScopeIddraftProductId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDraft'
        '404':
          description: When the product draft was not found.
          schema:
            $ref: '#/definitions/ProductDraft'
      deprecated: false
    post:
      tags:
        - products
      summary: 'Update a product draft - {UpdateProductDraftRequest}'
      description: Update a product draft
      operationId: UpdateProductDraftRequestScopeIddraftProductId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: Gets or sets the id of the product for which we want to update the draft
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductDraftRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDraft'
      deprecated: false
    delete:
      tags:
        - products
      summary: 'Delete a product draft - {DeleteProductDraftRequest}'
      description: Delete a product draft
      operationId: DeleteProductDraftRequestScopeIddraftProductId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: Gets or sets the id of the product for which we want to delete the draft
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/sync/{ScopeId}/{ProductId}':
    put:
      tags:
        - products
      summary: 'Synchronizes a product - {SyncProductRequest}'
      description: Synchronizes a product
      operationId: SyncProductRequestsyncScopeIdProductId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: Gets or sets the id of the product for which we want to update
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SyncProductRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/draftStates/{ProductId}':
    get:
      tags:
        - products
      summary: 'Retrieve a product draft states by product id - {GetProductDraftStatesRequest}'
      description: Retrieve a product draft states by product id
      operationId: GetProductDraftStatesRequestScopeIddraftStatesProductId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocalizedDraftState'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/LocalizedDraftState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/relationships':
    get:
      tags:
        - products
      summary: 'Retrieve a product relationships - {GetProductRelationshipsRequest}'
      description: Retrieve a product relationships
      operationId: GetProductRelationshipsRequestScopeIdProductIdrelationships_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The product id
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Relationship>
            type: array
            items:
              $ref: '#/definitions/Relationship'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/v2/{ScopeId}/{ProductId}':
    get:
      tags:
        - products
      summary: 'Retrieve a product by Id - {GetProductV2Request}'
      description: Retrieve a product by id
      operationId: GetProductV2Requestv2ScopeIdProductId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The business id for the product to retrieve
          type: string
          required: true
        - name: IncludeImageUrl
          in: query
          description: A value indicating whether or not to include the image url.
          type: boolean
          required: false
          x-nullable: false
        - name: PublishedVersion
          in: query
          description: A value indicating whether the published version of the product should be returned.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeInheritanceInformation
          in: query
          description: A value indicating whether to include the list of overridden properties and variants. Applicable for sales scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: whether or not to include the variants (if they exists) of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeMedia
          in: query
          description: ' Gets or sets a value indicating whether or not to include the media of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    delete:
      tags:
        - products
      summary: 'Deletes product from the scope and all child scopes - {DeleteProductByIdV2Request}'
      description: Deletes product from the scope and all child scopes
      operationId: DeleteProductByIdV2Requestv2ScopeIdProductId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The product's id.
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/v2/{ScopeId}/byIds':
    post:
      tags:
        - products
      summary: 'Retrieve products by Ids - {GetProductsByIdsV2Request}'
      description: Retrieve products by ids
      operationId: GetProductsByIdsV2Requestv2ScopeIdbyIds_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsByIdsV2Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductList'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/ProductList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/exists/{ScopeId}/{ProductId}':
    get:
      tags:
        - products
      summary: 'Checks whether the product exists in the specified scope - {ProductExistsRequest}'
      description: Checks whether the product exists in the specified scope
      operationId: ProductExistsRequestexistsScopeIdProductId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductExistsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/repairInheritance':
    put:
      tags:
        - products
      summary: 'Repair Broken Inheritence for the product - {RepairProductInheritanceRequest}'
      description: "Repair Broken Inheritence From Global:\r\na. adds the properties that exist in global but not in sales\r\nb. revert the properties that has been changed compare to global \r\nc. keep the properties that have been added in sales but do not exist in global\r\nd. revert variants to the global version"
      operationId: RepairProductInheritanceRequestScopeIdProductIdrepairInheritance_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: Gets or sets the id of the product for which we want to repair the inheritence
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RepairProductInheritanceRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/product/{ProductId}':
    delete:
      tags:
        - products
      summary: 'Deletes product from the scope and all child scopes - {DeleteProductByIdRequest}'
      description: Deletes product from the scope and all child scopes
      operationId: DeleteProductByIdRequestScopeIdproductProductId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The product's id.
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/byCategoryId/{CategoryId}':
    get:
      tags:
        - products
      summary: 'Retrieve specified properties of all products in a given category - {GetProductsPropertiesByCategoryRequest}'
      description: Retrieve specified properties of all products in a given category
      operationId: GetProductsPropertiesByCategoryRequestScopeIdbyCategoryIdCategoryId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CategoryId
          in: path
          description: The category id at which point in the category hierarchy should the 'get products' be started.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture in which the data will be returned
          type: string
          required: false
        - name: PropertiesNames
          in: query
          description: the list of properties to return
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: StartingIndex
          in: query
          description: the starting index in the results to start getting the products (used for paging purpose)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum number of results to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: SortBy
          in: query
          description: The name of the property to be sorted
          type: string
          required: false
          x-nullable: false
        - name: SortDirection
          in: query
          description: The sorting direction
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsPropertiesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/byDraftState/{DraftState}':
    get:
      tags:
        - products
      summary: 'Retrieve specified properties of all products in a given state - {GetProductsPropertiesByDraftStateRequest}'
      description: Retrieve specified properties of all products in a given state
      operationId: GetProductsPropertiesByDraftStateRequestScopeIdbyDraftStateDraftState_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: DraftState
          in: path
          description: The draft state used to filter the products
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture in which the data will be returned
          type: string
          required: false
        - name: PropertiesNames
          in: query
          description: the list of properties to return
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: StartingIndex
          in: query
          description: the starting index in the results to start getting the products (used for paging purpose)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum number of results to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: SortBy
          in: query
          description: The name of the property to be sorted
          type: string
          required: false
          x-nullable: false
        - name: SortDirection
          in: query
          description: The sorting direction
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsPropertiesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/variants':
    get:
      tags:
        - products
      summary: 'Retrieve all the product''s variants - {GetVariantsByProductRequest}'
      description: Retrieve all the product's variants
      operationId: GetVariantsByProductRequestScopeIdProductIdvariants_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope associated to the requested product
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Variant>
            type: array
            items:
              $ref: '#/definitions/Variant'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/priceLists/find':
    get:
      tags:
        - products
      summary: 'Find all price lists - {FindPriceListsRequest}'
      description: Find all price lists. Represents a group of prices that are applied to products
      operationId: FindPriceListsRequestScopeIdpriceListsfind_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
        - name: IncludeExpiredEntries
          in: query
          description: Gets or sets a value indicating whether expired entries should be returned. Default is false.
          type: boolean
          required: false
          x-nullable: false
        - name: StartDate
          in: query
          description: Gets or sets the lower bound of dates used to filter returned priceLists (optional). Set this date to filter the results to price lists active after this date.
          type: string
          format: date-time
          required: false
        - name: EndDate
          in: query
          description: Gets or sets the upper bound of dates used to filter returned priceLists (optional). Set this date to filter the results to price lists active before this date.
          type: string
          format: date-time
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<PriceList>
            type: array
            items:
              $ref: '#/definitions/PriceList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/price':
    post:
      tags:
        - products
      summary: 'Retrieve the price of a product - {CalculateProductPriceRequest}'
      description: Retrieve the price product by id
      operationId: CalculateProductPriceRequestScopeIdProductIdprice_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CalculateProductPriceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductPrice'
        '404':
          description: When no price was found for the product or the product doesn't exist.
          schema:
            $ref: '#/definitions/ProductPrice'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/productPriceEntries':
    post:
      tags:
        - products
      summary: 'Retrieve product prices by Id - {GetProductPriceEntriesRequest}'
      description: Retrieve product's prices by id
      operationId: GetProductPriceEntriesRequestScopeIdProductIdproductPriceEntries_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductPriceEntriesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductPriceEntriesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/priceLists/{PriceListId}':
    put:
      tags:
        - products
      summary: 'Updates a price list in the specified scope - {UpdatePriceListRequest}'
      description: Updates a price list in the specified scope. Its priority sequence is automatically calculated according to the specified price list with the next higher priority sequence.
      operationId: UpdatePriceListRequestScopeIdpriceListsPriceListId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PriceListId
          in: path
          description: The identifier of the PriceList.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePriceListRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PriceList'
      deprecated: false
    post:
      tags:
        - products
      summary: 'Creates a price list into the specified scope - {CreatePriceListRequest}'
      description: Creates a price list into the specified scope. Its priority sequence is automatically calculated according to the specified price list with the next higher priority sequence.
      operationId: CreatePriceListRequestScopeIdpriceListsPriceListId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PriceListId
          in: path
          description: The identifier of the PriceList.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreatePriceListRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PriceList'
      deprecated: false
    delete:
      tags:
        - products
      summary: 'Deletes a price list - {DeletePriceListRequest}'
      description: Deletes a price list only if that price list does not have any price list entries neither in the scope nor in its dependent scopes.
      operationId: DeletePriceListRequestScopeIdpriceListsPriceListId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PriceListId
          in: path
          description: The identifier of the price list.
          type: string
          required: true
        - name: DeletePriceListEntries
          in: query
          description: The value indicating whether the related price list entries should be deleted as well.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bySku/{Sku}':
    get:
      tags:
        - products
      summary: 'Retrieve the products by sku, it can be the product or the variant sku - {GetProductsBySkuRequest}'
      description: 'Retrieve the products by the specified the stock keeping unit code (SKU). It is either the Sku of the product or the Sku of one of its variants. The products variants are always returned. According to the sku uniqueness level defined, more than one product may be returned.'
      operationId: GetProductsBySkuRequestScopeIdbySkuSku_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: the stock keeping unit code (SKU) for the products to retrieve
          type: string
          required: true
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the products.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: ' Gets or sets a value indicating whether or not to include the relationships of the products.'
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Product>
            type: array
            items:
              $ref: '#/definitions/Product'
        '404':
          description: When the product was not found.
          schema:
            title: List<Product>
            type: array
            items:
              $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/v2/{ScopeId}/bySkus':
    post:
      tags:
        - products
      summary: 'Retrieve products by SKU-s - {GetProductsBySkusV2Request}'
      description: Retrieve products by ids
      operationId: GetProductsBySkusV2Requestv2ScopeIdbySkus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsBySkusV2Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductList'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/ProductList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/priceListEntries':
    get:
      tags:
        - products
      summary: 'Retrieve price list entries - {GetPriceListEntriesRequest}'
      description: Retrieves price list entries for a given product or variant in a specific scope.
      operationId: GetPriceListEntriesRequestScopeIdProductIdpriceListEntries_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to retrieve price list entries
          type: string
          required: true
        - name: VariantId
          in: query
          description: The id of the variant for which we want to retrieve price list entries
          type: string
          required: false
        - name: UseParentScope
          in: query
          description: 'Returns values from the parent scope of the one provided in the request or not, default is false'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeExpiredEntries
          in: query
          description: Gets or sets a value indicating whether expired entries should be returned. Default is false.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<PriceListEntry>
            type: array
            items:
              $ref: '#/definitions/PriceListEntry'
      deprecated: false
    put:
      tags:
        - products
      summary: 'Updates a price List Entry - {UpdatePriceListEntryRequest}'
      description: Updates a price List Entry
      operationId: UpdatePriceListEntryRequestScopeIdProductIdpriceListEntries_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to update a price list entry
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePriceListEntryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PriceListEntry'
      deprecated: false
    post:
      tags:
        - products
      summary: 'Adds a price List Entry - {AddPriceListEntryRequest}'
      description: Adds a price List Entry
      operationId: AddPriceListEntryRequestScopeIdProductIdpriceListEntries_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to add a price list entry
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddPriceListEntryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PriceListEntry'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/effectivePriceEntryInfo':
    get:
      tags:
        - products
      summary: 'Retrieves the Price List Info for a product at a specific DateTime - {GetEffectivePriceEntryInfoRequest}'
      description: Retrieves the Price List Info for a product at a specific DateTime
      operationId: GetEffectivePriceEntryInfoRequestScopeIdProductIdeffectivePriceEntryInfo_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to retrieve the effective price
          type: string
          required: true
        - name: VariantId
          in: query
          description: The id of the variant for which we want to retrieve the effective price
          type: string
          required: false
        - name: ReferenceDate
          in: query
          description: 'The Reference Date, null = Now'
          type: string
          format: date-time
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EffectivePriceEntryInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{ScopeId}/{AssociatedLocationId}':
    get:
      tags:
        - inventoryLocations
      summary: 'Retrieve an inventory location by Id - {GetInventoryLocationRequest}'
      description: Retrieve an inventory location by id
      operationId: GetInventoryLocationRequestScopeIdAssociatedLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: AssociatedLocationId
          in: path
          description: the business id for the inventory location to retrieve
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryLocation'
        '404':
          description: The inventory location was not found.
          schema:
            $ref: '#/definitions/InventoryLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{InventoryLocationId}/schedules':
    get:
      tags:
        - inventoryLocations
      summary: 'Retrieve all the inventory schedules of a location - {GetInventorySchedulesRequest}'
      description: Retrieve all the inventory schedules of a location
      operationId: GetInventorySchedulesRequestInventoryLocationIdschedules_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: the business id for the inventory location which schedules to retrieve
          type: string
          required: true
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
        '404':
          description: No inventory schedule associated to the inventory location was found.
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
      deprecated: false
    put:
      tags:
        - inventoryLocations
      summary: 'Update an inventory schedule daterange and status - {UpdateInventoryScheduleRequest}'
      description: Update an inventory schedule daterange and status
      operationId: UpdateInventoryScheduleRequestInventoryLocationIdschedules_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier used to identify the right schedule to update
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateInventoryScheduleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventorySchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventorySchedule'
        '404':
          description: The inventory schedule was not found.
          schema:
            $ref: '#/definitions/InventorySchedule'
      deprecated: false
    post:
      tags:
        - inventoryLocations
      summary: 'Add an inventory schedule to a location - {AddInventoryScheduleRequest}'
      description: Add an inventory schedule to a location
      operationId: AddInventoryScheduleRequestInventoryLocationIdschedules_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddInventoryScheduleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventorySchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventorySchedule'
        '404':
          description: The inventory schedule was not found.
          schema:
            $ref: '#/definitions/InventorySchedule'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{ScopeId}':
    post:
      tags:
        - inventoryLocations
      summary: 'Creates or updates an inventory location - {CreateInventoryLocationRequest}'
      description: Creates or updates an inventory location
      operationId: CreateInventoryLocationRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateInventoryLocationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryLocation'
        '404':
          description: The associated inventory location was not found.
          schema:
            $ref: '#/definitions/InventoryLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{InventoryLocationId}/schedules/bySku/{Sku}':
    get:
      tags:
        - inventoryLocations
      summary: 'Retrieve all the inventory schedules of a location and a sku - {GetInventorySchedulesBySkuRequest}'
      description: Retrieve all the inventory schedules of a location and a sku
      operationId: GetInventorySchedulesBySkuRequestInventoryLocationIdschedulesbySkuSku_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: the business id for the inventory location which schedules to retrieve
          type: string
          required: true
        - name: Sku
          in: path
          description: the sku for the product which schedules to retrieve
          type: string
          required: true
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
        '404':
          description: No inventory schedule associated to the inventory location was found.
          schema:
            title: List<InventorySchedule>
            type: array
            items:
              $ref: '#/definitions/InventorySchedule'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{InventoryLocationId}/schedules/byId/{ScheduleId}':
    get:
      tags:
        - inventoryLocations
      summary: 'Retrieve an inventory schedule of a location using its id - {GetInventoryScheduleByIdRequest}'
      description: Retrieve an inventory schedule of a location using its id
      operationId: GetInventoryScheduleByIdRequestInventoryLocationIdschedulesbyIdScheduleId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: the business id for the inventory location which schedules to retrieve
          type: string
          required: true
        - name: ScheduleId
          in: path
          description: the id of the schedule to retrieve
          type: string
          required: true
          x-nullable: false
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventorySchedule'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventorySchedule'
        '404':
          description: No inventory schedule associated to the inventory location was found.
          schema:
            $ref: '#/definitions/InventorySchedule'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryLocations/{InventoryLocationId}/schedules/{ScheduleId}':
    delete:
      tags:
        - inventoryLocations
      summary: 'Delete an inventory schedule - {DeleteInventoryScheduleRequest}'
      description: Delete an inventory schedule
      operationId: DeleteInventoryScheduleRequestInventoryLocationIdschedulesScheduleId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier used to identify the right schedule to update
          type: string
          required: true
        - name: ScheduleId
          in: path
          description: The inventory schedule identifier used to find the right schedule to update
          type: string
          required: true
          x-nullable: false
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}/byLocation/{InventoryLocationId}':
    get:
      tags:
        - inventoryItems
      summary: 'Retrieve an InventoryItem represented by association of sku and location id - {GetInventoryItemBySkuAndLocationRequest}'
      description: Retrieve an InventoryItem represented by association of sku and location id
      operationId: GetInventoryItemBySkuAndLocationRequestScopeIdbySkuSkubyLocationInventoryLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItem
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
          type: string
          required: true
        - name: Date
          in: query
          description: 'The date for which the status will be computed. If is default, DateTime.Now will be used.'
          type: string
          format: date-time
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryItemStatusDetails'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryItemStatusDetails'
        '404':
          description: No inventory schedules was found.
          schema:
            $ref: '#/definitions/InventoryItemStatusDetails'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/byLocation/{InventoryLocationId}/bySkus/status':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve the detail about the status of Inventory Items represented by the specified InventoryLocationId and a list of skus for the specified date - {FindInventoryItemStatusByLocationAndSkusRequest}'
      description: Retrieve the detail about the status of Inventory Items represented by the specified InventoryLocationId and a list of skus for the specified date
      operationId: FindInventoryItemStatusByLocationAndSkusRequestScopeIdbyLocationInventoryLocationIdbySkusstatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItemStatus
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindInventoryItemStatusByLocationAndSkusRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/findProviders':
    get:
      tags:
        - inventoryItems
      summary: 'Retrieves all available inventory providers - {GetInventoryProvidersRequest}'
      description: Finds all available inventory providers available in the system.
      operationId: GetInventoryProvidersRequestScopeIdfindProviders_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language that data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryProviderDetails>
            type: array
            items:
              $ref: '#/definitions/InventoryProviderDetails'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryProviderDetails>
            type: array
            items:
              $ref: '#/definitions/InventoryProviderDetails'
        '404':
          description: No inventory providers was found.
          schema:
            title: List<InventoryProviderDetails>
            type: array
            items:
              $ref: '#/definitions/InventoryProviderDetails'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/find':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve a list of InventoryItem - {FindInventoryItemsRequest}'
      description: Retrieve a list of InventoryItem
      operationId: FindInventoryItemsRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindInventoryItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItem>
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItem>
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySkus':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve a list of InventoryItemStatusDetails represented by SKUs from all inventory location associated to the specific scope - {GetInventoryItemsByScopeAndSkusRequest}'
      description: Retrieve a list of InventoryItemStatusDetails represented by SKUs from all inventory location associated to the specific scope. The list of inventory location ids is all existing Fulfillment Locations inside the specific Scope
      operationId: GetInventoryItemsByScopeAndSkusRequestScopeIdbySkus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetInventoryItemsByScopeAndSkusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
        '404':
          description: No inventory items was found for given SKUs
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}':
    get:
      tags:
        - inventoryItems
      summary: "Find all reserved inventory items\_associated to the specified owner - {GetInventoryReservedItemsRequest}"
      description: "Find all reserved inventory items\_associated to the specified owner."
      operationId: GetInventoryReservedItemsRequestreservationsOwnerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<InventoryReservedItem>
            type: array
            items:
              $ref: '#/definitions/InventoryReservedItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: IEnumerable<InventoryReservedItem>
            type: array
            items:
              $ref: '#/definitions/InventoryReservedItem'
      deprecated: false
    post:
      tags:
        - inventoryItems
      summary: 'Allows to send requests to reserve a list of inventory items - {ReserveInventoryItemsRequest}'
      description: Allows to send requests to reserve a list of inventory items.
      operationId: ReserveInventoryItemsRequestreservationsOwnerId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ReserveInventoryItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryReservationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryReservationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}':
    get:
      tags:
        - inventoryItems
      summary: 'Retrieve a list of InventoryItemStatusDetails represented by sku from all inventory location associated to the specific scope - {GetInventoryItemsByScopeAndSkuRequest}'
      description: Retrieve a list of InventoryItemStatusDetails represented by sku from all inventory location associated to the specific scope. The list of inventory location ids is all existing Fulfillment Locations inside the specific Scope
      operationId: GetInventoryItemsByScopeAndSkuRequestScopeIdbySkuSku_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItem
          type: string
          required: true
        - name: IncludeChildScopes
          in: query
          description: Whether inventory locations from child scopes should also be included in the results.
          type: boolean
          required: false
          x-nullable: false
        - name: StartingIndex
          in: query
          description: The starting index
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum items returned by the search query, default to 50'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: SortOrderField
          in: query
          description: the sort order field.
          type: string
          required: false
          x-nullable: false
        - name: SortDirection
          in: query
          description: The sort direction. (Ascending or descending)
          type: string
          required: false
          x-nullable: false
        - name: Date
          in: query
          description: 'The date which will be used to compute the status. If is not set, DateTime.Now will be used.'
          type: string
          format: date-time
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
        '404':
          description: No inventory items was found for this sku
          schema:
            $ref: '#/definitions/InventoryItemStatusDetailsQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/byLocation/{InventoryLocationId}':
    get:
      tags:
        - inventoryItems
      summary: 'Retrieve a list of InventoryItem represented by inventory location id - {GetInventoryItemsByLocationRequest}'
      description: Retrieve a list of InventoryItem represented by inventory location id
      operationId: GetInventoryItemsByLocationRequestScopeIdbyLocationInventoryLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItem>
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItem>
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySkus/status':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve the detail about the status of Inventory Items represented by the specified InventoryLocationId and a list of skus for the specified date - {FindInventoryItemsStatusByScopeAndSkusRequest}'
      description: Retrieve the detail about the status of Inventory Items represented by the specified InventoryLocationId and a list of skus for the specified date
      operationId: FindInventoryItemsStatusByScopeAndSkusRequestScopeIdbySkusstatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindInventoryItemsStatusByScopeAndSkusRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/{InventoryLocationId}/{Sku}':
    put:
      tags:
        - inventoryItems
      summary: 'Create or update an inventory item - {CreateOrUpdateInventoryItemRequest}'
      description: Create or update an inventory item
      operationId: CreateOrUpdateInventoryItemRequestScopeIdInventoryLocationIdSku_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier used to identify the right inventory to update
          type: string
          required: true
        - name: Sku
          in: path
          description: The associated product sku
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateInventoryItemRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryItem'
        '404':
          description: The inventory item was not found.
          schema:
            $ref: '#/definitions/InventoryItem'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}/confirm':
    post:
      tags:
        - inventoryItems
      summary: 'Applies the reserved items on the available quantitites in the inventory, decrement the effective reservation and changes the status Confirmed. - {ConfirmInventoryReservedOrderItemsRequest}'
      description: 'Applies the reserved items on the available quantitites in the inventory, decrement the effective reservation and changes the status Confirmed.'
      operationId: ConfirmInventoryReservedOrderItemsRequestreservationsOwnerIdconfirm_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ConfirmInventoryReservedOrderItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<InventoryReservedItem>
            type: array
            items:
              $ref: '#/definitions/InventoryReservedItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: IEnumerable<InventoryReservedItem>
            type: array
            items:
              $ref: '#/definitions/InventoryReservedItem'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}/evaluate':
    post:
      tags:
        - inventoryItems
      summary: 'Allows to send requests to evaluate inventory item availability - {EvaluateInventoryAvailabilityRequest}'
      description: Allows to send requests to evaluate inventory item availability.
      operationId: EvaluateInventoryAvailabilityRequestreservationsOwnerIdevaluate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/EvaluateInventoryAvailabilityRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItemAvailabilityEvaluationResult>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailabilityEvaluationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItemAvailabilityEvaluationResult>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailabilityEvaluationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}/cancelList':
    post:
      tags:
        - inventoryItems
      summary: 'Allows to cancel a list of inventory reserved items associated to the specified owner. - {CancelInventoryReservedItemsRequest}'
      description: Allows to cancel a list of inventory reserved items associated to the specified owner.
      operationId: CancelInventoryReservedItemsRequestreservationsOwnerIdcancelList_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelInventoryReservedItemsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}/cancelAll':
    post:
      tags:
        - inventoryItems
      summary: 'Cancel all inventory reserved items associated to the specified owner and inventory location. - {CancelAllInventoryReservedItemsRequest}'
      description: Cancel all inventory reserved items associated to the specified owner and inventory location.
      operationId: CancelAllInventoryReservedItemsRequestreservationsOwnerIdcancelAll_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'Gets or sets the unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelAllInventoryReservedItemsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/reservations/{OwnerId}/changeStockStatus':
    post:
      tags:
        - inventoryItems
      summary: 'Change the stock status of inventory reserved items from their current stock status to the new given stock status. - {ChangeInventoryReservedItemsStockStatusRequest}'
      description: Change the stock status of inventory reserved items from their current stock status to the new given stock status.Executing this request will only update the stock status of the specified reserved items. All corresponding order line items status will remain unchanged.The corresponding order must be reprocessed by using the PostProcessOrderRequest to get it's line items status updated with the new reserved stock status.
      operationId: ChangeInventoryReservedItemsStockStatusRequestreservationsOwnerIdchangeStockStatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: OwnerId
          in: path
          description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeInventoryReservedItemsStockStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChangeInventoryReservedItemsStockStatusResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ChangeInventoryReservedItemsStockStatusResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}/byLocation/{InventoryLocationId}/status':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve the detail about the status of Inventory Item represented by the specified Sku and InventoryLocationId for the specified date - {FindInventoryItemStatusBySkuAndLocationRequest}'
      description: Retrieve the detail about the status of Inventory Item represented by the specified Sku and InventoryLocationId for the specified date
      operationId: FindInventoryItemStatusBySkuAndLocationRequestScopeIdbySkuSkubyLocationInventoryLocationIdstatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItemStatus
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItemStatus
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindInventoryItemStatusBySkuAndLocationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryItemAvailability'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryItemAvailability'
        '404':
          description: No inventory schedules was found.
          schema:
            $ref: '#/definitions/InventoryItemAvailability'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}/status':
    post:
      tags:
        - inventoryItems
      summary: 'Retrieve the detail about the status of Inventory Items represented by the specified Sku from all inventory location associated to the specific scope for the specified date - {FindInventoryItemsStatusByScopeAndSkuRequest}'
      description: Retrieve the detail about the status of Inventory Items represented by the specified Sku from all inventory location associated to the specific scope for the specified date
      operationId: FindInventoryItemsStatusByScopeAndSkuRequestScopeIdbySkuSkustatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItem
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindInventoryItemsStatusByScopeAndSkuRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
        '404':
          description: No inventory items status was found for this sku
          schema:
            title: List<InventoryItemAvailability>
            type: array
            items:
              $ref: '#/definitions/InventoryItemAvailability'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}/byLocation/{InventoryLocationId}/increase/{Quantity}':
    post:
      tags:
        - inventoryItems
      summary: 'Increase an inventory quantity - {IncreaseInventoryQuantityRequest}'
      description: Increase an inventory quantity
      operationId: IncreaseInventoryQuantityRequestScopeIdbySkuSkubyLocationInventoryLocationIdincreaseQuantity_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: The associated product sku
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier used to identify the right inventory to update
          type: string
          required: true
        - name: Quantity
          in: path
          description: The quantity to add in the inventory
          type: number
          format: double
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IncreaseInventoryQuantityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryQuantity'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryQuantity'
        '404':
          description: The inventory quantity was not found.
          schema:
            $ref: '#/definitions/InventoryQuantity'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryItems/{ScopeId}/bySku/{Sku}/byLocation/{InventoryLocationId}/decrease/{Quantity}':
    post:
      tags:
        - inventoryItems
      summary: 'Decrease an inventory quantity - {DecreaseInventoryQuantityRequest}'
      description: Decrease an inventory quantity
      operationId: DecreaseInventoryQuantityRequestScopeIdbySkuSkubyLocationInventoryLocationIddecreaseQuantity_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: The associated product sku
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: The inventory location identifier used to identify the right inventory to update
          type: string
          required: true
        - name: Quantity
          in: path
          description: The quantity to remove from the inventory
          type: number
          format: double
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DecreaseInventoryQuantityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryQuantity'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryQuantity'
        '404':
          description: The inventory quantity was not found.
          schema:
            $ref: '#/definitions/InventoryQuantity'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}':
    get:
      tags:
        - products
      summary: 'Retrieve a product by Id - {GetProductRequest}'
      description: Retrieve a product by id
      operationId: GetProductRequestScopeIdProductId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: IncludeImageUrl
          in: query
          description: ' Gets or sets a value indicating whether or not to include the image url.'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: whether or not to include the variants (if they exists) of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the product.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeMedia
          in: query
          description: ' Gets or sets a value indicating whether or not to include the media of the product.'
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    put:
      tags:
        - products
      summary: 'Updates a product - {UpdateProductRequest}'
      description: Updates a product
      operationId: UpdateProductRequestScopeIdProductId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: Gets or sets the id of the product for which we want to update
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/media/storage:
    delete:
      tags:
        - products
      summary: 'Cleanup unused media storage - {DeleteUnusedMediaStorageRequest}'
      description: Delete unused media storage request
      operationId: DeleteUnusedMediaStorageRequestmediastorage_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Url
          in: query
          description: the Url of the media.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUnusedMediaStorageResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/byIds':
    post:
      tags:
        - products
      summary: 'Retrieve products by Ids - {GetProductsByIdsRequest}'
      description: Retrieve a list of products by ids
      operationId: GetProductsByIdsRequestScopeIdbyIds_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsByIdsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductList'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/ProductList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/statistics':
    get:
      tags:
        - products
      summary: 'Gets statistics for products - {GetProductsStatisticsRequest}'
      description: Gets statistics for products
      operationId: GetProductsStatisticsRequestScopeIdstatistics_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: model for products' statistics info
          schema:
            $ref: '#/definitions/GetProductsStatisticsResult'
        '404':
          description: Requested catalog id not found
          schema:
            $ref: '#/definitions/GetProductsStatisticsResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/publicationStatus':
    post:
      tags:
        - products
      summary: 'Updates publication status for a list of products - {UpdateProductPublicationStatusRequest}'
      description: Updates publication status for a list of products
      operationId: UpdateProductPublicationStatusRequestScopeIdpublicationStatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductPublicationStatusRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/revert':
    post:
      tags:
        - products
      summary: 'Reverts not published product changes by replacing working copies of products with their published counterparts - {RevertProductChangesRequest}'
      description: Reverts not published product changes by replacing working copies of products with their published counterparts.
      operationId: RevertProductChangesRequestScopeIdrevert_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RevertProductChangesRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/withNotification':
    get:
      tags:
        - products
      summary: 'Retrieve properties of all product with notification - {GetProductsPropertiesWithNotificationRequest}'
      description: Retrieve properties of all products with notification
      operationId: GetProductsPropertiesWithNotificationRequestScopeIdwithNotification_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture in which the data will be returned
          type: string
          required: false
        - name: PropertiesNames
          in: query
          description: the list of properties to return
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: StartingIndex
          in: query
          description: the starting index in the results to start getting the products (used for paging purpose)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum number of results to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: SortBy
          in: query
          description: The name of the property to be sorted
          type: string
          required: false
          x-nullable: false
        - name: SortDirection
          in: query
          description: The sorting direction
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsPropertiesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/flagAsNew':
    get:
      tags:
        - products
      summary: 'Retrieve specified properties of all products flagged as new - {GetProductsPropertiesFlagAsNewRequest}'
      description: Retrieve specified properties of all products flagged as new
      operationId: GetProductsPropertiesFlagAsNewRequestScopeIdflagAsNew_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture in which the data will be returned
          type: string
          required: false
        - name: PropertiesNames
          in: query
          description: the list of properties to return
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: StartingIndex
          in: query
          description: the starting index in the results to start getting the products (used for paging purpose)
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: MaximumItems
          in: query
          description: 'The maximum number of results to return. Default value : 10'
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: SortBy
          in: query
          description: The name of the property to be sorted
          type: string
          required: false
          x-nullable: false
        - name: SortDirection
          in: query
          description: The sorting direction
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsPropertiesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/byPublicationStatus':
    post:
      tags:
        - products
      summary: 'Retrieve specified properties of all products with a given publication status and categories - {GetProductsByPublicationStatusRequest}'
      description: Retrieve specified properties of all products with a given publication status and categories
      operationId: GetProductsByPublicationStatusRequestScopeIdbyPublicationStatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsByPublicationStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductsByPublicationStatusResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/byDraftStateAndCategories':
    post:
      tags:
        - products
      summary: 'Retrieve specified properties of all products in a given state and categories - {GetProductsPropertiesByDraftStateAndCategoriesRequest}'
      description: Retrieve specified properties of all products in a given state and categories
      operationId: GetProductsPropertiesByDraftStateAndCategoriesRequestScopeIdbyDraftStateAndCategories_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsPropertiesByDraftStateAndCategoriesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductByCategoryAndStateResults'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/priceLists':
    get:
      tags:
        - products
      summary: 'Gets all price lists - {GetPriceListsRequest}'
      description: Gets all price lists. Represents a group of prices that are applied to products
      operationId: GetPriceListsRequestScopeIdpriceLists_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<PriceList>
            type: array
            items:
              $ref: '#/definitions/PriceList'
      deprecated: false
    post:
      tags:
        - products
      summary: 'Adds or updates the given price lists into the specified scope - {AddOrUpdatePriceListRequest}'
      description: Adds or updates the given price lists into the specified scope
      operationId: AddOrUpdatePriceListRequestScopeIdpriceLists_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdatePriceListRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/productPrices':
    post:
      tags:
        - products
      summary: 'Retrieve the price of a set of Product and its Variants - {FindProductPricesRequest}'
      description: Retrieve the price of a set of Product and its Variants
      operationId: FindProductPricesRequestScopeIdproductPrices_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The Scope of the request.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindProductPricesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<ProductPrice>
            type: array
            items:
              $ref: '#/definitions/ProductPrice'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/prices':
    post:
      tags:
        - products
      summary: 'Retrieve the price of a product - {CalculatePricesofProductsRequest}'
      description: Retrieve the price product by id
      operationId: CalculatePricesofProductsRequestScopeIdprices_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CalculatePricesofProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<ProductPrice>
            type: array
            items:
              $ref: '#/definitions/ProductPrice'
        '404':
          description: When no price was found for the product or the product doesn't exist.
          schema:
            title: List<ProductPrice>
            type: array
            items:
              $ref: '#/definitions/ProductPrice'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/productPriceEntries':
    post:
      tags:
        - products
      summary: 'Retrieve product prices by Id - {GetProductsPriceEntriesRequest}'
      description: Retrieve product's prices by id
      operationId: GetProductsPriceEntriesRequestScopeIdproductPriceEntries_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetProductsPriceEntriesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<GetProductPriceEntriesResult>
            type: array
            items:
              $ref: '#/definitions/GetProductPriceEntriesResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/fromGlobal':
    post:
      tags:
        - products
      summary: 'Copies products from Global scope to a sales scope - {AddFromGlobalRequest}'
      description: Copies products from Global scope to a sales scope
      operationId: AddFromGlobalRequestScopeIdfromGlobal_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddFromGlobalRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bulkDelete':
    post:
      tags:
        - products
      summary: 'Starts a task that deletes multiple products - {DeleteProductsRequest}'
      description: Starts a task that deletes multiple products
      operationId: DeleteProductsRequestScopeIdbulkDelete_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DeleteProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bulkAssignCategories':
    post:
      tags:
        - products
      summary: 'Starts a task that updates category associations for multiple products - {BulkAssignProductCategoriesRequest}'
      description: Starts a task that updates category associations for multiple products
      operationId: BulkAssignProductCategoriesRequestScopeIdbulkAssignCategories_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/BulkAssignProductCategoriesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bulkUpdatePublicationStatus':
    post:
      tags:
        - products
      summary: 'Starts a task that updates publication status for multiple products - {BulkUpdatePublicationStatusRequest}'
      description: Starts a task that updates publication status for multiple products
      operationId: BulkUpdatePublicationStatusRequestScopeIdbulkUpdatePublicationStatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/BulkUpdatePublicationStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bulkRevert':
    post:
      tags:
        - products
      summary: 'Starts a task that reverts not published product changes for multiple products by replacing working copies of products with their published counterparts - {BulkRevertProductChangesRequest}'
      description: Starts a task that reverts not published product changes for multiple products by replacing working copies of products with their published counterparts.
      operationId: BulkRevertProductChangesRequestScopeIdbulkRevert_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/BulkRevertProductChangesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/media/settings:
    get:
      tags:
        - products
      summary: 'Get the settings used in products media - {GetMediaSettingsRequest}'
      description: Get the settings used in products media
      operationId: GetMediaSettingsRequestmediasettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MediaSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/MediaSettings'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/MediaSettings'
      deprecated: false
    put:
      tags:
        - products
      summary: 'Update the settings used in product media - {UpdateMediaSettingsRequest}'
      description: Update the settings used in product media
      operationId: UpdateMediaSettingsRequestmediasettings_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateMediaSettingsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MediaSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/MediaSettings'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/MediaSettings'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/settings/{Entry}':
    delete:
      tags:
        - products
      summary: 'Delete a setting used in product module - {DeleteProductSettingsEntryRequest}'
      description: Delete a setting used in product module
      operationId: DeleteProductSettingsEntryRequestsettingsEntry_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Entry
          in: path
          description: the product settings entry to delete
          type: string
          required: true
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/definitions/{Name}':
    get:
      tags:
        - products
      summary: 'Retrieve the entity definition defined in the system related to the Name parameter specified in the request - {GetProductDefinitionRequest}'
      description: A definition is a list of properties that is allowed to be set to the instance of product or category being used
      operationId: GetProductDefinitionRequestdefinitionsName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: path
          description: The id to retrieve the related entity definition
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductDefinition'
        '404':
          description: Requested prodict definition not found
          schema:
            $ref: '#/definitions/ProductDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/media/{MediaId}':
    get:
      tags:
        - products
      summary: 'Retrieve a media by Id - {GetMediaRequest}'
      description: Retrieve a media by id
      operationId: GetMediaRequestScopeIdProductIdmediaMediaId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: MediaId
          in: path
          description: a media id
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductMedia'
        '404':
          description: When the media was not found.
          schema:
            $ref: '#/definitions/ProductMedia'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/media/{ScopeId}/{ProductId}/upload':
    post:
      tags:
        - products
      summary: 'Uploads a media file and attaches it to the product/variant - {UploadMediaRequest}'
      description: |-
        Uploads a media file
        Send media files via multipart/form-data
      operationId: UploadMediaRequestmediaScopeIdProductIdupload_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: ' the id of the product for which we want to upload media.'
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UploadMediaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/copy/{NewProductId}':
    put:
      tags:
        - products
      summary: 'A request to copy a product - {CopyProductRequest}'
      description: A request to copy a product
      operationId: CopyProductRequestScopeIdProductIdcopyNewProductId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product to be copied
          type: string
          required: true
        - name: NewProductId
          in: path
          description: The id of the product to be created
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CopyProductRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/v2/{ScopeId}/bySku/{Sku}':
    get:
      tags:
        - products
      summary: 'Retrieve the products by sku, it can be the product or the variant sku - {GetProductsBySkuV2Request}'
      description: 'Retrieve the products by the specified the stock keeping unit code (SKU). It is either the Sku of the product or the Sku of one of its variants. The products variants are always returned. According to the sku uniqueness level defined, more than one product may be returned.'
      operationId: GetProductsBySkuV2Requestv2ScopeIdbySkuSku_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: the stock keeping unit code (SKU) for the products to retrieve
          type: string
          required: true
        - name: SearchVariantSkus
          in: query
          description: 'Gets or sets a value indicating whether or not to search for variant SKU-s, in addition to searching in product SKU-s.'
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePriceLists
          in: query
          description: whether or not to include the price lists of the products.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeRelationships
          in: query
          description: ' Gets or sets a value indicating whether or not to include the relationships of the products.'
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductList'
        '404':
          description: When the product was not found.
          schema:
            $ref: '#/definitions/ProductList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/bySku/{Sku}/media':
    post:
      tags:
        - products
      summary: 'Retrieve the media by sku, it can be the product or the variant sku - {GetMediaBySkuRequest}'
      description: Retrieve the media by the specified the stock keeping unit code (SKU). It is either the Sku of the product or the Sku of one of its variants.
      operationId: GetMediaBySkuRequestScopeIdbySkuSkumedia_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Sku
          in: path
          description: the stock keeping unit code (SKU) for the products to retrieve
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetMediaBySkuRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MediaList'
        '404':
          description: When the media was not found.
          schema:
            $ref: '#/definitions/MediaList'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/variantsPrices/{PriceListId}':
    put:
      tags:
        - products
      summary: 'Batch update all variants price for a product for a specific pricelist - {UpdateVariantsPriceListEntryRequest}'
      description: Batch update all variants price for a product for a specific pricelist
      operationId: UpdateVariantsPriceListEntryRequestScopeIdProductIdvariantsPricesPriceListId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to update the price list entries
          type: string
          required: true
        - name: PriceListId
          in: path
          description: The id of the the price list for which we want to update the price list entries
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateVariantsPriceListEntryRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/priceListEntries/{PriceListId}':
    delete:
      tags:
        - products
      summary: 'Deletes a price List Entry - {DeletePriceListEntryRequest}'
      description: Deletes a price List Entry
      operationId: DeletePriceListEntryRequestScopeIdProductIdpriceListEntriesPriceListId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The id of the product for which we want to delete a price list entry
          type: string
          required: true
        - name: PriceListId
          in: path
          description: The id of the price list for which we want to delete a price list entry
          type: string
          required: true
        - name: VariantId
          in: query
          description: The id of the variant for which we want to delete a price list entry
          type: string
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}/{ProductId}/media/{MediaId}/resized':
    put:
      tags:
        - products
      summary: 'Update media resized instances - {UpdateMediaResizedInstancesRequest}'
      description: Update media resized instances
      operationId: UpdateMediaResizedInstancesRequestScopeIdProductIdmediaMediaIdresized_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: the business id for the product to retrieve
          type: string
          required: true
        - name: MediaId
          in: path
          description: a media id
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateMediaResizedInstancesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductMedia'
        '404':
          description: No product or media found.
          schema:
            $ref: '#/definitions/ProductMedia'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/products/{ScopeId}':
    post:
      tags:
        - products
      summary: 'Creates a product in the specified scope - {CreateProductRequest}'
      description: Creates a product in the specified scope.
      operationId: CreateProductRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateProductRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/settings:
    get:
      tags:
        - products
      summary: 'Get the settings used in product module - {GetProductSettingsRequest}'
      description: Get the settings used in product module
      operationId: GetProductSettingsRequestsettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductSettings'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/ProductSettings'
      deprecated: false
    put:
      tags:
        - products
      summary: 'Update the settings used in product module - {UpdateProductSettingsRequest}'
      description: Update the settings used in product module
      operationId: UpdateProductSettingsRequestsettings_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductSettingsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductSettings'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/ProductSettings'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/quicklinks:
    get:
      tags:
        - products
      summary: 'Retrieve the products quick links count - {GetQuickLinksCountDetailsRequest}'
      description: Represents items of quick links count related to products
      operationId: GetQuickLinksCountDetailsRequestquicklinks_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CatalogName
          in: query
          description: The catalog name to be used for quick links count
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name that should be used to retrieve data
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<QuickLinkCountDetails>
            type: array
            items:
              $ref: '#/definitions/QuickLinkCountDetails'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/attributes/:
    get:
      tags:
        - products
      summary: 'Retrieve and merge all the product attributes from all product definitions - {GetProductAttributesRequest}'
      description: Retrieve and merge all the product attributes from all product definitions
      operationId: GetProductAttributesRequestattributes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductAttributes'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductAttributes'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /products/definitions:
    get:
      tags:
        - products
      summary: 'Retrieve the entity definitions defined in the system related to the EntityType parameter specified in the request - {GetProductDefinitionsRequest}'
      description: 'A definition is a list of properties that is allowed to be set to the instance of product or category being used. You could also specify a list of entity definitions name to retrieve. If you don''t specify this list, all entity definitions will be return'
      operationId: GetProductDefinitionsRequestdefinitions_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ProductType
          in: query
          description: 'The type of definition, either Product or Category are the possible values'
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language tha data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<ProductDefinition>
            type: array
            items:
              $ref: '#/definitions/ProductDefinition'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<ProductDefinition>
            type: array
            items:
              $ref: '#/definitions/ProductDefinition'
        '404':
          description: Requested product definitions not found
          schema:
            title: List<ProductDefinition>
            type: array
            items:
              $ref: '#/definitions/ProductDefinition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/integration/products/{ScopeId}/prices/export':
    post:
      tags:
        - integration
      summary: 'Exports a set of product prices - {ExportProductPricesRequest}'
      description: Exports a set of product prices
      operationId: ExportProductPricesRequestproductsScopeIdpricesexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportProductPricesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<ProductPriceExportInfo>
            type: array
            items:
              $ref: '#/definitions/ProductPriceExportInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/integration/products/{ScopeId}/prices/import':
    post:
      tags:
        - integration
      summary: 'Requests that a products prices import be started asynchronously. - {ImportProductsPricesRequest}'
      description: Requests that a products prices import be started asynchronously for a given scope using the data available in the blob storage at the provided path.
      operationId: ImportProductsPricesRequestproductsScopeIdpricesimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportProductsPricesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/{ScopeId}':
    post:
      tags:
        - relationships
      summary: 'Creates relationships between entities - {CreateRelationshipsRequest}'
      description: Creates relationships between entities
      operationId: CreateRelationshipsRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRelationshipsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRelationshipsResult'
      deprecated: false
    delete:
      tags:
        - relationships
      summary: 'Deletes specified relationships - {DeleteRelationshipsRequest}'
      description: Deletes specified relationships
      operationId: DeleteRelationshipsRequestScopeId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Ids
          in: query
          description: Ids of the relationships to delete
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/{ScopeId}/self':
    post:
      tags:
        - relationships
      summary: 'Creates self-referencing relationships between entities - {CreateSelfReferencingRelationshipsRequest}'
      description: Creates self-referencing relationships between entities
      operationId: CreateSelfReferencingRelationshipsRequestScopeIdself_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateSelfReferencingRelationshipsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRelationshipsResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/v2/{ScopeId}':
    post:
      tags:
        - relationships
      summary: 'Creates relationships between entities - {CreateRelationshipsV2Request}'
      description: Creates relationships between entities
      operationId: CreateRelationshipsV2Requestv2ScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRelationshipsV2Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRelationshipsResult'
      deprecated: false
    delete:
      tags:
        - relationships
      summary: 'Deletes specified relationships - {DeleteRelationshipsV2Request}'
      description: Deletes specified relationships
      operationId: DeleteRelationshipsV2Requestv2ScopeId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Ids
          in: query
          description: Ids of the relationships to delete
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/{ScopeId}/{EntityType}/{EntityId}':
    delete:
      tags:
        - relationships
      summary: 'Clears all relationships on the specified entity - {ClearRelationshipsRequest}'
      description: Clears all relationships on the specified entity
      operationId: ClearRelationshipsRequestScopeIdEntityTypeEntityId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityType
          in: path
          description: the type of the entity
          type: string
          required: true
          x-nullable: false
        - name: EntityId
          in: path
          description: the entity identifier
          type: string
          required: true
        - name: ParentId
          in: query
          description: the parent identifier
          type: string
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/v2/{ScopeId}/self':
    post:
      tags:
        - relationships
      summary: 'Creates self-referencing relationships between entities - {CreateSelfReferencingRelationshipsV2Request}'
      description: Creates self-referencing relationships between entities
      operationId: CreateSelfReferencingRelationshipsV2Requestv2ScopeIdself_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateSelfReferencingRelationshipsV2Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRelationshipsResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/relationships/v2/{ScopeId}/{EntityType}/{EntityId}':
    delete:
      tags:
        - relationships
      summary: 'Clears all relationships on the specified entity - {ClearRelationshipsV2Request}'
      description: Clears all relationships on the specified entity
      operationId: ClearRelationshipsV2Requestv2ScopeIdEntityTypeEntityId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: EntityType
          in: path
          description: 'The type of the entity whose relationship should be deleted. For deleting relationships of a product variant, ''Product'' should be specified and ParentId should be set to Product Id.'
          type: string
          required: true
          x-nullable: false
        - name: EntityId
          in: path
          description: the entity identifier
          type: string
          required: true
        - name: ParentId
          in: query
          description: This parameter should be specified when deleting a product variant. In this case this field will contain product's Id.
          type: string
          required: false
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/products/{ScopeId}/export':
    post:
      tags:
        - dataexchange
      summary: 'Export Metadatas, Products, Prices, Categories and RelationShips - {ProductInformationExportRequest}'
      description: 'Export Metadatas, Products, Prices, Categories and RelationShips'
      operationId: ProductInformationExportRequestproductsScopeIdexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProductInformationExportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/products/{ScopeId}/import':
    post:
      tags:
        - dataexchange
      summary: 'Import Metadatas, Products, Prices, Categories and RelationShips - {ProductInformationImportRequest}'
      description: 'Import Metadatas, Products, Prices, Categories and RelationShips'
      operationId: ProductInformationImportRequestproductsScopeIdimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProductInformationImportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/productprices/{ScopeId}/export':
    post:
      tags:
        - dataexchange
      summary: 'Export Product Prices of a priceList - {ExportProductPriceRequest}'
      description: Export Product Prices of a priceList
      operationId: ExportProductPriceRequestproductpricesScopeIdexport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ExportProductPriceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/dataexchange/productprices/{ScopeId}/import':
    post:
      tags:
        - dataexchange
      summary: 'Import a  file Products and Product Prices of a priceList - {ImportProductPriceRequest}'
      description: 'Import a file Products and Product Prices of a priceList - {ImportProductPriceRequest}'
      operationId: ImportProductPriceRequestproductpricesScopeIdimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ImportProductPriceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/carriers/{ScopeId}/{FulfillmentCarrierId}/quotes':
    post:
      tags:
        - fulfillments
      summary: 'Get shipping quotes for a package from a carrier - {GetFulfillmentCarrierQuotesRequest}'
      description: Get shipping quotes for a package from a carrier.
      operationId: GetFulfillmentCarrierQuotesRequestcarriersScopeIdFulfillmentCarrierIdquotes_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentCarrierId
          in: path
          description: The fulfillment carrier identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierQuotesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierQuotesResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierQuotesResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/carriers/{ScopeId}/{FulfillmentCarrierId}/manifests':
    post:
      tags:
        - fulfillments
      summary: 'Create manifests for a list of packages with a carrier - {CreateFulfillmentCarrierManifestRequest}'
      description: Create manifests for a list of packages with a carrier.
      operationId: CreateFulfillmentCarrierManifestRequestcarriersScopeIdFulfillmentCarrierIdmanifests_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentCarrierId
          in: path
          description: The fulfillment carrier identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateFulfillmentCarrierManifestRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFulfillmentCarrierManifestResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/CreateFulfillmentCarrierManifestResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/{FulfillmentCompetitionId}/locations':
    post:
      tags:
        - fulfillments
      summary: 'Adds one or more fulfillment locations to a fulfillment competition. - {AddFulfillmentCompetitionLocationsRequest}'
      description: Adds one or more fulfillment locations to a fulfillment competition.
      operationId: AddFulfillmentCompetitionLocationsRequestcompetitionsScopeIdFulfillmentCompetitionIdlocations_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The identifier of the fulfillment competition to which the fulfillment locations are added.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddFulfillmentCompetitionLocationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    delete:
      tags:
        - fulfillments
      summary: 'Removes a list of fulfillment competition locations from a specific fulfillment competition - {RemoveFulfillmentCompetitionLocationsRequest}'
      description: Removes a list of fulfillment competition locations from a specific fulfillment competition.
      operationId: RemoveFulfillmentCompetitionLocationsRequestcompetitionsScopeIdFulfillmentCompetitionIdlocations_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The identifier of the fulfillment competition from which the fulfillment competition locations are removed.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentLocationIds
          in: query
          description: The list of the fulfillment location identifiers which will be removed from the fulfillment competition.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/{FulfillmentCompetitionId}/status':
    put:
      tags:
        - fulfillments
      summary: 'Change the status of a fulfillment competition. - {ChangeFulfillmentCompetitionStatusRequest}'
      description: Change the status of a fulfillment competition.
      operationId: ChangeFulfillmentCompetitionStatusRequestcompetitionsScopeIdFulfillmentCompetitionIdstatus_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The identifier of the fulfillment competition to which the status is changing.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeFulfillmentCompetitionStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/exceptions/{ScopeId}/{FulfillmentLocationId}/{OrderId}':
    get:
      tags:
        - fulfillments
      summary: 'Gets the fulfillment exceptions for an order at a fulfillment location - {GetFulfillmentExceptionsRequest}'
      description: Gets the fulfillment exceptions for an order at a fulfillment location
      operationId: GetFulfillmentExceptionsRequestexceptionsScopeIdFulfillmentLocationIdOrderId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The fulfillment location identifier.
          type: string
          required: true
          x-nullable: false
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentExceptionResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentExceptionResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}/byShipment/{ShipmentId}':
    delete:
      tags:
        - fulfillments
      summary: 'Delete all fulfillment packages for a specific shipment id - {DeleteFulfillmentPackageForShipmentRequest}'
      description: Delete all fulfillment packages for a specific shipment id.
      operationId: DeleteFulfillmentPackageForShipmentRequestpackagesScopeIdbyShipmentShipmentId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The shipment identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/carriers/{ScopeId}/{FulfillmentCarrierId}/quotes/confirm':
    post:
      tags:
        - fulfillments
      summary: 'Confirm shipping quotes for a package with a carrier - {ConfirmFulfillmentCarrierQuotesRequest}'
      description: Confirm shipping quotes for a package with a carrier.
      operationId: ConfirmFulfillmentCarrierQuotesRequestcarriersScopeIdFulfillmentCarrierIdquotesconfirm_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentCarrierId
          in: path
          description: The fulfillment carrier identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ConfirmFulfillmentCarrierQuotesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmFulfillmentCarrierQuotesResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ConfirmFulfillmentCarrierQuotesResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/carriers/{ScopeId}/{FulfillmentCarrierId}/quotes/refund':
    post:
      tags:
        - fulfillments
      summary: 'Refund shipping quotes from a carrier - {RefundFulfillmentCarrierQuotesRequest}'
      description: Refund shipping quotes from a carrier.
      operationId: RefundFulfillmentCarrierQuotesRequestcarriersScopeIdFulfillmentCarrierIdquotesrefund_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentCarrierId
          in: path
          description: The fulfillment carrier identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RefundFulfillmentCarrierQuotesRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/carriers/{ScopeId}/{FulfillmentCarrierId}/quotes/documents':
    post:
      tags:
        - fulfillments
      summary: 'Get shipping documents from a carrier - {GetFulfillmentCarrierDocumentsRequest}'
      description: Get shipping documents from a carrier.
      operationId: GetFulfillmentCarrierDocumentsRequestcarriersScopeIdFulfillmentCarrierIdquotesdocuments_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentCarrierId
          in: path
          description: The fulfillment carrier identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierDocumentsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierDocumentsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetFulfillmentCarrierDocumentsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/{FulfillmentCompetitionId}/locations/{FulfillmentLocationId}/status':
    put:
      tags:
        - fulfillments
      summary: 'Changes the status of a fulfillment competition location. - {ChangeFulfillmentCompetitionLocationStatusRequest}'
      description: Changes the status of a fulfillment competition location.
      operationId: ChangeFulfillmentCompetitionLocationStatusRequestcompetitionsScopeIdFulfillmentCompetitionIdlocationsFulfillmentLocationIdstatus_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The identifier of the fulfillment competition whose fulfillment competition location status is changing.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentLocationId
          in: path
          description: The identifier of the fulfillment location whose status is changing.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeFulfillmentCompetitionLocationStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/exceptions/{ScopeId}/{FulfillmentLocationId}/{OrderId}/{ShipmentId}/{LineItemId}':
    put:
      tags:
        - fulfillments
      summary: 'Creates or updates a fulfillment exception for a lineitem - {CreateOrUpdateFulfillmentExceptionRequest}'
      description: Creates or updates a fulfillment exception for a lineitem
      operationId: CreateOrUpdateFulfillmentExceptionRequestexceptionsScopeIdFulfillmentLocationIdOrderIdShipmentIdLineItemId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The fulfillment location identifier.
          type: string
          required: true
          x-nullable: false
        - name: OrderId
          in: path
          description: The identifier of the order.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The identifier of the shipment.
          type: string
          required: true
          x-nullable: false
        - name: LineItemId
          in: path
          description: The identifier of the line item.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrUpdateFulfillmentExceptionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentException'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentException'
      deprecated: false
    delete:
      tags:
        - fulfillments
      summary: 'Deletes a fulfillment exception for a lineitem - {DeleteFulfillmentExceptionRequest}'
      description: Deletes a fulfillment exception for a lineitem
      operationId: DeleteFulfillmentExceptionRequestexceptionsScopeIdFulfillmentLocationIdOrderIdShipmentIdLineItemId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: The fulfillment location identifier.
          type: string
          required: true
          x-nullable: false
        - name: OrderId
          in: path
          description: The identifier of the order.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The identifier of the shipment.
          type: string
          required: true
          x-nullable: false
        - name: LineItemId
          in: path
          description: The identifier of the line item.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}':
    post:
      tags:
        - fulfillments
      summary: 'Creates a new fulfillment competition in order to provide an opportunity for fulfillment locations to compete over fulfilling a shipment - {CreateFulfillmentCompetitionRequest}'
      description: Creates a new fulfillment competition in order to provide an opportunity for fulfillment locations to compete over fulfilling a shipment.
      operationId: CreateFulfillmentCompetitionRequestcompetitionsScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateFulfillmentCompetitionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}':
    post:
      tags:
        - fulfillments
      summary: 'Creates a new fulfillment package with a list of line items - {CreateFulfillmentPackageRequest}'
      description: Creates a new fulfillment package with a list of line items.
      operationId: CreateFulfillmentPackageRequestpackagesScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateFulfillmentPackageRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackage'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackage'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packageTypes/{ScopeId}':
    post:
      tags:
        - fulfillments
      summary: 'Creates a new fulfillment package type - {CreateFulfillmentPackageTypeRequest}'
      description: Creates a new fulfillment package type.
      operationId: CreateFulfillmentPackageTypeRequestpackageTypesScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateFulfillmentPackageTypeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageType'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackageType'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/SLAs/{ScopeId}':
    post:
      tags:
        - fulfillments
      summary: 'Create a fulfillment SLA for a specific fulfillment location - {CreateFulfillmentSLARequest}'
      description: Create a fulfillment SLA for a specific fulfillment location.
      operationId: CreateFulfillmentSLARequestSLAsScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateFulfillmentSLARequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentSLA'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentSLA'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /fulfillments/SLAs/disable:
    post:
      tags:
        - fulfillments
      summary: 'Disable a fulfillment SLA for a specific id - {DisableFulfillmentSLARequest}'
      description: Disable a fulfillment SLA for a specific id.
      operationId: DisableFulfillmentSLARequestSLAsdisable_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DisableFulfillmentSLARequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentSLA'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentSLA'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/{FulfillmentCompetitionId}':
    get:
      tags:
        - fulfillments
      summary: 'Gets a fulfillment competition by its identifier - {GetFulfillmentCompetitionRequest}'
      description: Gets a fulfillment competition by its identifier.
      operationId: GetFulfillmentCompetitionRequestcompetitionsScopeIdFulfillmentCompetitionId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The fulfillment competition identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
        '404':
          description: Requested competition not found
          schema:
            $ref: '#/definitions/FulfillmentCompetition'
      deprecated: false
    delete:
      tags:
        - fulfillments
      summary: 'Deletes a fulfillment competition - {DeleteFulfillmentCompetitionRequest}'
      description: Deletes a fulfillment competition.
      operationId: DeleteFulfillmentCompetitionRequestcompetitionsScopeIdFulfillmentCompetitionId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentCompetitionId
          in: path
          description: The identifier of the fulfillment competition to be removed.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/find':
    post:
      tags:
        - fulfillments
      summary: 'Search for a list of fulfillment competitions - {FindFulfillmentCompetitionsRequest}'
      description: Search for a list of fulfillment competitions
      operationId: FindFulfillmentCompetitionsRequestcompetitionsScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentCompetitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentCompetitionQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/competitions/{ScopeId}/count':
    post:
      tags:
        - fulfillments
      summary: 'Gets the number of fulfillment competitions - {FindFulfillmentCompetitionsCountRequest}'
      description: Gets the number of fulfillment competitions
      operationId: FindFulfillmentCompetitionsCountRequestcompetitionsScopeIdcount_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentCompetitionsCountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QueryCountResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/orders/{ScopeId}/find':
    post:
      tags:
        - fulfillments
      summary: 'Search for fulfillment orders - {FindFulfillmentOrdersRequest}'
      description: Search for fulfillment orders
      operationId: FindFulfillmentOrdersRequestordersScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentOrdersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentOrderQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}/transferFulfillmentPackageItems':
    post:
      tags:
        - fulfillments
      summary: 'Transfers a list of fulfillment package items from one fulfillment package to another - {TransferFulfillmentPackageItemsRequest}'
      description: Transfers a list of fulfillment package items from one fulfillment package to another.
      operationId: TransferFulfillmentPackageItemsRequestpackagesScopeIdtransferFulfillmentPackageItems_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/TransferFulfillmentPackageItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackage'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackage'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}/{Id}':
    get:
      tags:
        - fulfillments
      summary: 'Gets a fulfillment package by its identifier - {GetFulfillmentPackageRequest}'
      description: Gets a fulfillment package by its identifier.
      operationId: GetFulfillmentPackageRequestpackagesScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package identifier.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data for the fulfillment package type will be returned
          type: string
          required: false
        - name: IncludeFulfillmentPackageType
          in: query
          description: A value indicating whether the fulfillment package type should be returns along the fulfillment package.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackage'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackage'
        '404':
          description: Requested fulfillment package not found
          schema:
            $ref: '#/definitions/FulfillmentPackage'
      deprecated: false
    put:
      tags:
        - fulfillments
      summary: 'Updates a fulfillment package - {UpdateFulfillmentPackageRequest}'
      description: Updates a fulfillment package.
      operationId: UpdateFulfillmentPackageRequestpackagesScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateFulfillmentPackageRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackage'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackage'
      deprecated: false
    delete:
      tags:
        - fulfillments
      summary: 'Delete a fulfillment package for a specific id - {DeleteFulfillmentPackageRequest}'
      description: Delete a fulfillment package for a specific id.
      operationId: DeleteFulfillmentPackageRequestpackagesScopeIdId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package id.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}/find':
    get:
      tags:
        - fulfillments
      summary: 'Search for a list of fulfillment packages - {FindFulfillmentPackagesRequest}'
      description: Search for a list of fulfillment packages.
      operationId: FindFulfillmentPackagesRequestpackagesScopeIdfind_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: OrderId
          in: query
          description: The order identifier.
          type: string
          required: false
        - name: ShipmentIds
          in: query
          description: A list of shipment identifier.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: CultureName
          in: query
          description: The culture name in which language the data for the fulfillment package type will be returned
          type: string
          required: false
        - name: IncludeFulfillmentPackageType
          in: query
          description: A value indicating whether the fulfillment package type should be returns along each fulfillment package.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackageResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packages/{ScopeId}/findmanifest':
    get:
      tags:
        - fulfillments
      summary: 'Search for a list of fulfillment packages - {FindFulfillmentManifestPackagesRequest}'
      description: Search for a list of fulfillment packages.
      operationId: FindFulfillmentManifestPackagesRequestpackagesScopeIdfindmanifest_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: FulfillmentLocationId
          in: query
          description: The fulfillment location identifier.
          type: string
          required: false
          x-nullable: false
        - name: ShippingProviderId
          in: query
          description: The optional shipping provider identifier.
          type: string
          required: false
        - name: FulfillmentStatus
          in: query
          description: The optional fulfillment status.
          type: string
          required: false
        - name: ManifestedFrom
          in: query
          description: The optional manifested from date filter (utc).
          type: string
          format: date-time
          required: false
        - name: ManifestedTo
          in: query
          description: The optional manifested from date filter (utc).
          type: string
          format: date-time
          required: false
        - name: ManifestReferenceId
          in: query
          description: The optional manifest reference id.
          type: string
          required: false
        - name: IncludePackagesWithManifest
          in: query
          description: A value indicating whether fulfillment packages with a manifest are returned.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePackagesWithoutManifest
          in: query
          description: A value indicating whether fulfillment packages without a manifest are returned.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePackageItems
          in: query
          description: A value indicating whether fulfillment package items are retrieved with each package.
          type: boolean
          required: false
          x-nullable: false
        - name: CarrierAccountIdOutbound
          in: query
          description: The carrier account id for outbound.
          type: string
          required: false
        - name: CarrierAccountNameOutbound
          in: query
          description: The carrier account name for outbound.
          type: string
          required: false
        - name: CarrierNameOutbound
          in: query
          description: The carrier name for outbound.
          type: string
          required: false
        - name: CarrierServiceLevelOutbound
          in: query
          description: The carrier service level for outbound.
          type: string
          required: false
        - name: CarrierManifestRequirement
          in: query
          description: The optional carrier manifest requirement to find.
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackageResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packageTypes/{ScopeId}/{Id}':
    get:
      tags:
        - fulfillments
      summary: 'Gets a fulfillment package type by its identifier - {GetFulfillmentPackageTypeRequest}'
      description: Gets a fulfillment package type by its identifier.
      operationId: GetFulfillmentPackageTypeRequestpackageTypesScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package type identifier.
          type: string
          required: true
          x-nullable: false
        - name: IncludeParentScopes
          in: query
          description: Determine if parent scopes should be considered when searching fulfillment package type.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageType'
      deprecated: false
    put:
      tags:
        - fulfillments
      summary: 'Updates a fulfillment package type - {UpdateFulfillmentPackageTypeRequest}'
      description: Updates a fulfillment package type.
      operationId: UpdateFulfillmentPackageTypeRequestpackageTypesScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package type identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateFulfillmentPackageTypeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageType'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentPackageType'
      deprecated: false
    delete:
      tags:
        - fulfillments
      summary: 'Delete a fulfillment package type for a specific id - {DeleteFulfillmentPackageTypeRequest}'
      description: Delete a fulfillment package type for a specific id.
      operationId: DeleteFulfillmentPackageTypeRequestpackageTypesScopeIdId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment package type id.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/packageTypes/{ScopeId}/find':
    post:
      tags:
        - fulfillments
      summary: 'Search for fulfillment package types - {FindFulfillmentPackageTypesRequest}'
      description: Search for fulfillment package types for a Scope (and its parents)
      operationId: FindFulfillmentPackageTypesRequestpackageTypesScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: Scope to retrieve fulfillment package types for
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentPackageTypesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentPackageTypeResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/SLAs/{ScopeId}/{Id}':
    get:
      tags:
        - fulfillments
      summary: 'Gets a fulfillment SLA by its identifier - {GetFulfillmentSLARequest}'
      description: Gets a fulfillment SLA by its identifier.
      operationId: GetFulfillmentSLARequestSLAsScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: The fulfillment SLA identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentSLA'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentSLA'
        '404':
          description: Requested fulfillment SLA not found
          schema:
            $ref: '#/definitions/FulfillmentSLA'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillments/SLAs/{ScopeId}/find':
    post:
      tags:
        - fulfillments
      summary: 'Search for fulfillment SLA - {FindFulfillmentSLARequest}'
      description: Search for fulfillment SLA
      operationId: FindFulfillmentSLARequestSLAsScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentSLARequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentSLAQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve fulfillment locations for a specific scope - {GetFulfillmentLocationsByScopeRequest}'
      description: Retrieve fulfillment locations for a specific scope. The addresses are not included in the result.
      operationId: GetFulfillmentLocationsByScopeRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeChildScopes
          in: query
          description: Includes the results for the child scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyActive
          in: query
          description: Filter the results to return only active.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyInventoryEnabled
          in: query
          description: Filter the results to return only inventory enabled.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load addresses of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/find':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Search for fulfillment locations - {FindFulfillmentLocationsRequest}'
      description: Search for fulfillment locations
      operationId: FindFulfillmentLocationsRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindFulfillmentLocationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindFulfillmentLocationsQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindFulfillmentLocationsQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve a fulfillment location for a specific scope - {GetFulfillmentLocationByIdRequest}'
      description: Retrieve a fulfillment location for a specific scope
      operationId: GetFulfillmentLocationByIdRequestScopeIdFulfillmentLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{InventoryLocationIds}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieves a list of fulfillment locations for scpecific inventory locations identifiers - {GetFulfillmentLocationsByInventoryLocationIdsRequest}'
      description: Retrieves a list of fulfillment locations for specific inventory locations identifiers
      operationId: GetFulfillmentLocationsByInventoryLocationIdsRequestScopeIdInventoryLocationIds_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: InventoryLocationIds
          in: path
          description: the unique identifiers of the inventory locations.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/delivery':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve fulfillment locations supporting delivery as Fulfillment method for a specific scope - {GetDeliveryFulfillmentLocationsByScopeRequest}'
      description: Retrieve fulfillment locations supporting delivery as Fulfillment method for a specific scope
      operationId: GetDeliveryFulfillmentLocationsByScopeRequestScopeIddelivery_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeChildScopes
          in: query
          description: Includes the results for the child scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyActive
          in: query
          description: Filter the results to return only active.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyInventoryEnabled
          in: query
          description: Filter the results to return only inventory enabled.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load addresses of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/pickup':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve fulfillment locations supporting pickup as shipping method for a specific scope - {GetPickupFulfillmentLocationsByScopeRequest}'
      description: Retrieve fulfillment locations supporting pickup as shipping method for a specific scope
      operationId: GetPickupFulfillmentLocationsByScopeRequestScopeIdpickup_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeChildScopes
          in: query
          description: Includes the results for the child scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyActive
          in: query
          description: Filter the results to return only active.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyInventoryEnabled
          in: query
          description: Filter the results to return only inventory enabled.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load addresses of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/shipping':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieve fulfillment locations supporting shipping as shipping method for a specific scope - {GetShippingFulfillmentLocationsByScopeRequest}'
      description: Retrieve fulfillment locations supporting shipping as shipping method for a specific scope
      operationId: GetShippingFulfillmentLocationsByScopeRequestScopeIdshipping_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludeSchedules
          in: query
          description: Specifies whether or not to load schedules of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeChildScopes
          in: query
          description: Includes the results for the child scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyActive
          in: query
          description: Filter the results to return only active.
          type: boolean
          required: false
          x-nullable: false
        - name: OnlyInventoryEnabled
          in: query
          description: Filter the results to return only inventory enabled.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeAddresses
          in: query
          description: Specifies whether or not to load addresses of the fulfillment location.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: List<FulfillmentLocation>
            type: array
            items:
              $ref: '#/definitions/FulfillmentLocation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/availabilty':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Get the availability of a fulfillment location depending on specific time for a specific scope - {GetFulfillmentAvailabilityRequest}'
      description: Get the availability of a fulfillment location depending on specific time (in store timezone) for a specific scope
      operationId: GetFulfillmentAvailabilityRequestScopeIdavailabilty_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetFulfillmentAvailabilityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentAvailability'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentAvailability'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/calculateDelay':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Calculate the delay for a list of fulfillment locations - {CalculateFulfillmentLocationsDelayRequest}'
      description: Calculate the delay for a list of fulfillment locations
      operationId: CalculateFulfillmentLocationsDelayRequestScopeIdcalculateDelay_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CalculateFulfillmentLocationsDelayRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FulfillmentLocationsDelayCalculationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FulfillmentLocationsDelayCalculationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{FulfillmentLocationId}/{FulfillmentType}':
    post:
      tags:
        - fulfillmentLocations
      summary: ' Combines a schedule and slot plan to calculate the availability of slots for the specified dates. - {CalculateScheduleAvailabilitySlotsRequest}'
      description: Combines a schedule and slot plan to calculate the availability of slots for the specified dates.
      operationId: CalculateScheduleAvailabilitySlotsRequestFulfillmentLocationIdFulfillmentType_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CalculateScheduleAvailabilitySlotsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DayAvailabilityResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/DayAvailabilityResult'
        '404':
          description: Requested Fulfillment location not found
          schema:
            $ref: '#/definitions/DayAvailabilityResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/reserveSlot/{FulfillmentLocationId}':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Reserves a fulfillment slot for the Shipment of an Order. (Not implemented in default provider) - {ReserveAvailabilitySlotRequest}'
      description: 'Reserves a fulfillment slot for the Shipment of an Order. (Not implemented in default provider) '
      operationId: ReserveAvailabilitySlotRequestreserveSlotFulfillmentLocationId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ReserveAvailabilitySlotRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested Fulfillment location not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentMethodTypes/{ScopeId}':
    get:
      tags:
        - fulfillmentMethodTypes
      summary: 'Retrieve the Fulfillment method types supported by the locations of a specific scope - {GetFulfillmentMethodTypesByScopeRequest}'
      description: Retrieve the Fulfillment method types supported by the locations of a specific scope
      operationId: GetFulfillmentMethodTypesByScopeRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentMethodType>
            type: array
            items:
              type: string
              x-nullable: false
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentMethodType>
            type: array
            items:
              type: string
              x-nullable: false
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentMethodTypes/{ScopeId}/{FulfillmentLocationId}':
    get:
      tags:
        - fulfillmentMethodTypes
      summary: 'Retrieve the fulfillment method types supported by a fulfillment location - {GetFulfillmentMethodTypesByFulfillmentLocationRequest}'
      description: Retrieve the fulfillment method types supported by a specific fulfillment location
      operationId: GetFulfillmentMethodTypesByFulfillmentLocationRequestScopeIdFulfillmentLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentMethodType>
            type: array
            items:
              type: string
              x-nullable: false
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<FulfillmentMethodType>
            type: array
            items:
              type: string
              x-nullable: false
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/{FulfillmentMethodType}/slots/':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieves time slots from a fulfillment location for a specific scope - {GetFulfillmentLocationTimeSlotsRequest}'
      description: Retrieves time slots from a fulfillment location for a specific scope
      operationId: GetFulfillmentLocationTimeSlotsRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslots_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        '404':
          description: Requested time slot(s) not found
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
      deprecated: false
    post:
      tags:
        - fulfillmentLocations
      summary: 'Adds a time slot from a fulfillment location for a specific scope - {AddFulfillmentLocationTimeSlotRequest}'
      description: Adds a time slot from a fulfillment location for a specific scope
      operationId: AddFulfillmentLocationTimeSlotRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslots_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddFulfillmentLocationTimeSlotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlot'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/reservations/{SlotId}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieves time slot reservations - {GetFulfillmentLocationTimeSlotReservationsRequest}'
      description: Retrieves time slot reservations
      operationId: GetFulfillmentLocationTimeSlotReservationsRequestScopeIdFulfillmentLocationIdreservationsSlotId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: path
          description: 'The unique identifier of the time slot to be found (if not set, all timeslot ids are retrieved).'
          type: string
          required: true
        - name: ReservationDate
          in: query
          description: The reservation date.
          type: string
          format: date-time
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlotReservationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlotReservationResult'
        '404':
          description: Requested time slot reservation(s) not found
          schema:
            $ref: '#/definitions/TimeSlotReservationResult'
      deprecated: false
    post:
      tags:
        - fulfillmentLocations
      summary: 'Adds a time slot reservation for a specific time slot - {AddFulfillmentLocationTimeSlotReservationRequest}'
      description: Adds a time slot reservation for a specific time slot.
      operationId: AddFulfillmentLocationTimeSlotReservationRequestScopeIdFulfillmentLocationIdreservationsSlotId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: path
          description: The unique identifier of the time slot.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddFulfillmentLocationTimeSlotReservationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlotReservation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlotReservation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/reservations/{SlotReservationId}':
    put:
      tags:
        - fulfillmentLocations
      summary: 'Updates a time slot reservation - {UpdateFulfillmentLocationTimeSlotReservationRequest}'
      description: Updates a time slot reservation.
      operationId: UpdateFulfillmentLocationTimeSlotReservationRequestScopeIdFulfillmentLocationIdreservationsSlotReservationId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: SlotReservationId
          in: path
          description: the unique identifier of the time slot reservation.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateFulfillmentLocationTimeSlotReservationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlotReservation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlotReservation'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/{FulfillmentMethodType}/slots':
    delete:
      tags:
        - fulfillmentLocations
      summary: 'Deletes a time slot from a fulfillment location for a specific scope - {DeleteFulfillmentLocationTimeSlotsRequest}'
      description: Deletes all time slot from a fulfillment location for a specific scope
      operationId: DeleteFulfillmentLocationTimeSlotsRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslots_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/{FulfillmentMethodType}/slots/{SlotId}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieves a time slot from a fulfillment location for a specific scope - {GetFulfillmentLocationTimeSlotByIdRequest}'
      description: Retrieves a time slot from a fulfillment location for a specific scope
      operationId: GetFulfillmentLocationTimeSlotByIdRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslotsSlotId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: path
          description: the unique identifier of the time slot.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Requested time slot not found
          schema:
            $ref: '#/definitions/TimeSlot'
      deprecated: false
    put:
      tags:
        - fulfillmentLocations
      summary: 'Updates a time slot from a fulfillment location for a specific scope - {UpdateFulfillmentLocationTimeSlotRequest}'
      description: Updates a time slot from a fulfillment location for a specific scope
      operationId: UpdateFulfillmentLocationTimeSlotRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslotsSlotId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: path
          description: the unique identifier of the time slot.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateFulfillmentLocationTimeSlotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlot'
      deprecated: false
    delete:
      tags:
        - fulfillmentLocations
      summary: 'Deletes a time slot from a fulfillment location for a specific scope - {DeleteFulfillmentLocationTimeSlotRequest}'
      description: Deletes a time slot from a fulfillment location for a specific scope
      operationId: DeleteFulfillmentLocationTimeSlotRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslotsSlotId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: path
          description: the unique identifier of the time slot.
          type: string
          required: true
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/reservations/byId/{SlotReservationId}':
    get:
      tags:
        - fulfillmentLocations
      summary: 'Retrieves a time slot reservation - {GetFulfillmentLocationTimeSlotReservationByIdRequest}'
      description: Retrieves a time slot reservation
      operationId: GetFulfillmentLocationTimeSlotReservationByIdRequestScopeIdFulfillmentLocationIdreservationsbyIdSlotReservationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: SlotReservationId
          in: path
          description: the unique identifier of the time slot reservation.
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: query
          description: The unique identifier of the time slot.
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimeSlotReservation'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TimeSlotReservation'
        '404':
          description: Requested time slot not found
          schema:
            $ref: '#/definitions/TimeSlotReservation'
      deprecated: false
    delete:
      tags:
        - fulfillmentLocations
      summary: 'Deletes a time slot reservation - {DeleteFulfillmentLocationTimeSlotReservationRequest}'
      description: Deletes a time slot reservation
      operationId: DeleteFulfillmentLocationTimeSlotReservationRequestScopeIdFulfillmentLocationIdreservationsbyIdSlotReservationId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: SlotReservationId
          in: path
          description: the unique identifier of the time slot reservation.
          type: string
          required: true
          x-nullable: false
        - name: SlotId
          in: query
          description: The unique identifier of the time slot.
          type: string
          required: false
          x-nullable: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/{FulfillmentMethodType}/slots/several':
    post:
      tags:
        - fulfillmentLocations
      summary: 'Adds a list of time slots from a fulfillment location for a specific scope - {AddFulfillmentLocationTimeSlotsRequest}'
      description: Adds a list of time slots from a fulfillment location for a specific scope
      operationId: AddFulfillmentLocationTimeSlotsRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslotsseveral_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddFulfillmentLocationTimeSlotsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentLocations/{ScopeId}/{FulfillmentLocationId}/{FulfillmentMethodType}/slots/reset':
    put:
      tags:
        - fulfillmentLocations
      summary: 'Delete all time slot from a fulfillment location for a specific scope and add the list of time slots - {ResetFulfillmentLocationTimeSlotsRequest}'
      description: Delete all time slot from a fulfillment location for a specific scope and add the list of time slots
      operationId: ResetFulfillmentLocationTimeSlotsRequestScopeIdFulfillmentLocationIdFulfillmentMethodTypeslotsreset_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the unique identifier of the Fulfillment location.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentMethodType
          in: path
          description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ResetFulfillmentLocationTimeSlotsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<TimeSlot>
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/customers/{ScopeId}/{CustomerId}/{PaymentProviderName}/paymentMethods/{PaymentMethodId}/default':
    put:
      tags:
        - customers
      summary: 'Sets the default PaymentMethod for a customer profile - {SetDefaultCustomerPaymentMethodRequest}'
      description: Sets the default PaymentMethod for a customer profile
      operationId: SetDefaultCustomerPaymentMethodRequestScopeIdCustomerIdPaymentProviderNamepaymentMethodsPaymentMethodIddefault_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the unique identifier of the customer owning the cart.
          type: string
          required: true
          x-nullable: false
        - name: PaymentProviderName
          in: path
          description: 'the name of the payment provider to use. If null, all methods will be returned'
          type: string
          required: true
        - name: PaymentMethodId
          in: path
          description: the unique identifier of the payment method to set as default
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetDefaultCustomerPaymentMethodRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentMethod'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/Summary':
    get:
      tags:
        - carts
      summary: 'Retrieve the summary of a cart - {GetCartSummaryRequest}'
      description: Retrieve the summary of a cart
      operationId: GetCartSummaryRequestScopeIdCustomerIdCartNameSummary_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ExecuteWorkflow
          in: query
          description: Whether or not to execute the specified workflow before returning the cart.
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CartSummary'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/CartSummary'
        '404':
          description: Requested cart not found
          schema:
            $ref: '#/definitions/CartSummary'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/clear':
    delete:
      tags:
        - carts
      summary: 'Clears a cart by name - {ClearCartRequest}'
      description: Clears a cart by name
      operationId: ClearCartRequestScopeIdCustomerIdCartNameclear_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/lineItems':
    get:
      tags:
        - carts
      summary: 'Get all the line items of a cart - {GetLineItemsInCartRequest}'
      description: Get all the line items of a cart
      operationId: GetLineItemsInCartRequestScopeIdCustomerIdCartNamelineItems_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
        '404':
          description: Requested lineItem not found
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
      deprecated: false
    post:
      tags:
        - carts
      summary: 'Add a line item to the first shipment of a cart - {AddLineItemRequest}'
      description: Add a line item to the first shipment of a cart
      operationId: AddLineItemRequestScopeIdCustomerIdCartNamelineItems_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddLineItemRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/removeAllLineItems':
    delete:
      tags:
        - carts
      summary: 'Remove all the line items from a cart - {RemoveAllLineItemsRequest}'
      description: Remove all the line items from a cart
      operationId: RemoveAllLineItemsRequestScopeIdCustomerIdCartNameremoveAllLineItems_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments':
    post:
      tags:
        - carts
      summary: 'Add a shipment to a cart - {AddShipmentRequest}'
      description: Add a shipment to a cart
      operationId: AddShipmentRequestScopeIdCustomerIdCartNameshipments_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments':
    get:
      tags:
        - carts
      summary: 'Get all the payments of a cart - {GetPaymentsInCartRequest}'
      description: Get all the payments of a cart
      operationId: GetPaymentsInCartRequestScopeIdCustomerIdCartNamepayments_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Payment>
            type: array
            items:
              $ref: '#/definitions/Payment'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Payment>
            type: array
            items:
              $ref: '#/definitions/Payment'
        '404':
          description: Requested payment not found
          schema:
            title: List<Payment>
            type: array
            items:
              $ref: '#/definitions/Payment'
      deprecated: false
    post:
      tags:
        - carts
      summary: 'Add a payment in a cart - {AddPaymentRequest}'
      description: Add a payment in a cart
      operationId: AddPaymentRequestScopeIdCustomerIdCartNamepayments_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddPaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/completeCheckout':
    post:
      tags:
        - carts
      summary: 'Complete the checkout of the cart - {CompleteCheckoutRequest}'
      description: Complete the checkout of the cart
      operationId: CompleteCheckoutRequestScopeIdCustomerIdCartNamecompleteCheckout_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CompleteCheckoutRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/customer':
    put:
      tags:
        - carts
      summary: 'Update the customer summary of a cart - {UpdateCustomerSummaryRequest}'
      description: Update the customer summary of a cart
      operationId: UpdateCustomerSummaryRequestScopeIdCustomerIdCartNamecustomer_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCustomerSummaryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerSummary'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/CustomerSummary'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/states':
    get:
      tags:
        - carts
      summary: 'Retrieve the states of a cart, its shipments and its line items - {GetCartStatesRequest}'
      description: 'Retrieve the states of a cart, its shipments and its line items'
      operationId: GetCartStatesRequestScopeIdCustomerIdCartNamestates_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<EntityState>
            type: array
            items:
              $ref: '#/definitions/EntityState'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<EntityState>
            type: array
            items:
              $ref: '#/definitions/EntityState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/{PaymentProviderName}/paymentMethods':
    post:
      tags:
        - carts
      summary: 'Retrieve the payment method available for a specific payment provider - {FindCartPaymentMethodsRequest}'
      description: 'Retrieve all the payment methods available for the cart, as well as the payment methods previously used by the customer.The request calls the method GetPaymentMethods(Cart cart, Dictionary<string, object> parameters) of the payment provider.'
      operationId: FindCartPaymentMethodsRequestScopeIdCustomerIdCartNamePaymentProviderNamepaymentMethods_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: the name of the cart to retrieve
          type: string
          required: true
        - name: PaymentProviderName
          in: path
          description: the name of the payment provider to use
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindCartPaymentMethodsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<PaymentMethod>
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/lineItems/batch':
    post:
      tags:
        - carts
      summary: 'Add or update multiple line items to the first shipment of a cart - {AddOrUpdateLineItemsRequest}'
      description: Add or update multiple line items to the first shipment of a cart
      operationId: AddOrUpdateLineItemsRequestScopeIdCustomerIdCartNamelineItemsbatch_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateLineItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Remove multiple line items from a cart - {RemoveLineItemsRequest}'
      description: Remove multiple line items from a cart
      operationId: RemoveLineItemsRequestScopeIdCustomerIdCartNamelineItemsbatch_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: LineItemIds
          in: query
          description: The unique identifier of the LineItems to be removed.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/lineItems/{Id}':
    get:
      tags:
        - carts
      summary: 'Get a line item of a cart - {GetLineItemRequest}'
      description: Get a line item of a cart
      operationId: GetLineItemRequestScopeIdCustomerIdCartNamelineItemsId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the LineItem to retreive
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LineItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/LineItem'
        '404':
          description: Requested lineItem not found
          schema:
            $ref: '#/definitions/LineItem'
      deprecated: false
    put:
      tags:
        - carts
      summary: 'Update a line item of a cart - {UpdateLineItemRequest}'
      description: Update a line item of a cart
      operationId: UpdateLineItemRequestScopeIdCustomerIdCartNamelineItemsId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the LineItem to update.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateLineItemRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Remove a line item from a cart - {RemoveLineItemRequest}'
      description: Remove a line item from a cart
      operationId: RemoveLineItemRequestScopeIdCustomerIdCartNamelineItemsId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the LineItem to be removed.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments/{Id}':
    get:
      tags:
        - carts
      summary: 'Get a shipment of a cart - {GetShipmentRequest}'
      description: Get a shipment of a cart
      operationId: GetShipmentRequestScopeIdCustomerIdCartNameshipmentsId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Shipment to retreive
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Shipment'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Shipment'
        '404':
          description: Requested shipment not found
          schema:
            $ref: '#/definitions/Shipment'
      deprecated: false
    put:
      tags:
        - carts
      summary: 'Update a shipment of a cart - {UpdateShipmentRequest}'
      description: Update a shipment of a cart
      operationId: UpdateShipmentRequestScopeIdCustomerIdCartNameshipmentsId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Shipment to update.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Removes a shipment from a cart - {RemoveShipmentRequest}'
      description: Removes a shipment from a cart
      operationId: RemoveShipmentRequestScopeIdCustomerIdCartNameshipmentsId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Shipment to be removed.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{Id}':
    get:
      tags:
        - carts
      summary: 'Get a payment of a cart - {GetPaymentRequest}'
      description: Get a payment of a cart
      operationId: GetPaymentRequestScopeIdCustomerIdCartNamepaymentsId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Payment to retreive
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Payment'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Payment'
        '404':
          description: Requested payment not found
          schema:
            $ref: '#/definitions/Payment'
      deprecated: false
    put:
      tags:
        - carts
      summary: 'Update a payment of a cart - {UpdatePaymentRequest}'
      description: Update a payment of a cart
      operationId: UpdatePaymentRequestScopeIdCustomerIdCartNamepaymentsId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Payment to update.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: true
    delete:
      tags:
        - carts
      summary: 'Removes a payment from a cart - {RemovePaymentRequest}'
      description: Removes a payment from a cart
      operationId: RemovePaymentRequestScopeIdCustomerIdCartNamepaymentsId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: Id
          in: path
          description: The unique identifier of the Payment to be removed.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/coupons/{CouponCode}':
    post:
      tags:
        - carts
      summary: 'Add a coupon to a cart - {AddCouponRequest}'
      description: Add a coupon to a cart
      operationId: AddCouponRequestScopeIdCustomerIdCartNamecouponsCouponCode_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CouponCode
          in: path
          description: the coupon code. This is the string that is to be entered on the Cart or Order to be able to fetch the coupon and apply the promotion. It is unique in the system.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddCouponRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Remove a coupon from a cart - {RemoveCouponRequest}'
      description: Remove a coupon from a cart
      operationId: RemoveCouponRequestScopeIdCustomerIdCartNamecouponsCouponCode_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CouponCode
          in: path
          description: The unique identifier of the Coupon to be removed.
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/copyTo/{NewCustomerId}':
    put:
      tags:
        - carts
      summary: 'Copy an existing cart to another customer - {CopyCartToCustomerRequest}'
      description: Copy an existing cart to another customer
      operationId: CopyCartToCustomerRequestScopeIdCustomerIdCartNamecopyToNewCustomerId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: NewCustomerId
          in: path
          description: the id of the customer who receives the cart.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CopyCartToCustomerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /orders:
    post:
      tags:
        - orders
      summary: 'Create a new order from a cart - {CreateOrderRequest}'
      description: Create a new order from a cart
      operationId: CreateOrderRequest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/postProcess':
    post:
      tags:
        - orders
      summary: 'Queue a post processing task for a given order - {PostProcessOrderRequest}'
      description: Queue a post processing task for a given order
      operationId: PostProcessOrderRequestScopeIdOrderIdpostProcess_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique system identifier of the order to post process
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/PostProcessOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/copycart':
    post:
      tags:
        - orders
      summary: 'Copy cart from an existing order - {CopyCartFromOrderRequest}'
      description: Copy a cart
      operationId: CopyCartFromOrderRequestScopeIdOrderIdcopycart_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique identifier of the order to be used for copy.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CopyCartFromOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/copy':
    post:
      tags:
        - orders
      summary: 'Copy an order - {CopyOrderRequest}'
      description: Copy an order
      operationId: CopyOrderRequestScopeIdOrderIdcopy_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique identifier of the order to be copied.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CopyOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/byNumber/{OrderNumber}':
    get:
      tags:
        - orders
      summary: 'Retrieve an order - {GetOrderByNumberRequest}'
      description: Retrieve an order
      operationId: GetOrderByNumberRequestScopeIdbyNumberOrderNumber_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: The order number for the request.
          type: string
          required: true
        - name: IncludeLineItems
          in: query
          description: a value indicating whether include line items or not.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeShipment
          in: query
          description: a value indicating whether include shipment or not.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePayment
          in: query
          description: a value indicating whether include payments or not.
          type: boolean
          required: false
          x-nullable: false
        - name: CustomerId
          in: query
          description: The customer identifier for the request
          type: string
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{CustomerId}/lastOrder':
    get:
      tags:
        - orders
      summary: 'Get customer last order - {GetCustomerLastOrderRequest}'
      description: Get customer last order
      operationId: GetCustomerLastOrderRequestScopeIdCustomerIdlastOrder_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer to retrieve last order from.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Requested customer not found
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/notes':
    get:
      tags:
        - orders
      summary: 'Get order notes - {GetOrderNotesRequest}'
      description: Get order notes.
      operationId: GetOrderNotesRequestScopeIdOrderIdnotes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique identifier of the Order.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '404':
          description: Requested order not found
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
      deprecated: false
    post:
      tags:
        - orders
      summary: 'Add a note to an order - {AddOrderNoteRequest}'
      description: Add a note to an order
      operationId: AddOrderNoteRequestScopeIdOrderIdnotes_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The parent id of the note.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrderNoteRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/fulfillmentState':
    get:
      tags:
        - orders
      summary: 'Retrieve the fulfillment state of an order and each of its shipments - {GetOrderFulfillmentStateRequest}'
      description: Retrieve the fulfillment state of an order and each of its shipments
      operationId: GetOrderFulfillmentStateRequestScopeIdOrderIdfulfillmentState_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique system identifier for the Order
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    post:
      tags:
        - orders
      summary: 'Request that all shipments statuses be transitioned from their current status to the submitted status. - {ChangeOrderStatusRequest}'
      description: Request that the status of all shipments be transitioned from their current status to the given status. This request issues a request to resume the long running fulfillment workflow of each shipment and transition them to the given state.If all transitions succeed the order status will be updated
      operationId: ChangeOrderStatusRequestScopeIdOrderIdfulfillmentState_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique system identifier for the order
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeOrderStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/resume':
    post:
      tags:
        - orders
      summary: 'Resume the order which was on hold - {ResumeOrderRequest}'
      description: Update the current status of the shipments and order to set them back to their previous status (before being on hold)
      operationId: ResumeOrderRequestScopeIdOrderIdresume_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ResumeOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/printuri':
    get:
      tags:
        - orders
      summary: 'Get the uri of printable version of the order - {GetPrintableOrderUriRequest}'
      description: Get the uri of printable version of the order
      operationId: GetPrintableOrderUriRequestScopeIdOrderIdprinturi_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id for the request.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested settings not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/RMA/{ScopeId}/{OrderNumber}':
    get:
      tags:
        - orders
      summary: 'Retrieves all RMAs for an order - {GetRmasByOrderRequest}'
      description: Retrieves all RMAs for a specified order
      operationId: GetRmasByOrderRequestRMAScopeIdOrderNumber_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: the order number
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RmaListResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RmaListResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}':
    get:
      tags:
        - orders
      summary: 'Retrieve an order - {GetOrderByIdRequest}'
      description: Retrieve an order
      operationId: GetOrderByIdRequestScopeIdOrderId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id for the request.
          type: string
          required: true
          x-nullable: false
        - name: IncludeLineItems
          in: query
          description: a value indicating whether include line items or not.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeShipment
          in: query
          description: a value indicating whether include shipment or not.
          type: boolean
          required: false
          x-nullable: false
        - name: IncludePayment
          in: query
          description: a value indicating whether include payments or not.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    post:
      tags:
        - orders
      summary: 'Used to update an existing order based on the provided Order. - {SaveOrderRequest}'
      description: Update an existing order based on the provided Order. This request does not perform validation nor does it process the order using workflows.
      operationId: SaveOrderRequestScopeIdOrderId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system idenfitifier for the request.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/find':
    post:
      tags:
        - orders
      summary: 'Search for orders - {FindOrdersRequest}'
      description: Search for orders
      operationId: FindOrdersRequestScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindOrdersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/count':
    post:
      tags:
        - orders
      summary: 'Return to number of orders matching the search criteria - {FindOrdersCountRequest}'
      description: Return to number of orders matching the search criteria
      operationId: FindOrdersCountRequestScopeIdcount_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindOrdersCountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QueryCountResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/orderhistory':
    get:
      tags:
        - orders
      summary: 'Get history items related to specified order - {GetOrderHistoryRequest}'
      description: Get history items related to specified order
      operationId: GetOrderHistoryRequestScopeIdorderhistory_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: query
          description: The identifier of the order to be used for retrieving items.
          type: string
          required: false
        - name: ShipmentId
          in: query
          description: The shipment identifier to be used to filter items from the order (optional).
          type: string
          required: false
        - name: FulfillmentLocationId
          in: query
          description: The fulfillment location identifier to be used to filter items from the order (optional).
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<OrderHistoryItem>
            type: array
            items:
              $ref: '#/definitions/OrderHistoryItem'
      deprecated: false
    post:
      tags:
        - orders
      summary: 'Add new history item related to specified order - {AddOrderHistoryRequest}'
      description: Add history item related to a specified order
      operationId: AddOrderHistoryRequestScopeIdorderhistory_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrderHistoryRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/printOrders':
    post:
      tags:
        - orders
      summary: 'Get the uri of printable version of a list of order - {GetPrintableOrdersUriRequest}'
      description: Get the uri of printable version of a list of order
      operationId: GetPrintableOrdersUriRequestScopeIdprintOrders_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetPrintableOrdersUriRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested settings not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentMethods/{ScopeId}/':
    get:
      tags:
        - fulfillmentMethods
      summary: 'Gets the list of all the available fulfillment methods for a given scope - {GetAvailableFulfillmentMethodsByScopeRequest}'
      description: Gets the list of all the available fulfillment methods for a given scope
      operationId: GetAvailableFulfillmentMethodsByScopeRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFulfillmentMethodsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetFulfillmentMethodsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/fulfillmentMethods/{ScopeId}/{CustomerId}/{CartName}':
    post:
      tags:
        - fulfillmentMethods
      summary: 'Retrieve the list of all the potential FulfillmentMethod of a given customer Cart - {FindCalculatedFulfillmentMethodsRequest}'
      description: Retrieve the list of all the potential FulfillmentMethod of a given customer Cart
      operationId: FindCalculatedFulfillmentMethodsRequestScopeIdCustomerIdCartName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the unique identifier of the Customer owning the cart.
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name of the cart to retrieve.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindCalculatedFulfillmentMethodsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: List<FulfillmentMethod>
            type: array
            items:
              $ref: '#/definitions/FulfillmentMethod'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /orders/settings:
    get:
      tags:
        - orders
      summary: 'Get the order settings - {GetOrderSettingsRequest}'
      description: Get the order settings
      operationId: GetOrderSettingsRequestsettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderSettings'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderSettings'
        '404':
          description: Requested settings not found
          schema:
            $ref: '#/definitions/OrderSettings'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /orders/taxCategories:
    get:
      tags:
        - orders
      summary: 'Retrieve the list of tax categories in the system - {GetTaxCategoriesRequest}'
      description: Retrieve the list of tax categories in the system
      operationId: GetTaxCategoriesRequesttaxCategories_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: GetSystemCategories
          in: query
          description: a value indicating whether include system categories or not.
          type: boolean
          required: false
          x-nullable: false
        - name: GetOnlySupportedCategories
          in: query
          description: a value indicating whether include only supported categories or not.
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TaxCategory>
            type: array
            items:
              $ref: '#/definitions/TaxCategory'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /orders/taxProviderByScope:
    get:
      tags:
        - orders
      summary: 'Retrieve the tax provider for a scope - {GetTaxProviderByScopeRequest}'
      description: Retrieve the tax provider for a scope
      operationId: GetTaxProviderByScopeRequesttaxProviderByScope_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Name
          in: query
          description: The name of the provider
          type: string
          required: false
        - name: CultureName
          in: query
          description: The culture name in which language that data will be returned
          type: string
          required: false
        - name: ScopeId
          in: query
          description: The id of the requested scope
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaxProviderDetails'
        '404':
          description: When the provider was not found.
          schema:
            $ref: '#/definitions/TaxProviderDetails'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /orders/availableTaxProviders:
    get:
      tags:
        - orders
      summary: 'Retrieve all the tax providers available in the system - {GetAvailableTaxProvidersRequest}'
      description: Retrieve all the tax providers available in the system
      operationId: GetAvailableTaxProvidersRequestavailableTaxProviders_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CultureName
          in: query
          description: The culture name in which language that data will be returned
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<TaxProviderDetails>
            type: array
            items:
              $ref: '#/definitions/TaxProviderDetails'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/adjustment':
    put:
      tags:
        - orders
      summary: 'Set the adjustment of a shipment - {SetAdjustmentOrderRequest}'
      description: Set the adjustment of a shipment - setting Amount to null or not providing an Amount will remove the adjustment
      operationId: SetAdjustmentOrderRequestScopeIdOrderIdshipmentsShipmentIdadjustment_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The unique identifier of the shipment to adjust
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetAdjustmentOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/notes':
    post:
      tags:
        - orders
      summary: 'Add a note to an order shipment - {AddShipmentNoteRequest}'
      description: Add a note to an order shipment.
      operationId: AddShipmentNoteRequestScopeIdOrderIdshipmentsShipmentIdnotes_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddShipmentNoteRequest'
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/shipments/documents/summaries/find':
    post:
      tags:
        - orders
      summary: 'Retrieve shipment documents summaries - {FindShipmentDocumentsSummariesRequest}'
      description: Retrieve shipment documents summaries
      operationId: FindShipmentDocumentsSummariesRequestScopeIdshipmentsdocumentssummariesfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindShipmentDocumentsSummariesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocumentSummaryQueryResult'
        '404':
          description: Documents not found
          schema:
            $ref: '#/definitions/ShipmentDocumentSummaryQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/split':
    put:
      tags:
        - orders
      summary: 'Splits a shipment and queues post processing on the new shipment - {ShipmentSplitRequest}'
      description: Splits a shipment and queues post processing on the new shipment
      operationId: ShipmentSplitRequestScopeIdOrderIdshipmentsShipmentIdsplit_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The identifier of the order.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The identifier of the shipment.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ShipmentSplitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/fulfillmentState':
    post:
      tags:
        - orders
      summary: 'Request that a shipment status be transitioned from its current status to the submitted status. - {ChangeShipmentStatusRequest}'
      description: Request that a shipment status be transitioned from its current status to the submitted status. This request will issue a request to resume the long running fulfillment workflow
      operationId: ChangeShipmentStatusRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentState_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique system identifier for the order
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The unique shipment identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ChangeShipmentStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/state':
    put:
      tags:
        - orders
      summary: 'Update the current state of a shipment - {UpdateShipmentFulfillmentStateRequest}'
      description: 'This is for internal use only. Update the current state of a shipment. If order fulfillment is enabled and the update is not valid or the fulfillment does not transition, the request will fail.'
      operationId: UpdateShipmentFulfillmentStateRequestScopeIdOrderIdshipmentsShipmentIdstate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: the unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateShipmentFulfillmentStateRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/WorkflowXamlPath':
    put:
      tags:
        - orders
      summary: 'Update the path of the fulfillment workflow of a shipment. - {UpdateShipmentFulfillmentWorkflowXamlPathRequest}'
      description: 'Update the path of the fulfillment workflow of a shipment. This is the path from App_Config folder, example of value : App_data\Workflows\Orders\Canada\FulfillmentWorkflow.xaml'
      operationId: UpdateShipmentFulfillmentWorkflowXamlPathRequestScopeIdOrderIdshipmentsShipmentIdWorkflowXamlPath_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: the unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateShipmentFulfillmentWorkflowXamlPathRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/renderTemplate':
    get:
      tags:
        - orders
      summary: 'Render a shipment''s template. - {RenderOrderShipmentTemplateRequest}'
      description: Render a shipment's template.
      operationId: RenderOrderShipmentTemplateRequestScopeIdOrderIdshipmentsShipmentIdrenderTemplate_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The orderId related to the shipment.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment id.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The name of the culture (language) to use to render the template.
          type: string
          required: true
        - name: TemplateName
          in: query
          description: The name of the template to render.
          type: string
          required: false
        - name: ContentName
          in: query
          description: The name of the content to render.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RenderOrderShipmentTemplateResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RenderOrderShipmentTemplateResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/RMA/{ScopeId}/{OrderNumber}/{CustomerId}/Registered':
    post:
      tags:
        - orders
      summary: 'Create RMA registered customer - {CreateRmaRegisteredRequest}'
      description: Create an RMA for a registered customer
      operationId: CreateRmaRegisteredRequestRMAScopeIdOrderNumberCustomerIdRegistered_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: The Order Number related to the RMA
          type: string
          required: true
        - name: CustomerId
          in: path
          description: the Identifier of the Customer who owns the RMA
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRmaRegisteredRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RmaRequestResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RmaRequestResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/payments/{PaymentId}/refresh':
    post:
      tags:
        - orders
      summary: 'Refresh the payment of an order - {RefreshPaymentOrderRequest}'
      description: Refresh the payment of an order
      operationId: RefreshPaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdrefresh_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to settle.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RefreshPaymentOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/payments/{PaymentId}/settle':
    post:
      tags:
        - orders
      summary: 'Settle the payment of an order - {SettlePaymentOrderRequest}'
      description: Settle the payment of an order - The payment has to be authorized to be able to settle it.
      operationId: SettlePaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdsettle_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to settle.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SettlePaymentOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/payments/{PaymentId}/refund':
    post:
      tags:
        - orders
      summary: 'Refund the payment of an order - {RefundPaymentRequest}'
      description: Refund the payment of an order.
      operationId: RefundPaymentRequestScopeIdOrderIdpaymentsPaymentIdrefund_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order identifier.
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to refund.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RefundPaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{ShipmentId}/shipment/notes':
    get:
      tags:
        - orders
      summary: 'Get shipment notes - {GetShipmentNotesRequest}'
      description: Get shipment notes.
      operationId: GetShipmentNotesRequestScopeIdShipmentIdshipmentnotes_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the Shipment.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
        '404':
          description: Requested shipment not found
          schema:
            title: List<Note>
            type: array
            items:
              $ref: '#/definitions/Note'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/shipments/documents/find':
    post:
      tags:
        - orders
      summary: 'Retrieve shipment documents - {FindShipmentDocumentsRequest}'
      description: Retrieve shipment documents
      operationId: FindShipmentDocumentsRequestScopeIdshipmentsdocumentsfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindShipmentDocumentsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocumentQueryResult'
        '404':
          description: Documents not found
          schema:
            $ref: '#/definitions/ShipmentDocumentQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/RMA/{ScopeId}/{OrderNumber}/Guest':
    post:
      tags:
        - orders
      summary: 'Create RMA Guest - {CreateRmaGuestRequest}'
      description: 'Create an RMA for a Guest or Unregistered customer. You must fill at least one of the ''Postal Code'', ''Last name'', or ''Email'' fields. The specified field(s) will be used for validation.'
      operationId: CreateRmaGuestRequestRMAScopeIdOrderNumberGuest_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: The Order Number related to the RMA
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRmaGuestRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RmaRequestResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RmaRequestResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/RMA/{ScopeId}/{OrderNumber}/{RmaNumber}':
    get:
      tags:
        - orders
      summary: 'Retrieves RMA and items - {GetRmaRequest}'
      description: Retrieves a RMA using order number and RMA number
      operationId: GetRmaRequestRMAScopeIdOrderNumberRmaNumber_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: the order number
          type: string
          required: true
        - name: RmaNumber
          in: path
          description: the RMA number
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Rma'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Rma'
      deprecated: false
    put:
      tags:
        - orders
      summary: 'Update RMA and items - {UpdateRmaRequest}'
      description: Update an RMA status or the item details
      operationId: UpdateRmaRequestRMAScopeIdOrderNumberRmaNumber_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: Scope Id
          type: string
          required: true
        - name: OrderNumber
          in: path
          description: the Order Number related to the RMA
          type: string
          required: true
        - name: RmaNumber
          in: path
          description: the RMA Number
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateRmaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RmaRequestResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RmaRequestResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/shipmentFulfillmentInfos/{ScopeId}':
    get:
      tags:
        - shipmentFulfillmentInfos
      summary: 'Get shipment Fulfillment Infos - {GetShipmentFulfillmentInfosRequest}'
      description: Get shipment Fulfillment Infos.
      operationId: GetShipmentFulfillmentInfosRequestScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: pickUpLocationId
          in: query
          description: the PickUpLocationId
          type: string
          required: false
        - name: fulfillmentLocationId
          in: query
          description: the FulfillmentLocationId
          type: string
          required: false
          x-nullable: false
        - name: startDate
          in: query
          description: 'the StartDate, ISO-8601 format'
          type: string
          format: date-time
          required: false
        - name: endDate
          in: query
          description: 'the EndDate, ISO-8601 format'
          type: string
          format: date-time
          required: false
        - name: statuses
          in: query
          description: the Statuses
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: type
          in: query
          description: the FulfillmentMethodType
          type: string
          required: false
          x-nullable: false
        - name: pageSize
          in: query
          description: the PageSize
          type: integer
          format: int32
          required: false
        - name: pageNumber
          in: query
          description: the PageNumber
          type: integer
          format: int32
          required: false
        - name: sort
          in: query
          description: 'the sorted fields, seperated by commas, use ''-'' before field name for descending'
          type: string
          required: false
        - name: searchText
          in: query
          description: the SearchText
          type: string
          required: false
        - name: flaggedOnly
          in: query
          description: true if you just want to get flagged Shipments
          type: boolean
          required: false
          x-nullable: false
        - name: excludeShipmentInFinalState
          in: query
          description: value indicating whether or not shipments in final state of the workflow will be returned
          type: boolean
          required: false
          x-nullable: false
        - name: dateRangeFilter
          in: query
          description: the date range filter
          type: string
          required: false
          x-nullable: false
        - name: orderId
          in: query
          description: the order id
          type: string
          required: false
        - name: requiredFields
          in: query
          description: The fields from ShipmentFulfillmentInfo that are absolutely required. Default is all.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentFulfillmentInfoQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/shipmentFulfillmentInfos/{ScopeId}/numberOfShipmentsForFulfillmentLocation/{FulfillmentLocationId}':
    get:
      tags:
        - shipmentFulfillmentInfos
      summary: 'Get the number of shipments for a fulfillment location - {GetNumberOfShipmentsForFulfillmentLocationRequest}'
      description: Get the number of shipments for a fulfillment location.
      operationId: GetNumberOfShipmentsForFulfillmentLocationRequestScopeIdnumberOfShipmentsForFulfillmentLocationFulfillmentLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the FulfillmentLocationId
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNumberOfShipmentsForFulfillmentLocationResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/shipmentFulfillmentInfos/{ScopeId}/{ShipmentId}/printuri':
    get:
      tags:
        - shipmentFulfillmentInfos
      summary: 'Get the uri of printable version of the shipment - {GetPrintableShipmentUriRequest}'
      description: Get the uri of printable version of the shipment
      operationId: GetPrintableShipmentUriRequestScopeIdShipmentIdprinturi_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The shipment id for the request.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested settings not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/shipmentFulfillmentInfos/{ScopeId}/count':
    get:
      tags:
        - shipmentFulfillmentInfos
      summary: 'Get Number of shipment Fulfillment Infos - {GetCountShipmentFulfillmentInfosRequest}'
      description: Get Number of shipment Fulfillment Infos.
      operationId: GetCountShipmentFulfillmentInfosRequestScopeIdcount_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: pickUpLocationId
          in: query
          description: the PickUpLocationId
          type: string
          required: false
        - name: fulfillmentLocationId
          in: query
          description: the FulfillmentLocationId
          type: string
          required: false
          x-nullable: false
        - name: startDate
          in: query
          description: 'the StartDate, ISO-8601 format'
          type: string
          format: date-time
          required: false
        - name: endDate
          in: query
          description: 'the EndDate, ISO-8601 format'
          type: string
          format: date-time
          required: false
        - name: statuses
          in: query
          description: the Statuses
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
        - name: type
          in: query
          description: the FulfillmentMethodType
          type: string
          required: false
          x-nullable: false
        - name: searchText
          in: query
          description: the SearchText
          type: string
          required: false
        - name: flaggedOnly
          in: query
          description: true if you just want to get flagged Shipments
          type: boolean
          required: false
          x-nullable: false
        - name: excludeShipmentInFinalState
          in: query
          description: value indicating whether or not shipments in final state of the workflow will be returned
          type: boolean
          required: false
          x-nullable: false
        - name: dateRangeFilter
          in: query
          description: the date Range filter
          type: string
          required: false
          x-nullable: false
        - name: orderId
          in: query
          description: the order id
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CountShipmentFulfillmentInfos'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/shipmentFulfillmentInfos/{ScopeId}/printShipments':
    post:
      tags:
        - shipmentFulfillmentInfos
      summary: 'Get the uri of printable version of a list of shipment - {GetPrintableShipmentsUriRequest}'
      description: Get the uri of printable version of a list of shipment
      operationId: GetPrintableShipmentsUriRequestScopeIdprintShipments_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/GetPrintableShipmentsUriRequest'
      responses:
        '200':
          description: Success
          schema:
            title: String
            type: string
        '401':
          description: You must be authenticated to use this request
          schema:
            title: String
            type: string
        '404':
          description: Requested settings not found
          schema:
            title: String
            type: string
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/documents/{Name}':
    get:
      tags:
        - orders
      summary: 'Retrieve a shipment document - {GetShipmentDocumentRequest}'
      description: Retrieve a shipment document
      operationId: GetShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id for the request.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment id for the request.
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the document.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocument'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ShipmentDocument'
      deprecated: false
    put:
      tags:
        - orders
      summary: 'Update a shipment document. - {UpdateShipmentDocumentRequest}'
      description: Update a shipment document.
      operationId: UpdateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment id.
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the document.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateShipmentDocumentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocument'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ShipmentDocument'
      deprecated: false
    post:
      tags:
        - orders
      summary: 'Create a shipment document. - {CreateShipmentDocumentRequest}'
      description: Create a shipment document.
      operationId: CreateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment id.
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The name of the document.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateShipmentDocumentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocument'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ShipmentDocument'
      deprecated: false
    delete:
      tags:
        - orders
      summary: 'Delete a shipment document. - {DeleteShipmentDocumentRequest}'
      description: Delete a shipment document.
      operationId: DeleteShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: The order id.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The shipment id.
          type: string
          required: true
          x-nullable: false
        - name: Name
          in: path
          description: The shipment document name.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShipmentDocument'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ShipmentDocument'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/state/messages':
    post:
      tags:
        - orders
      summary: 'Return the fulfillment state of an order and each of its shipments - {AddShipmentFulfillmentMessagesRequest}'
      description: Update the ExecutionMessages and ValidationResults of a ShipmentFulfillmentState.
      operationId: AddShipmentFulfillmentMessagesRequestScopeIdOrderIdshipmentsShipmentIdstatemessages_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: the unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddShipmentFulfillmentMessagesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/state/failure':
    post:
      tags:
        - orders
      summary: 'Sets the state of a shipment to failed and halts all further processing - {ReportShipmentFulfillmentFailureRequest}'
      description: 'Sets the state of a shipment to failed and halts all further processing. Updates the flag WorkflowInError and IsResumable for a specific shipment fulfillment state. After setting the state of a shipment to failed, the shipment can only be cancelled'
      operationId: ReportShipmentFulfillmentFailureRequestScopeIdOrderIdshipmentsShipmentIdstatefailure_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: The unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: The unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ReportShipmentFulfillmentFailureRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/fulfillmentState/restartTask':
    post:
      tags:
        - orders
      summary: 'Restart the processing of a fulfillment after a failure - {RestartShipmentFulfillmentProcessingRequest}'
      description: 'Restart the processing of a fulfillment after a failure. According to the situation, this request will :- start a new workflow if there is no task id or no execution id for the task of the shipment fulfillment state- replace the task status Faulted by IdleAfterErrorRecovery if the task of the shipment fulfillment state is faulted with a faulted error code- reset the flag WorkflowInError to false and clear execution messages if WorkflowInError = true and IsResumble = false- reset the flags WorkflowInError and IsResumable to false, clear execution message and resume the bookmark created when the error happened if WorkflowInError = true and IsResumble = true'
      operationId: RestartShipmentFulfillmentProcessingRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStaterestartTask_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: the unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RestartShipmentFulfillmentProcessingRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orders/{ScopeId}/{OrderId}/shipments/{ShipmentId}/fulfillmentState/startNewWorkflow':
    post:
      tags:
        - orders
      summary: 'Start the workflow of a fulfillment from the beginning - {StartNewShipmentFulfillmentWorkflowRequest}'
      description: 'Start the workflow of a fulfillment from the beginning. The workflow to use can be specified, if not, the workflow that normally applies is used.'
      operationId: StartNewShipmentFulfillmentWorkflowRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatestartNewWorkflow_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The identifier of the sales or dependant scope in which the order is processed
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system order identifier.
          type: string
          required: true
          x-nullable: false
        - name: ShipmentId
          in: path
          description: the unique system shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/StartNewShipmentFulfillmentWorkflowRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderFulfillmentState'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/orderdraft/{ScopeId}/{DraftId}/payment/{PaymentId}':
    get:
      tags:
        - orderdraft
      summary: 'Retrieve an order draft - {GetOrderDraftPaymentRequest}'
      description: Retrieve an order draft
      operationId: GetOrderDraftPaymentRequestScopeIdDraftIdpaymentPaymentId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: DraftId
          in: path
          description: The id of the draft order for the request.
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The of payment associate to the cart.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Payment'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Payment'
      deprecated: false
    post:
      tags:
        - orderdraft
      summary: 'Update an order draft payment - {UpdateOrderDraftPaymentRequest}'
      description: Update an order draft payment
      operationId: UpdateOrderDraftPaymentRequestScopeIdDraftIdpaymentPaymentId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: DraftId
          in: path
          description: The id of the draft order for the request.
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The of payment associate to the cart.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateOrderDraftPaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Payment'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Payment'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}':
    get:
      tags:
        - pickingMissions
      summary: 'Gets a picking mission by its identifier - {GetPickingMissionRequest}'
      description: Gets a picking mission by its identifier.
      operationId: GetPickingMissionRequestScopeIdId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
        '404':
          description: Requested picking mission not found
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    put:
      tags:
        - pickingMissions
      summary: 'Updates mission items of the specified picking mission - {UpdatePickingMissionRequest}'
      description: Updates mission items of the specified picking mission.
      operationId: UpdatePickingMissionRequestScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePickingMissionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/byLocation/{FulfillmentLocationId}':
    get:
      tags:
        - pickingMissions
      summary: 'Gets the list of picking missions for a fulfillment location and optionally filtered by status - {GetFulfillmentLocationPickingMissionsRequest}'
      description: Gets the list of picking missions for a fulfillment location and optionally filtered by status.
      operationId: GetFulfillmentLocationPickingMissionsRequestScopeIdbyLocationFulfillmentLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: FulfillmentLocationId
          in: path
          description: the fulfillment location identifier.
          type: string
          required: true
          x-nullable: false
        - name: Status
          in: query
          description: the picking mission status.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMissionResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMissionResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/byOrder/{OrderId}':
    get:
      tags:
        - pickingMissions
      summary: 'Gets the list of picking missions for an order and optionally filtered by fulfillment location and/or status - {GetOrderPickingMissionsRequest}'
      description: Gets the list of picking missions for an order and optionally filtered by fulfillment location and/or status.
      operationId: GetOrderPickingMissionsRequestScopeIdbyOrderOrderId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: OrderId
          in: path
          description: the order identifier.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentLocationId
          in: query
          description: the fulfillment location identifier.
          type: string
          required: false
        - name: Status
          in: query
          description: the picking mission status.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMissionResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMissionResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/byShipment/{ShipmentId}':
    get:
      tags:
        - pickingMissions
      summary: 'Gets the list of picking missions for a shipment and optionally filtered by fulfillment location and/or status - {GetShipmentPickingMissionsRequest}'
      description: Gets the list of picking missions for a shipment and optionally filtered by fulfillment location and/or status.
      operationId: GetShipmentPickingMissionsRequestScopeIdbyShipmentShipmentId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: the shipment identifier.
          type: string
          required: true
          x-nullable: false
        - name: FulfillmentLocationId
          in: query
          description: the fulfillment location identifier.
          type: string
          required: false
        - name: Status
          in: query
          description: the picking mission status.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMissionResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMissionResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/assignPicker':
    post:
      tags:
        - pickingMissions
      summary: 'Assigns a picker to the specified picking mission - {AssignPickerToPickingMissionRequest}'
      description: Assigns a picker to the specified picking mission.
      operationId: AssignPickerToPickingMissionRequestScopeIdIdassignPicker_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AssignPickerToPickingMissionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/unassignPicker':
    post:
      tags:
        - pickingMissions
      summary: 'Unassigns the picker from the specified picking mission - {UnassignPickerFromPickingMissionRequest}'
      description: Unassigns the picker from the specified picking mission.
      operationId: UnassignPickerFromPickingMissionRequestScopeIdIdunassignPicker_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope identifier.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UnassignPickerFromPickingMissionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/startAssembly':
    post:
      tags:
        - pickingMissions
      summary: 'Starts the assembly of the specified picking mission - {StartPickingMissionAssemblyRequest}'
      description: Starts the assembly of the specified picking mission.
      operationId: StartPickingMissionAssemblyRequestScopeIdIdstartAssembly_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/StartPickingMissionAssemblyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/saveAssemblyProgress':
    put:
      tags:
        - pickingMissions
      summary: 'Saves the assembly progress made on the specified picking mission with the list of picked quantity items - {SavePickingMissionAssemblyProgressRequest}'
      description: Saves the assembly progress made on the specified picking mission with the list of picked quantity items.
      operationId: SavePickingMissionAssemblyProgressRequestScopeIdIdsaveAssemblyProgress_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SavePickingMissionAssemblyProgressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/completeAssembly':
    post:
      tags:
        - pickingMissions
      summary: 'Completes the specified picking mission with the list of picked quantity items - {CompletePickingMissionAssemblyRequest}'
      description: Completes the specified picking mission with the list of picked quantity items.
      operationId: CompletePickingMissionAssemblyRequestScopeIdIdcompleteAssembly_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CompletePickingMissionAssemblyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/cancelAssembly':
    post:
      tags:
        - pickingMissions
      summary: 'Cancels the assembly of a picking mission which is currently in progress - {CancelPickingMissionAssemblyRequest}'
      description: Cancels the assembly of a picking mission which is currently in progress.
      operationId: CancelPickingMissionAssemblyRequestScopeIdIdcancelAssembly_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelPickingMissionAssemblyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}/{Id}/cancel':
    post:
      tags:
        - pickingMissions
      summary: 'Cancels the specified picking mission - {CancelPickingMissionRequest}'
      description: Cancels the specified picking mission.
      operationId: CancelPickingMissionRequestScopeIdIdcancel_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: Id
          in: path
          description: the picking mission identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CancelPickingMissionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/pickingMissions/{ScopeId}':
    post:
      tags:
        - pickingMissions
      summary: 'Creates a new picking mission for a fulfillment location and a list of mission items - {CreatePickingMissionRequest}'
      description: Creates a new picking mission for a fulfillment location and a list of mission items.
      operationId: CreatePickingMissionRequestScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: the scope id.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreatePickingMissionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PickingMission'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/PickingMission'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/processedOrders/{ScopeId}/{OrderId}':
    post:
      tags:
        - processedOrders
      summary: 'Update an existing order based on the provided Order. - {SaveProcessedOrderRequest}'
      description: 'Update an existing order based on the provided Order. This request does not perform validation nor does it process the order using workflows. Warning : Do not use, only for internal usage - in activites'
      operationId: SaveProcessedOrderRequestScopeIdOrderId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: the unique system idenfitifier for the request.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SaveProcessedOrderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Order'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/processedOrders/{ScopeId}/{OrderId}/lock':
    post:
      tags:
        - processedOrders
      summary: 'Acquire a lock on a given order for a shipment. - {TryAcquireOrderLockForShipmentRequest}'
      description: 'Acquire a lock on a given order for a shipment. This request does not perform validation nor does it process the order using workflows. Warning : Do not use, only for internal usage - in activities'
      operationId: TryAcquireOrderLockForShipmentRequestScopeIdOrderIdlock_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: the order id that will get locked.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/TryAcquireOrderLockForShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderLockInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/OrderLockInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/processedOrders/{ScopeId}/{OrderId}/releaselock':
    post:
      tags:
        - processedOrders
      summary: 'Release a lock on a given order for a shipment. - {ReleaseOrderLockForShipmentRequest}'
      description: 'Release a lock on a given order for a shipment. This request does not perform validation nor does it process the order using workflows. Warning : Do not use, only for internal usage - in activites'
      operationId: ReleaseOrderLockForShipmentRequestScopeIdOrderIdreleaselock_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrderId
          in: path
          description: the order id that will get locked.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ReleaseOrderLockForShipmentRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}':
    get:
      tags:
        - carts
      summary: 'Retrieve a cart - {GetCartRequest}'
      description: Retrieve a cart. The cart is created if it does not exist.
      operationId: GetCartRequestScopeIdCustomerIdCartName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ExecuteWorkflow
          in: query
          description: Whether or not to execute the specified workflow before returning the cart.
          type: boolean
          required: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    put:
      tags:
        - carts
      summary: 'Update the cart - {UpdateCartRequest}'
      description: Update the cart
      operationId: UpdateCartRequestScopeIdCustomerIdCartName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCartRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Delete a cart by name - {DeleteCartRequest}'
      description: 'Delete a cart by name, nothing is preserved, to remove only the items, use the ClearCartRequest instead.'
      operationId: DeleteCartRequestScopeIdCustomerIdCartName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}':
    get:
      tags:
        - carts
      summary: 'Retrieves the list of carts belonging to a customer - {GetCartsByCustomerIdRequest}'
      description: Retrieves the list of carts belonging to a customer
      operationId: GetCartsByCustomerIdRequestScopeIdCustomerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: IncludeChildScopes
          in: query
          description: a value indicating whether to include carts found in child scopes.
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: CartType
          in: query
          description: The optional cart type. Only the carts of this specific type will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<CartSummary>
            type: array
            items:
              $ref: '#/definitions/CartSummary'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<CartSummary>
            type: array
            items:
              $ref: '#/definitions/CartSummary'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments/{ShipmentId}/lineItems':
    get:
      tags:
        - carts
      summary: 'Get all the line items of a shipment - {GetLineItemsInShipmentRequest}'
      description: Get all the line items of a shipment
      operationId: GetLineItemsInShipmentRequestScopeIdCustomerIdCartNameshipmentsShipmentIdlineItems_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the Shipment to consider.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
        '401':
          description: You must be authenticated to use this request
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
        '404':
          description: Requested lineItem not found
          schema:
            title: List<LineItem>
            type: array
            items:
              $ref: '#/definitions/LineItem'
      deprecated: false
    post:
      tags:
        - carts
      summary: 'Add a line item to a specified shipment of a cart - {AddLineItemInShipmentRequest}'
      description: Add a line item to a specified shipment of a cart
      operationId: AddLineItemInShipmentRequestScopeIdCustomerIdCartNameshipmentsShipmentIdlineItems_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the Shipment to consider.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddLineItemInShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    delete:
      tags:
        - carts
      summary: 'Remove all the line items from a shipment - {RemoveLineItemsInShipmentRequest}'
      description: Remove all the line items from a shipment
      operationId: RemoveLineItemsInShipmentRequestScopeIdCustomerIdCartNameshipmentsShipmentIdlineItems_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the Shipment to consider.
          type: string
          required: true
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name in which language the data will be returned.
          type: string
          required: false
        - name: WorkflowToExecute
          in: query
          description: The name of the workflow that should be executed.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments/{ShipmentId}/{TimeSlotId}':
    post:
      tags:
        - carts
      summary: 'Adds or renew a timeslot reservation for a cart - {ReserveTimeSlotRequest}'
      description: Adds or renew a timeslot reservation for a cart
      operationId: ReserveTimeSlotRequestScopeIdCustomerIdCartNameshipmentsShipmentIdTimeSlotId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the Shipment.
          type: string
          required: true
          x-nullable: false
        - name: TimeSlotId
          in: path
          description: The unique identifier of the fullfilment timeslot to reserve.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ReserveTimeSlotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/amount':
    put:
      tags:
        - carts
      summary: 'Update the amount of a payment - {UpdatePaymentAmountRequest}'
      description: Update the amount of a payment
      operationId: UpdatePaymentAmountRequestScopeIdCustomerIdCartNamepaymentsPaymentIdamount_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The Id of the payment
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePaymentAmountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/billingAddress':
    put:
      tags:
        - carts
      summary: 'Update the billing address of a payment - {UpdateBillingAddressRequest}'
      description: Update the billing address of a payment
      operationId: UpdateBillingAddressRequestScopeIdCustomerIdCartNamepaymentsPaymentIdbillingAddress_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The Id of the payment
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateBillingAddressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/method':
    put:
      tags:
        - carts
      summary: 'Update a payment method of a payment - {UpdatePaymentMethodRequest}'
      description: Update a payment method of a payment
      operationId: UpdatePaymentMethodRequestScopeIdCustomerIdCartNamepaymentsPaymentIdmethod_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The Id of the payment
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePaymentMethodRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/initialize':
    post:
      tags:
        - carts
      summary: 'Initialize the payment in a cart - {InitializePaymentRequest}'
      description: 'Initialize the payment in a cart, Payment method of the payment should already exists'
      operationId: InitializePaymentRequestScopeIdCustomerIdCartNamepaymentsPaymentIdinitialize_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to initialize.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/InitializePaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/refresh':
    post:
      tags:
        - carts
      summary: 'Refresh the payment in a cart - {RefreshPaymentRequest}'
      description: Refresh the payment in a cart
      operationId: RefreshPaymentRequestScopeIdCustomerIdCartNamepaymentsPaymentIdrefresh_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to refresh.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RefreshPaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/authorize':
    post:
      tags:
        - carts
      summary: 'Authorize the payment in a cart - {AuthorizePaymentRequest}'
      description: Authorize the payment in a cart.
      operationId: AuthorizePaymentRequestScopeIdCustomerIdCartNamepaymentsPaymentIdauthorize_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to authorize.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AuthorizePaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/settle':
    post:
      tags:
        - carts
      summary: 'Settle the payment in a cart - {SettlePaymentRequest}'
      description: Settle the payment in a cart - The payment has to be authorized before being settled.
      operationId: SettlePaymentRequestScopeIdCustomerIdCartNamepaymentsPaymentIdsettle_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to settle.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SettlePaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}/void':
    post:
      tags:
        - carts
      summary: 'Void the payment in a cart - {VoidPaymentRequest}'
      description: Void the payment in a cart. A payment already with status Paid cannot be voided.
      operationId: VoidPaymentRequestScopeIdCustomerIdCartNamepaymentsPaymentIdvoid_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The unique identifier of the payment to void.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/VoidPaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Cart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments/{ShipmentId}/adjustment':
    put:
      tags:
        - carts
      summary: 'Set the adjustment of a shipment - {SetAdjustmentRequest}'
      description: Set the adjustment of a shipment - setting Amount to null or not providing an Amount will remove the adjustment
      operationId: SetAdjustmentRequestScopeIdCustomerIdCartNameshipmentsShipmentIdadjustment_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the shipment to adjust
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SetAdjustmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/carts/{ScopeId}/{CustomerId}/{CartName}/shipments/{ShipmentId}/lineItems/batch':
    post:
      tags:
        - carts
      summary: 'Add or update multiple line items to a specific shipment of a cart - {AddOrUpdateLineItemsInShipmentRequest}'
      description: Add or update multiple line items to a specific shipment of a cart
      operationId: AddOrUpdateLineItemsInShipmentRequestScopeIdCustomerIdCartNameshipmentsShipmentIdlineItemsbatch_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The unique identifier of the Customer owning the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name associated to the requested cart
          type: string
          required: true
        - name: ShipmentId
          in: path
          description: The unique identifier of the shipment where to create line item.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateLineItemsInShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProcessedCart'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProcessedCart'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/scheduled/activities/{Group}/{Name}':
    post:
      tags:
        - tasks
      summary: 'Create a scheduled activity task based on a activity class - {ScheduleTaskActivityRequest}'
      description: Create a scheduled activity task based on a activity class
      operationId: ScheduleTaskActivityRequestscheduledactivitiesGroupName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Group
          in: path
          description: The group affinity of the scheduled job.
          type: string
          required: true
        - name: Name
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ScheduleTaskActivityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/scheduled/workflows/{Group}/{Name}':
    post:
      tags:
        - tasks
      summary: 'Create a scheduled workflow task based on a workflow file - {ScheduleTaskWorkflowRequest}'
      description: Create a scheduled workflow task based on a workflow file
      operationId: ScheduleTaskWorkflowRequestscheduledworkflowsGroupName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Group
          in: path
          description: The group affinity of the scheduled job.
          type: string
          required: true
        - name: Name
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ScheduleTaskWorkflowRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/scheduled/{Group}/{Name}':
    get:
      tags:
        - tasks
      summary: 'Retrieve a specfic scheduled task - {GetScheduledTaskRequest}'
      description: Retrieve a specfic scheduled task
      operationId: GetScheduledTaskRequestscheduledGroupName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Group
          in: path
          description: the affinity group of the scheduled job.
          type: string
          required: true
        - name: Name
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    delete:
      tags:
        - tasks
      summary: 'Remove a specific scheduled task activity - {DeleteScheduledTaskRequest}'
      description: Remove a specific scheduled task activity
      operationId: DeleteScheduledTaskRequestscheduledGroupName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Group
          in: path
          description: the affinity group of the scheduled job.
          type: string
          required: true
        - name: Name
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/tasks/scheduled/{TaskGroup}/{TaskName}/triggers/{TriggerGroup}/{TriggerName}':
    put:
      tags:
        - tasks
      summary: 'Add or update a trigger of a scheduled task - {AddOrUpdateScheduledTaskTrigger}'
      description: Add or update a trigger of a scheduled task
      operationId: AddOrUpdateScheduledTaskTriggerscheduledTaskGroupTaskNametriggersTriggerGroupTriggerName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskGroup
          in: path
          description: the affinity group of the scheduled job.
          type: string
          required: true
        - name: TaskName
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
        - name: TriggerGroup
          in: path
          description: the trigger affinity group.
          type: string
          required: true
        - name: TriggerName
          in: path
          description: the trigger name.
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateScheduledTaskTrigger'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    delete:
      tags:
        - tasks
      summary: 'Remove a given trigger of a scheduled task - {RemoveScheduledTaskTriggerRequest}'
      description: Remove a given trigger of a scheduled task
      operationId: RemoveScheduledTaskTriggerRequestscheduledTaskGroupTaskNametriggersTriggerGroupTriggerName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TaskGroup
          in: path
          description: the affinity group of the scheduled job.
          type: string
          required: true
        - name: TaskName
          in: path
          description: the name of the scheduled job.
          type: string
          required: true
        - name: TriggerGroup
          in: path
          description: the trigger affinity group.
          type: string
          required: true
        - name: TriggerName
          in: path
          description: the trigger name.
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduledTaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /recurringOrders/programs:
    post:
      tags:
        - recurringOrders
      summary: 'Create a new recurring order program - {CreateRecurringOrderProgramRequest}'
      description: Create a new recurring order program
      operationId: CreateRecurringOrderProgramRequestprograms_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateRecurringOrderProgramRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RecurringOrderProgram'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/programs/{RecurringOrderProgramName}':
    get:
      tags:
        - recurringOrders
      summary: 'Get a recurring order program - {GetRecurringOrderProgramRequest}'
      description: Get a recurring order program
      operationId: GetRecurringOrderProgramRequestprogramsRecurringOrderProgramName_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RecurringOrderProgramName
          in: path
          description: The unique identifier of the recurring order program to get
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RecurringOrderProgram'
      deprecated: false
    put:
      tags:
        - recurringOrders
      summary: 'Update a recurring order program - {UpdateRecurringOrderProgramRequest}'
      description: Update a recurring order program
      operationId: UpdateRecurringOrderProgramRequestprogramsRecurringOrderProgramName_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RecurringOrderProgramName
          in: path
          description: The name and unique identifier of the recurring order program
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateRecurringOrderProgramRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RecurringOrderProgram'
      deprecated: false
    delete:
      tags:
        - recurringOrders
      summary: 'Delete a new recurring order program - {DeleteRecurringOrderProgramRequest}'
      description: Delete a new recurring order program
      operationId: DeleteRecurringOrderProgramRequestprogramsRecurringOrderProgramName_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RecurringOrderProgramName
          in: path
          description: The unique identifier of the recurring order program to delete
          type: string
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/programs/byScope/{ScopeId}':
    get:
      tags:
        - recurringOrders
      summary: 'Get the recurring order programs associated to a scope - {GetRecurringOrderProgramsByScopeIdRequest}'
      description: Get the recurring order programs associated to a scope
      operationId: GetRecurringOrderProgramsByScopeIdRequestprogramsbyScopeScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the recurring order programs to get
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfRecurringOrderPrograms'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/{CustomerId}/lineItems':
    delete:
      tags:
        - recurringOrders
      summary: 'Delete a recurring order line item - {DeleteRecurringOrderLineItemsRequest}'
      description: Delete a recurring order line item
      operationId: DeleteRecurringOrderLineItemsRequestScopeIdCustomerIdlineItems_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the RecurringOrderLineItems to delete
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer id of the recurring order line items to delete
          type: string
          required: true
          x-nullable: false
        - name: RecurringOrderLineItemIds
          in: query
          description: The list of recurring order line item ids to delete
          type: array
          items:
            type: string
          collectionFormat: csv
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/lineItems/{RecurringOrderLineItemId}':
    get:
      tags:
        - recurringOrders
      summary: 'Get a recurring order line item - {GetRecurringOrderLineItemRequest}'
      description: Get a recurring order line item
      operationId: GetRecurringOrderLineItemRequestScopeIdlineItemsRecurringOrderLineItemId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the RecurringOrderLineItem to get
          type: string
          required: true
        - name: RecurringOrderLineItemId
          in: path
          description: The recurring order line item id
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RecurringOrderLineItem'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/lineItems/byCustomer/{CustomerId}':
    get:
      tags:
        - recurringOrders
      summary: 'Get the recurring order line items for a customer - {GetRecurringOrderLineItemsForCustomerRequest}'
      description: Get the recurring order line items for a customer
      operationId: GetRecurringOrderLineItemsForCustomerRequestScopeIdlineItemsbyCustomerCustomerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the RecurringOrderLineItems to get
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer id of the RecurringOrderLineItems to get
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfRecurringOrderLineItems'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/lineItems/forCustomer/{CustomerId}':
    put:
      tags:
        - recurringOrders
      summary: 'Add or update a list of recurring order line items - {AddOrUpdateRecurringOrderLineItemsRequest}'
      description: Add or update a list of recurring order line items
      operationId: AddOrUpdateRecurringOrderLineItemsRequestScopeIdlineItemsforCustomerCustomerId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the recurring order line item
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer id of the recurring order line items
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateRecurringOrderLineItemsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfRecurringOrderLineItems'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/carts/{CustomerId}/lineItems':
    delete:
      tags:
        - recurringOrders
      summary: 'Delete line items from a recurring cart - {DeleteRecurringCartLineItemsRequest}'
      description: Delete line items from a recurring cart
      operationId: DeleteRecurringCartLineItemsRequestScopeIdcartsCustomerIdlineItems_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope of the RecurringOrderLineItems to delete
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer id of the recurring order line items
          type: string
          required: true
          x-nullable: false
        - name: LineItemIds
          in: query
          description: The list of line item ids to delete
          type: array
          items:
            type: string
          collectionFormat: csv
          required: true
      responses:
        '204':
          description: No Content
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/recurringOrders/{ScopeId}/cart/{CartName}/reschedule':
    put:
      tags:
        - recurringOrders
      summary: 'Reschedule the recurring order line items present in a recurring cart - {RescheduleRecurringCartRequest}'
      description: Reschedule the recurring order line items present in a recurring cart
      operationId: RescheduleRecurringCartRequestScopeIdcartCartNamereschedule_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope
          type: string
          required: true
        - name: CartName
          in: path
          description: The name of the cart
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/RescheduleRecurringCartRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfRecurringOrderLineItems'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /search/indexes/products:
    put:
      tags:
        - search
      summary: 'Start the products indexing durable tasks - {IndexProductsRequest}'
      description: Start the products indexing durable tasks
      operationId: IndexProductsRequestindexesproducts_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IndexProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /search/indexes/inventories:
    put:
      tags:
        - search
      summary: 'Start the inventories indexing durable task - {IndexInventoriesRequest}'
      description: Start the inventories indexing durable task
      operationId: IndexInventoriesRequestindexesinventories_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IndexInventoriesRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /search/indexes/customers:
    put:
      tags:
        - search
      summary: 'Start the customers indexing durable task - {IndexCustomersRequest}'
      description: Start the customers indexing durable task
      operationId: IndexCustomersRequestindexescustomers_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IndexCustomersRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /search/indexes/stores:
    put:
      tags:
        - search
      summary: 'Start the stores indexing durable task - {IndexStoresRequest}'
      description: Start the stores indexing durable task
      operationId: IndexStoresRequestindexesstores_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IndexStoresRequest'
      responses:
        '200':
          description: Success
          schema:
            title: IEnumerable<TaskInfo>
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/clinic/{ClinicId}':
    get:
      tags:
        - cdmv
      summary: 'Retrieves a clinic''s information using its id - {GetClinicInfoRequest}'
      description: Retrieves a clinic's information using its id
      operationId: GetClinicInfoRequestclinicClinicId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ClinicId
          in: path
          description: The clinic identifier
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ClinicInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ClinicInfo'
        '404':
          description: If the clinic is not found
          schema:
            $ref: '#/definitions/ClinicInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}':
    post:
      tags:
        - cdmv
      summary: 'Creates a customer - {CDMVCreateCustomerRequest}'
      description: Creates a customer
      operationId: CDMVCreateCustomerRequestcustomerScopeId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CDMVCreateCustomerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Customer'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customerskpi/{ScopeId}':
    get:
      tags:
        - cdmv
      summary: 'Get the list of Customer KPI. - {GetCustomersKpiRequest}'
      description: Get the list of Customer KPI.
      operationId: GetCustomersKpiRequestcustomerskpiScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAdminKpiResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetAdminKpiResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/solr/{AuthenticationToken}':
    post:
      tags:
        - cdmv
      summary: 'Receives solr index documents to allow for custom index fields - {DocumentsRequest}'
      description: Receives solr index documents to allow for custom index fields
      operationId: DocumentsRequestsolrAuthenticationToken_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: AuthenticationToken
          in: path
          description: The secret authentication token
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DocumentsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/HttpResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/HttpResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/featureflags/{ScopeId}':
    get:
      tags:
        - cdmv
      summary: 'Retrieves all feature flags that applies to a given scope applying scope inheritance. - {GetFeatureFlagsRequest}'
      description: 'Retrieves all feature flags that applies to a given scope applying scope inheritance. '
      operationId: GetFeatureFlagsRequestfeatureflagsScopeId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFeatureFlagsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetFeatureFlagsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cdmv/orders/updateShipmentTracking:
    post:
      tags:
        - cdmv
      summary: 'Confirm shipments tracking information about an order when it is shipped or about to ship after CDMV shipment manifest - {UpdateShipmentTrackingRequest}'
      description: Confirm shipments tracking information about an order when it is shipped or about to ship after CDMV shipment manifest. This information is update at the Masnifest stage in CDMV Order Express AFTER an initial confirmation via the api /cdmv/orders/confirmshipment.
      operationId: UpdateShipmentTrackingRequestordersupdateShipmentTracking_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateShipmentTrackingRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateShipmentTrackingResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/UpdateShipmentTrackingResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cdmv/orders/confirmshipment:
    post:
      tags:
        - cdmv
      summary: 'Confirm that shipments have been shipped, either fully or partially - {ConfirmShipmentRequest}'
      description: 'Confirm that shipments have been shipped, either fully or partially. Split shipments are not allowed - so any line items that are not included in this request or any partial quantities will be considered as unshipped and will be cancelled. If no line items are provided, then the entire shipment is cancelled'
      operationId: ConfirmShipmentRequestordersconfirmshipment_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ConfirmShipmentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmShipmentResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ConfirmShipmentResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cdmv/orders/invoiceToCDMV:
    post:
      tags:
        - cdmv
      summary: 'Sends to CDMV the invoice for a given order - {InvoiceOrderToCDMVRequest}'
      description: Sends to CDMV the invoice for a given order. A note is added on the order to indicate the invoice was requested.
      operationId: InvoiceOrderToCDMVRequestordersinvoiceToCDMV_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/InvoiceOrderToCDMVRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InvoiceOrderToCDMVResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InvoiceOrderToCDMVResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/self-service-account-creation-request':
    post:
      tags:
        - cdmv
      summary: 'Sends an email to a customer to continue its account creation for a clinic - {CDMVSelfServiceAccountCreationRequest}'
      description: Sends an email to a customer to continue its account creation for a clinic
      operationId: CDMVSelfServiceAccountCreationRequestcustomerScopeIdself-service-account-creation-request_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CDMVSelfServiceAccountCreationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelfServiceAccountCreatedEvent'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SelfServiceAccountCreatedEvent'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cdmv/customer/self-service-account-creation-request/Validate:
    post:
      tags:
        - cdmv
      summary: 'Validate an encrypted Token and return info - {CDMVSelfServiceAccountCreationValidationRequest}'
      description: Validate an encrypted Token and return info
      operationId: CDMVSelfServiceAccountCreationValidationRequestcustomerself-service-account-creation-requestValidate_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CDMVSelfServiceAccountCreationValidationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CDMVSelfServiceAccountValidationResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/CDMVSelfServiceAccountValidationResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{CustomerId}/clinic':
    get:
      tags:
        - cdmv
      summary: 'Returns information about the clinic a customer is associated to. - {GetClinicInfoForCustomerRequest}'
      description: Returns information about the clinic a customer is associated to
      operationId: GetClinicInfoForCustomerRequestcustomerCustomerIdclinic_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: CustomerId
          in: path
          description: The customer's unique identifier
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
        '404':
          description: Customer was not found
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  /cdmv/customer/byUsername/clinic:
    get:
      tags:
        - cdmv
      summary: 'Returns information about the clinic a customer is associated to,using the customer''s username to identify him. - {GetClinicInfoForCustomerByUsernameRequest}'
      description: 'Returns information about the clinic a customer is associated to '
      operationId: GetClinicInfoForCustomerByUsernameRequestcustomerbyUsernameclinic_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Username
          in: query
          description: The customer's username.
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
        '404':
          description: Customer was not found
          schema:
            $ref: '#/definitions/GetClinicInfoForCustomerResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/invite':
    post:
      tags:
        - cdmv
      summary: 'Sends an email invitation to a new customer to create an account for a clinic - {InviteNewCustomerRequest}'
      description: Sends an email invitation to a new customer to create an account for a clinic
      operationId: InviteNewCustomerRequestcustomerScopeIdinvite_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/InviteNewCustomerRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
        '500':
          description: If the invitation could not be sent.
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/b2csiteprofile/{ScopeId}/{CustomerId}':
    get:
      tags:
        - cdmv
      summary: 'Get the B2C site profile of a customer. - {GetB2CSiteProfileRequest}'
      description: 'Get the B2C site profile of a customer. For new customers, a profile always exists, if a customer doesn''t have a profile, it is assumed it has been invited by a clinic admin. '
      operationId: GetB2CSiteProfileRequestb2csiteprofileScopeIdCustomerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetB2CSiteProfileResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetB2CSiteProfileResponse'
        '404':
          description: Customer or B2C site profile was not found
          schema:
            $ref: '#/definitions/GetB2CSiteProfileResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/b2csiteprofile/{ScopeId}/pendingaccounts':
    get:
      tags:
        - cdmv
      summary: 'Get the list of all B2C accounts waiting for approval. - {GetPendingApprovalAccountsRequest}'
      description: Get the list of all B2C accounts waiting for approval.
      operationId: GetPendingApprovalAccountsRequestb2csiteprofileScopeIdpendingaccounts_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: IncludePendingOrderCount
          in: query
          description: Whether to include the number of pending orders for each customer
          type: boolean
          required: false
          x-nullable: false
        - name: ResultsPerPage
          in: query
          description: The maximum number of results that can be returned at once. Defaults to 50
          type: integer
          format: int32
          required: false
        - name: StartingPage
          in: query
          description: 'If the results are returned on multiple pages, this indicates which page of results to return'
          type: integer
          format: int32
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPendingApprovalAccountsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetPendingApprovalAccountsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/productauthorizations/{ScopeId}/{CustomerId}':
    get:
      tags:
        - cdmv
      summary: 'Retrieves all product authorizations associated to a customer - {GetProductAuthorizationsRequest}'
      description: Retrieves all product authorizations associated to a customer. All DateTimes are in UTC.
      operationId: GetProductAuthorizationsRequestproductauthorizationsScopeIdCustomerId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier
          type: string
          required: true
          x-nullable: false
        - name: IncludeProductDetails
          in: query
          description: Whether to include the details of the products
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name which dictates in which language localized values are returned in
          type: string
          required: false
        - name: PhoneNumber
          in: query
          description: The customer's phone number
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetProductAuthorizationsResponse'
        '404':
          description: Customer was not found
          schema:
            $ref: '#/definitions/GetProductAuthorizationsResponse'
      deprecated: false
    post:
      tags:
        - cdmv
      summary: 'Add a new product authorizations or update if it already exists. - {AddOrUpdateProductAuthorizationsRequest}'
      description: 'Add new or update product authorizations. For new authorizations, if no date is specified, then a default date will be given based on the default expiry configuration. If an authorization already exists, update its expiry date (if there is an expiry date in the request). If an add/update operation fails, no error will surface. The response contains only the what was added or successfully updated. All DateTimes are in UTC.'
      operationId: AddOrUpdateProductAuthorizationsRequestproductauthorizationsScopeIdCustomerId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsResponse'
        '404':
          description: Customer was not found
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsResponse'
      deprecated: false
    delete:
      tags:
        - cdmv
      summary: 'Remove product authorizations - {RemoveProductAuthorizationsRequest}'
      description: 'Remove product authorizations. If a delete operation fails, it will do so silently.The response contains only the product ids that were removed successfully. All DateTimes are in UTC.'
      operationId: RemoveProductAuthorizationsRequestproductauthorizationsScopeIdCustomerId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer's unique identifier
          type: string
          required: true
          x-nullable: false
        - name: ProductIds
          in: query
          description: List of product ids matching product authorizations to be removed.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RemoveProductAuthorizationsResponse'
        '404':
          description: Customer was not found
          schema:
            $ref: '#/definitions/RemoveProductAuthorizationsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/productauthorizations/{ScopeId}/byUsername':
    get:
      tags:
        - cdmv
      summary: 'Retrieves all product authorizations associated to a customer, identified by its username - {GetProductAuthorizationsByUsernameRequest}'
      description: 'Retrieves all product authorizations associated to a customer, identified by its username. All DateTimes are in UTC.'
      operationId: GetProductAuthorizationsByUsernameRequestproductauthorizationsScopeIdbyUsername_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Username
          in: query
          description: Customer's username
          type: string
          required: false
        - name: IncludeProductDetails
          in: query
          description: Whether to include the details of the products
          type: boolean
          required: false
          x-nullable: false
        - name: IncludeVariants
          in: query
          description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
          type: boolean
          required: false
          x-nullable: false
        - name: CultureName
          in: query
          description: The culture name which dictates in which language localized values are returned in
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetProductAuthorizationsResponse'
      deprecated: false
    post:
      tags:
        - cdmv
      summary: 'Add a new product authorizations or update if it already exists. - {AddOrUpdateProductAuthorizationsByUsernameRequest}'
      description: 'Add new or update product authorizations. For new authorizations, if no date is specified, then a default date will be given based on the default expiry configuration. If an authorization already exists, update its expiry date (if there is an expiry date in the request). If an add/update operation fails, no error will surface. The response contains only the what was added or successfully updated. All DateTimes are in UTC.'
      operationId: AddOrUpdateProductAuthorizationsByUsernameRequestproductauthorizationsScopeIdbyUsername_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsByUsernameRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/AddOrUpdateProductAuthorizationsResponse'
      deprecated: false
    delete:
      tags:
        - cdmv
      summary: 'Remove product authorizations - {RemoveProductAuthorizationsByUsernameRequest}'
      description: 'Remove product authorizations. If a delete operation fails, it will do so silently.The response contains only the product ids that were removed successfully. All DateTimes are in UTC.'
      operationId: RemoveProductAuthorizationsByUsernameRequestproductauthorizationsScopeIdbyUsername_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Username
          in: query
          description: Customer's username.
          type: string
          required: false
        - name: ProductIds
          in: query
          description: List of product ids matching product authorizations to be removed.
          type: array
          items:
            type: string
          collectionFormat: csv
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveProductAuthorizationsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/RemoveProductAuthorizationsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/productauthorization/{ScopeId}/{Id}':
    put:
      tags:
        - cdmv
      summary: 'Update an existing product authorization based on its Id - {UpdateProductAuthorizationRequest}'
      description: 'Update an existing product authorization based on its Id, and returns its updated values. All DateTimes are in UTC.'
      operationId: UpdateProductAuthorizationRequestproductauthorizationScopeIdId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: 'The id of the product authorization to update (currently, this is the custom profile id of the product authorization)'
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateProductAuthorizationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductAuthorization'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/ProductAuthorization'
        '404':
          description: If the product authorization was not found using the provided id
          schema:
            $ref: '#/definitions/ProductAuthorization'
        '500':
          description: If the update failed
          schema:
            $ref: '#/definitions/ProductAuthorization'
      deprecated: false
    delete:
      tags:
        - cdmv
      summary: 'Delete an existing product authorization based on its Id - {DeleteProductAuthorizationRequest}'
      description: Delete an existing product authorization based on its Id.
      operationId: DeleteProductAuthorizationRequestproductauthorizationScopeIdId_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: 'The id of the product authorization to delete (currently, this is the custom profile id of the product authorization)'
          type: string
          required: true
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProductAuthorizationResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/DeleteProductAuthorizationResponse'
        '404':
          description: If the product authorization was not found using the provided id
          schema:
            $ref: '#/definitions/DeleteProductAuthorizationResponse'
        '500':
          description: If the delete failed
          schema:
            $ref: '#/definitions/DeleteProductAuthorizationResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/stores/{ScopeId}/find':
    post:
      tags:
        - cdmv
      summary: 'Search for Stores based on search terms - {FindStoresRequest}'
      description: 'This request is identical to the out of the box feature from OCC but will fetch the store display name as part of it''s default behavior to work around an OCC missing limitation.Its signature is the same to minimize re-work should the OCC platform implement it in the future. '
      operationId: FindStoresRequeststoresScopeIdfind_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindStoresRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindStoresQueryResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindStoresQueryResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/wallet':
    get:
      tags:
        - cdmv
      summary: 'Gets a customer wallet - {GetCustomerWalletRequest}'
      description: Gets a customer wallet
      operationId: GetCustomerWalletRequestcustomerScopeIdwallet_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: query
          description: Customer Id
          type: string
          required: false
          x-nullable: false
        - name: PaymentProviderName
          in: query
          description: Payment provider name
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCustomerWalletResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetCustomerWalletResponse'
      deprecated: false
    delete:
      tags:
        - cdmv
      summary: 'Deletes a payment method from the customer wallet - {DeletePaymentMethodRequest}'
      description: Deletes a payment method from the customer wallet
      operationId: DeletePaymentMethodRequestcustomerScopeIdwallet_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: query
          description: Customer Id
          type: string
          required: false
          x-nullable: false
        - name: PaymentMethodId
          in: query
          description: Payment method Id
          type: string
          required: false
          x-nullable: false
        - name: PaymentProviderName
          in: query
          description: Payment provider name
          type: string
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePaymentMethodResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/DeletePaymentMethodResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/b2csiteprofile/{ScopeId}/pendingaccounts/{Id}':
    put:
      tags:
        - cdmv
      summary: 'Update a B2C site profile to complete the customer account approval. - {UpdatePendingApprovalAccountRequest}'
      description: The ID is the guid of the B2C site profile.
      operationId: UpdatePendingApprovalAccountRequestb2csiteprofileScopeIdpendingaccountsId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: Id
          in: path
          description: The ID of the B2C site profile to update
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdatePendingApprovalAccountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePendingApprovalAccountResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/UpdatePendingApprovalAccountResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/dataexchange/products/{ClinicCode}/import':
    post:
      tags:
        - cdmv
      summary: 'Import Metadatas, Products, Prices, Categories and RelationShips using a clinic code - {ClinicProductInformationImportRequest}'
      description: 'Import Metadatas, Products, Prices, Categories and RelationShips using a clinic code'
      operationId: ClinicProductInformationImportRequestdataexchangeproductsClinicCodeimport_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ClinicCode
          in: path
          description: The code of the clinic this import is for
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ClinicProductInformationImportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/TaskInfo'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/{OrganizationId}/invite':
    post:
      tags:
        - cdmv
      summary: 'Sends an email invitation to a new customer to create an account associated with and organization - {InviteNewOrganizationalCustomerRequest}'
      description: Sends an email invitation to a new customer to create an account associated with and organization
      operationId: InviteNewOrganizationalCustomerRequestcustomerScopeIdOrganizationIdinvite_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: OrganizationId
          in: path
          description: The organizations unique identifier.
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/InviteNewOrganizationalCustomerRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
        '500':
          description: If the invitation could not be sent.
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/productauthorizations/{ScopeId}/find/byStatus':
    post:
      tags:
        - cdmv
      summary: 'Retrieves all product authorizations by status for a given scope - {FindProductAuthorizationsByStatusRequest}'
      description: Retrieves all product authorizations by status for a given scope. All DateTimes are in UTC.
      operationId: FindProductAuthorizationsByStatusRequestproductauthorizationsScopeIdfindbyStatus_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/FindProductAuthorizationsByStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FindProductAuthorizationsByStatusResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/FindProductAuthorizationsByStatusResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/products/{ScopeId}/{ProductId}/deactivate':
    put:
      tags:
        - cdmv
      summary: 'Dectivate a product in the provided dependant scope - {DeactivateProductRequest}'
      description: 'Deactivate a product in the provided dependant scope. '
      operationId: DeactivateProductRequestproductsScopeIdProductIddeactivate_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The unique product Id
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/DeactivateProductRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: This operation is not allowed.See logs for additional details.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/products/{ScopeId}/{ProductId}/removeActivationOverride':
    delete:
      tags:
        - cdmv
      summary: 'Removed activation overrride in the provided dependant scope - {RemoveActivationOverrideRequest}'
      description: Removed activation overrride the provided dependant scope. If the product was disabled this restores the inheritance from the sales scope activation.
      operationId: RemoveActivationOverrideRequestproductsScopeIdProductIdremoveActivationOverride_Delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: ProductId
          in: path
          description: The unique product Id
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: This operation is not allowed.See logs for additional details.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/wallet/{PaymentMethodId}':
    put:
      tags:
        - cdmv
      summary: 'Updates a credit card in the customer wallet - {UpdateWalletCreditCardRequest}'
      description: 'Updates a credit card in the customer wallet, dates in the past are accepted for non-prod environments'
      operationId: UpdateWalletCreditCardRequestcustomerScopeIdwalletPaymentMethodId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PaymentMethodId
          in: path
          description: Payment method Id
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateWalletCreditCardRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWalletCreditCardResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/UpdateWalletCreditCardResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/monerisCanadaVaultProfile/{ScopeId}/{CustomerId}/addpaymentmethod':
    post:
      tags:
        - cdmv
      summary: 'Adds a new payment method for a customer - {AddMonerisPaymentMethodRequest}'
      description: Adds a new payment method for a customer
      operationId: AddMonerisPaymentMethodRequestmonerisCanadaVaultProfileScopeIdCustomerIdaddpaymentmethod_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: Customer Id
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AddMonerisPaymentMethodRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddMonerisPaymentMethodResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/AddMonerisPaymentMethodResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/notifications/{ScopeId}/customerCreated':
    post:
      tags:
        - notifications
      summary: 'Sends a notification to a customer using the CustomerCreated template - {CustomerCreatedNotificationRequest}'
      description: Sends a notification to a customer using the CustomerCreated template
      operationId: CustomerCreatedNotificationRequestScopeIdcustomerCreated_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CustomerCreatedNotificationRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/notifications/{ScopeId}/customerPasswordResetRequested':
    post:
      tags:
        - notifications
      summary: 'Sends a notification to a customer using the CustomerPasswordResetRequested template - {CustomerPasswordResetNotificationRequest}'
      description: Sends a notification to a customer using the CustomerPasswordResetRequested template
      operationId: CustomerPasswordResetNotificationRequestScopeIdcustomerPasswordResetRequested_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CustomerPasswordResetNotificationRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/notifications/{ScopeId}/customerPasswordChanged':
    post:
      tags:
        - notifications
      summary: 'Sends a notification to a customer using the CustomerPasswordChanged template - {CustomerPasswordChangedNotificationRequest}'
      description: Sends a notification to a customer using the CustomerPasswordChanged template
      operationId: CustomerPasswordChangedNotificationRequestScopeIdcustomerPasswordChanged_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CustomerPasswordChangedNotificationRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/notifications/{ScopeId}/customerInvitation':
    post:
      tags:
        - notifications
      summary: 'Sends a notification to an Eboutique customer using the CustomerInvitation template - {CustomerInvitationNotificationRequest}'
      description: Sends a notification to an Eboutique customer using the CustomerInvitation template. Please specifiy a dependant scope.
      operationId: CustomerInvitationNotificationRequestScopeIdcustomerInvitation_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CustomerInvitationNotificationRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: You must be authenticated to use this request
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/reports/products/{ScopeId}/{CultureName}/deactivated':
    get:
      tags:
        - cdmv
      summary: 'Return CSV report for inactive products of each scope - {InactiveProductsReportRequest}'
      description: 'Return CSV report for inactive products. '
      operationId: InactiveProductsReportRequestreportsproductsScopeIdCultureNamedeactivated_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture name which dictates in which language localized values are returned in
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: This operation is not allowed.See logs for additional details.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/customer/{ScopeId}/wallet/default/{PaymentMethodId}':
    put:
      tags:
        - cdmv
      summary: 'Updates the default credit card in the customer wallet - {UpdateWalletDefaultCreditCardRequest}'
      description: Updates the default credit card in the customer wallet
      operationId: UpdateWalletDefaultCreditCardRequestcustomerScopeIdwalletdefaultPaymentMethodId_Create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PaymentMethodId
          in: path
          description: Payment method Id
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateWalletDefaultCreditCardRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWalletDefaultCreditCardResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/UpdateWalletDefaultCreditCardResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/cdmv/payment/{ScopeId}/moneris/{PaymentProviderName}/captureSettings':
    get:
      tags:
        - cdmv
      summary: 'Gets the payment capture settings for Moneris - {GetMonerisCaptureSettingsRequest}'
      description: Gets the payment capture settings for Moneris
      operationId: GetMonerisCaptureSettingsRequestpaymentScopeIdmonerisPaymentProviderNamecaptureSettings_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: PaymentProviderName
          in: path
          description: Payment provider name
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMonerisCaptureSettingsResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/GetMonerisCaptureSettingsResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/inventoryQuantities/{ScopeId}/byLocation/{InventoryLocationId}':
    get:
      tags:
        - inventoryQuantities
      summary: 'Retrieve inventory quantities for the specified inventory location id - {GetInventoryQuantitiesByLocationRequest}'
      description: Retrieve inventory quantities for the specified inventory location id
      operationId: GetInventoryQuantitiesByLocationRequestScopeIdbyLocationInventoryLocationId_Get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: InventoryLocationId
          in: path
          description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
          type: string
          required: true
        - name: Skip
          in: query
          description: The number of results to skip
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: Take
          in: query
          description: The number of results to return
          type: integer
          format: int32
          required: false
          x-nullable: false
        - name: ExcludeItemsWithQuantityEqualToZero
          in: query
          description: Wheather or not inventory items having a quantity equal to zero should be excluded from the result
          type: boolean
          required: false
          x-nullable: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryQuantityResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/InventoryQuantityResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/monerisCanadaVaultProfile/orderdraft/{ScopeId}/{DraftId}/payments/{PaymentId}':
    post:
      tags:
        - monerisCanadaVaultProfile
      summary: 'Create a vault profile for a draft order - {CreateOrderDraftPaymentVaultProfileRequest}'
      description: Create a vault profile for a draft order
      operationId: CreateOrderDraftPaymentVaultProfileRequestorderdraftScopeIdDraftIdpaymentsPaymentId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: DraftId
          in: path
          description: The id of the draft order
          type: string
          required: true
          x-nullable: false
        - name: PaymentId
          in: path
          description: The id of the payment associated with the draft order
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrderDraftPaymentVaultProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VaultProfileCreationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/VaultProfileCreationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/monerisCanadaVaultProfile/carts/{ScopeId}/{CustomerId}/{CartName}/payments/{PaymentId}':
    post:
      tags:
        - monerisCanadaVaultProfile
      summary: 'Create a vault profile for a cart payment - {CreateCartPaymentVaultProfileRequest}'
      description: Create a vault profile for a cart payment
      operationId: CreateCartPaymentVaultProfileRequestcartsScopeIdCustomerIdCartNamepaymentsPaymentId_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The id of the requested scope
          type: string
          required: true
        - name: CustomerId
          in: path
          description: The customer identifier associated with the cart
          type: string
          required: true
          x-nullable: false
        - name: CartName
          in: path
          description: The name of the cart associated with the payment
          type: string
          required: true
        - name: PaymentId
          in: path
          description: The id of the payment associated with the draft order
          type: string
          required: true
          x-nullable: false
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateCartPaymentVaultProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VaultProfileCreationResult'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/VaultProfileCreationResult'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
  '/search/{ScopeId}/{CultureName}/availableProducts/byCategory/{CategoryName}':
    post:
      tags:
        - search
      summary: 'Search for products available in the inventory using an optional search query - {SearchAvailableProductsByCategoryRequest}'
      description: Execute a generic search against the search engine provider.
      operationId: SearchAvailableProductsByCategoryRequestScopeIdCultureNameavailableProductsbyCategoryCategoryName_Post
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ScopeId
          in: path
          description: The scope to use to process the request
          type: string
          required: true
        - name: CultureName
          in: path
          description: The culture (language) to use to process the request (en-US)
          type: string
          required: true
        - name: CategoryName
          in: path
          description: The name of the category
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SearchAvailableProductsByCategoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchAvailableProductsByCategoryResponse'
        '401':
          description: You must be authenticated to use this request
          schema:
            $ref: '#/definitions/SearchAvailableProductsByCategoryResponse'
        '404':
          description: Requested available products not found
          schema:
            $ref: '#/definitions/SearchAvailableProductsByCategoryResponse'
      deprecated: false
    parameters:
      - $ref: '#/parameters/Accept'
definitions:
  Object:
    properties: {}
    description: Object
    type: object
  GetOvertureHostInfoRequest:
    title: GetOvertureHostInfoRequest
    properties: {}
    description: System Health Service
    type: object
  GetAuthorizedApplicationsRequest:
    title: GetAuthorizedApplicationsRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  GetUserApplicationRequest:
    title: GetUserApplicationRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  GetUserCultureRequest:
    title: GetUserCultureRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  GetAllApplicationsRequest:
    title: GetAllApplicationsRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  SaveUserApplicationRequest:
    title: SaveUserApplicationRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  SaveUserCultureRequest:
    title: SaveUserCultureRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  GetUserScopeRequest:
    title: GetUserScopeRequest
    properties:
      module:
        description: The module for which the scope will be define as default
        type: string
        enum:
          - Product
          - Customer
          - Order
          - Marketing
          - Reports
          - Administration
          - UserManagement
          - PriceManagement
    description: Application are blocks of logical business features.
    type: object
  GetModulesRequest:
    title: GetModulesRequest
    properties: {}
    description: Modules are blocks of logical business features.
    type: object
  SetApplicationVisibilityRequest:
    title: SetApplicationVisibilityRequest
    properties:
      isVisible:
        description: Whether the application is visible or not.
        type: boolean
        x-nullable: false
    description: Application are blocks of logical business features.
    type: object
  SignInRequest:
    title: SignInRequest
    properties:
      returnUrl:
        description: the return URL.
        type: string
    description: Performs authentication operations.
    type: object
  SignOutRequest:
    title: SignOutRequest
    properties:
      returnUrl:
        description: The return URL that should be specified to which the user should be redirected after signout.
        type: string
    description: Performs authentication operations.
    type: object
  FederationSignoutReplyRequest:
    title: FederationSignoutReplyRequest
    properties:
      returnUrl:
        description: the return URL.
        type: string
    description: Performs authentication operations.
    type: object
  GetAuthenticationStatusRequest:
    title: GetAuthenticationStatusRequest
    properties: {}
    description: Performs authentication operations.
    type: object
  GetUserPermissionsRequest:
    title: GetUserPermissionsRequest
    properties: {}
    description: Performs authentication operations.
    type: object
  SignInWithIssuedTokenRequest:
    title: SignInWithIssuedTokenRequest
    properties:
      xmlToken:
        description: The token.
        type: string
    description: Performs authentication operations.
    type: object
  SignInWithCredentialsRequest:
    title: SignInWithCredentialsRequest
    properties:
      applicationIdentifier:
        description: The application Identifier.
        type: string
      password:
        description: The password.
        type: string
      userName:
        description: The userName.
        type: string
    description: Performs authentication operations.
    type: object
  GetAuthenticationConfiguration:
    title: GetAuthenticationConfiguration
    properties: {}
    description: Performs authentication operations.
    type: object
  SignInWithJWTRequest:
    title: SignInWithJWTRequest
    properties:
      accessToken:
        description: The JWT access token.
        type: string
    description: Performs authentication operations.
    type: object
  CustomerSignInRequest:
    title: CustomerSignInRequest
    properties:
      password:
        description: The password of the user.
        type: string
      userName:
        description: The username of the user.
        type: string
    description: Performs authentication operations.
    type: object
  GetCacheStatusRequest:
    title: GetCacheStatusRequest
    properties:
      name:
        description: Optional. Name of the cache to retrieve. If none specified return status for all caches
        type: string
    description: Diagnostics.
    type: object
  BasicDiagnosticRequest:
    title: BasicDiagnosticRequest
    properties: {}
    description: Diagnostics.
    type: object
  GetVersionInfoRequest:
    title: GetVersionInfoRequest
    properties:
      cultureName:
        description: The culture name in which language the url will be returned
        type: string
    description: Diagnostics.
    type: object
  CreateGroupRequest:
    title: CreateGroupRequest
    properties:
      description:
        description: the description.
        type: string
      mailNickName:
        description: the name of the mail nick.
        type: string
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  DeleteGroupRequest:
    title: DeleteGroupRequest
    required:
      - groupId
    properties:
      groupId:
        description: The group identifier.
        type: string
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  FindGroupsRequest:
    title: FindGroupsRequest
    properties:
      name:
        description: The part of the name to be found.
        type: string
      orderBy:
        description: 'The ''order by attribute'' use to sort groups. By default, the users will be order by DisplayName.'
        type: string
        enum:
          - DisplayName
          - ObjectID
      pageIndex:
        description: The index of the result page
        type: integer
        format: int32
      pageSize:
        description: The number results to return. Used for paging.
        type: integer
        format: int32
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  GetGroupRequest:
    title: GetGroupRequest
    properties:
      groupId:
        description: The group identifier.
        type: string
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  SaveGroupRequest:
    title: SaveGroupRequest
    properties:
      description:
        description: the description.
        type: string
      displayName:
        description: the display name of the group.
        type: string
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  GetGroupMembersWithPagingRequest:
    title: GetGroupMembersWithPagingRequest
    properties:
      groupId:
        description: The group identifier.
        type: string
      maximumItems:
        description: The maximum of items to be returned.
        type: integer
        format: int32
        x-nullable: false
      startingIndex:
        description: The starting index.
        type: integer
        format: int32
        x-nullable: false
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  AddUserToGroupRequest:
    title: AddUserToGroupRequest
    properties: {}
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  RemoveUserFromGroupRequest:
    title: RemoveUserFromGroupRequest
    required:
      - groupId
      - userName
    properties:
      groupId:
        description: The group identifier.
        type: string
      userName:
        description: The username.
        type: string
    description: Groups are entities wrapping identities objects (users or groups).
    type: object
  GetRoleByIdRequest:
    title: GetRoleByIdRequest
    properties:
      id:
        description: The role identifier.
        type: integer
        format: int32
        x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  CreateRoleRequest:
    title: CreateRoleRequest
    properties:
      moduleId:
        description: the module identifier.
        type: integer
        format: int32
        x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  DeleteRoleRequest:
    title: DeleteRoleRequest
    properties:
      id:
        description: the role identifier.
        type: integer
        format: int32
        x-nullable: false
      moduleId:
        description: the module identifier.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: the name.
        type: string
    description: Roles represents what a person/group is.
    type: object
  GetCustomRolesRequest:
    title: GetCustomRolesRequest
    properties:
      cultureCode:
        description: 'The CultureCode is use when you sort by DisplayName. By default, the culture ''en_US'' will be use. If you don''t sort by display name, this parameter is not mandatory.'
        type: string
      orderBy:
        description: 'The ''order by attribute'' use to sort custom roles return. By default, the custom roles will be order by DisplayName.'
        type: string
        enum:
          - DisplayName
          - Status
    description: Roles represents what a person/group is.
    type: object
  UpdateRoleRequest:
    title: UpdateRoleRequest
    properties:
      moduleId:
        description: the module identifier.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: the name of this role.
        type: string
    description: Roles represents what a person/group is.
    type: object
  GetRoleRequest:
    title: GetRoleRequest
    properties:
      moduleId:
        description: The module identifier.
        type: integer
        format: int32
        x-nullable: false
      roleName:
        description: The role name.
        type: string
    description: Roles represents what a person/group is.
    type: object
  CreateCustomRoleRequest:
    title: CreateCustomRoleRequest
    properties: {}
    description: Roles represents what a person/group is.
    type: object
  AddRoleChildRequest:
    title: AddRoleChildRequest
    properties:
      applicationName:
        description: the application name.
        type: string
    description: Roles represents what a person/group is.
    type: object
  AddRoleChildrenRequest:
    title: AddRoleChildrenRequest
    properties:
      applicationName:
        description: the application name.
        type: string
      childRoleIds:
        description: the list of child role identifier.
        type: array
        items:
          type: integer
          format: int32
          x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  RemoveRoleChildRequest:
    title: RemoveRoleChildRequest
    properties:
      applicationName:
        description: the application name.
        type: string
      childRoleId:
        description: the child role identifier.
        type: integer
        format: int32
        x-nullable: false
      parentRoleId:
        description: the parent role identifier.
        type: integer
        format: int32
        x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  RemoveRoleChildrenRequest:
    title: RemoveRoleChildrenRequest
    properties:
      applicationName:
        description: the application name.
        type: string
      childRoleIds:
        description: the list of child role identifier.
        type: array
        items:
          type: integer
          format: int32
          x-nullable: false
      parentRoleId:
        description: the parent role identifier.
        type: integer
        format: int32
        x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  SaveCustomRoleRequest:
    title: SaveCustomRoleRequest
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: the description.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the role.
      isActive:
        description: whether role is active.
        type: boolean
        x-nullable: false
      name:
        description: the name of the role.
        type: string
    description: Roles represents what a person/group is.
    type: object
  LocalizedString:
    additionalProperties:
      type: string
    type: object
  IEqualityComparer_String_:
    title: IEqualityComparer`1
    properties: {}
    description: IEqualityComparer<String>
    type: object
  KeyCollection_String_String_:
    title: KeyCollection
    properties: {}
    description: 'KeyCollection<String,String>'
    type: object
  ValueCollection_String_String_:
    title: ValueCollection
    properties: {}
    description: 'ValueCollection<String,String>'
    type: object
  RoleIsHierarchicalChildOfParentRolesRequest:
    title: RoleIsHierarchicalChildOfParentRolesRequest
    properties:
      parentRoleIds:
        description: The list of parent role identifier.
        type: array
        items:
          type: integer
          format: int32
          x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  AddRoleChildToGlobalAdministratorRoleRequest:
    title: AddRoleChildToGlobalAdministratorRoleRequest
    properties:
      applicationName:
        description: the application name.
        type: string
    description: Roles represents what a person/group is.
    type: object
  GetEffectiveAuthorizationsRequest:
    title: GetEffectiveAuthorizationsRequest
    properties:
      objectsIds:
        description: The objects identifiers.
        type: array
        items:
          type: string
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GrantAuthorizationsRequest:
    title: GrantAuthorizationsRequest
    properties:
      authorizationsToGrant:
        description: The list of authorization to grant.
        type: array
        items:
          $ref: '#/definitions/GrantedAuthorization'
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GrantedAuthorization:
    title: GrantedAuthorization
    properties:
      objectType:
        description: The object Type
        type: string
      requestedScopeId:
        description: The Scope Id
        type: string
      roleId:
        description: The Role Id
        type: integer
        format: int32
        x-nullable: false
    description: GrantedAuthorization
    type: object
  RevokeAuthorizationsRequest:
    title: RevokeAuthorizationsRequest
    properties:
      authorizationsToRevoke:
        description: The list of authorization to revoke.
        type: array
        items:
          $ref: '#/definitions/GrantedAuthorization'
      objectId:
        description: The object identifier.
        type: string
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GetMembershipSettingsRequest:
    title: GetMembershipSettingsRequest
    properties: {}
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GetDirectAuthorizationsRequest:
    title: GetDirectAuthorizationsRequest
    properties: {}
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GrantAuthorizationRequest:
    title: GrantAuthorizationRequest
    properties:
      objectType:
        description: The object type.
        type: string
      requestedScopeId:
        description: The scope identifier.
        type: string
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  RevokeAuthorizationRequest:
    title: RevokeAuthorizationRequest
    properties:
      objectId:
        description: The Object identifier.
        type: string
      objectType:
        description: The object type.
        type: string
      requestedScopeId:
        description: The Scope identifier.
        type: string
      roleId:
        description: The Role identifier.
        type: integer
        format: int32
        x-nullable: false
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GetUserEffectiveAuthorizationsRequest:
    title: GetUserEffectiveAuthorizationsRequest
    properties:
      userName:
        description: The username of the user.
        type: string
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
    type: object
  GetApplicationModules:
    title: GetApplicationModules
    properties:
      applicationName:
        description: The application name.
        type: string
    description: Modules are blocks of logical business features.
    type: object
  GetRolesRequest:
    title: GetRolesRequest
    properties: {}
    description: Roles represents what a person/group is.
    type: object
  GetParentRolesRequest:
    title: GetParentRolesRequest
    properties:
      roleId:
        description: The child role identifier.
        type: integer
        format: int32
        x-nullable: false
    description: Roles represents what a person/group is.
    type: object
  GetPaymentProvidersRequest:
    title: GetPaymentProvidersRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  GetFulfillmentProvidersMetadataRequest:
    title: GetFulfillmentProvidersMetadataRequest
    properties: {}
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  GetFulfillmentProvidersRequest:
    title: GetFulfillmentProvidersRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeParentScopes:
        description: Determines whether parent scopes are included.
        type: boolean
        x-nullable: false
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  GetCarrierProvidersRequest:
    title: GetCarrierProvidersRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeParentScopes:
        description: Determines whether parent scopes are included.
        type: boolean
        x-nullable: false
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  GetProvidersRequest:
    title: GetProvidersRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeParentScopes:
        description: Determine if parent scopes are considered when retrieving providers.
        type: boolean
        x-nullable: false
      providerType:
        description: 'Type of this provider: [''Undefined'' or ''StoreLocator'' or ''Geolocation'' or ''PrintOrder'' or ''PrintShipment'' or ''OrderProcessing'' or ''Shipping'' or ''Payment'' or ''Tax'' or ''Rounding'' or ''TargetingContext'' or ''OrderNumberGenerator'' or ''RmaNumberGenerator'' or ''DigitalAssetManagement'' or ''DirectoryProvider'' or ''MembershipProvider'' or ''Inventory'' or ''Audit'' or ''SlotInstance'' or ''PriceCalculator'' or ''SearchPriceCalculator'' or ''Search'' or ''BlobStorage'' or ''ShipmentProcessingDate'' or ''ProductImportParser'' or ''DataExchange'' or ''ProductDataExchangeImport'' or ''ProductDataExchangeExport'' or ''ProductPriceDataExchangeImport'' or ''ProductPriceDataExchangeExport'' or ''MailProvider'' or ''NotificationProvider'' or ''OrderImportParser'' or ''PromotionLineItemValidator'' or ''PickingMissionNumberGenerator'' or ''FulfillmentCarrier'' or ''FulfillmentRouting'']  // Note: ''Undefined'' retrieves all providers.'
        type: string
        enum:
          - Undefined
          - StoreLocator
          - Geolocation
          - PrintOrder
          - PrintShipment
          - OrderProcessing
          - Shipping
          - Payment
          - Tax
          - Rounding
          - TargetingContext
          - OrderNumberGenerator
          - RmaNumberGenerator
          - DigitalAssetManagement
          - DirectoryProvider
          - MembershipProvider
          - Inventory
          - Audit
          - SlotInstance
          - PriceCalculator
          - SearchPriceCalculator
          - Search
          - BlobStorage
          - ShipmentProcessingDate
          - ProductImportParser
          - DataExchange
          - ProductDataExchangeImport
          - ProductDataExchangeExport
          - ProductPriceDataExchangeImport
          - ProductPriceDataExchangeExport
          - MailProvider
          - NotificationProvider
          - OrderImportParser
          - PromotionLineItemValidator
          - PickingMissionNumberGenerator
          - FulfillmentCarrier
          - FulfillmentRouting
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  CreateOrUpdateFulfillmentProviderRequest:
    title: CreateOrUpdateFulfillmentProviderRequest
    required:
      - implementationTypeName
      - isActive
      - name
      - taxCategoryId
    properties:
      description:
        description: The description of the fulfillment provider.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the fulfillment provider.
      id:
        description: the unique identifier for the EntityTypeDefinition (generated if not specified)
        type: string
        x-nullable: false
      implementationTypeName:
        description: The implementation type name of the fulfillment provider.
        type: string
      isActive:
        description: A value indicating whether or not the fulfillment provider is active.
        type: boolean
        x-nullable: false
      name:
        description: The name of the fulfillment provider.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The custom properties of the fulfillment provider.
      taxCategoryId:
        description: The tax category identifier of the fulfillment provider.
        type: string
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  PropertyBag:
    additionalProperties:
      type: object
    type: object
  KeyCollection_String_Object_:
    title: KeyCollection
    properties: {}
    description: 'KeyCollection<String,Object>'
    type: object
  ValueCollection_String_Object_:
    title: ValueCollection
    properties: {}
    description: 'ValueCollection<String,Object>'
    type: object
  DeleteFulfillmentProviderRequest:
    title: DeleteFulfillmentProviderRequest
    required:
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      id:
        description: the unique identifier for the EntityTypeDefinition
        type: string
        x-nullable: false
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  ValidateProviderSettingsRequest:
    title: ValidateProviderSettingsRequest
    properties:
      providerId:
        description: the unique identifier of the provider to validate.
        type: string
        x-nullable: false
      providerType:
        description: the type of the provider to validate.
        type: string
        enum:
          - Undefined
          - StoreLocator
          - Geolocation
          - PrintOrder
          - PrintShipment
          - OrderProcessing
          - Shipping
          - Payment
          - Tax
          - Rounding
          - TargetingContext
          - OrderNumberGenerator
          - RmaNumberGenerator
          - DigitalAssetManagement
          - DirectoryProvider
          - MembershipProvider
          - Inventory
          - Audit
          - SlotInstance
          - PriceCalculator
          - SearchPriceCalculator
          - Search
          - BlobStorage
          - ShipmentProcessingDate
          - ProductImportParser
          - DataExchange
          - ProductDataExchangeImport
          - ProductDataExchangeExport
          - ProductPriceDataExchangeImport
          - ProductPriceDataExchangeExport
          - MailProvider
          - NotificationProvider
          - OrderImportParser
          - PromotionLineItemValidator
          - PickingMissionNumberGenerator
          - FulfillmentCarrier
          - FulfillmentRouting
    description: Providers are generic entities containing configuration settings for various need.
    type: object
  GetSsrsReportsRequest:
    title: GetSsrsReportsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Reporting API.
    type: object
  GetSsrsReportParametersRequest:
    title: GetSsrsReportParametersRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      reportParameters:
        description: The selected values for the parameters.
        type: array
        items:
          $ref: '#/definitions/ReportParameterValue'
    description: Reporting API.
    type: object
  ReportParameterValue:
    title: ReportParameterValue
    properties:
      displayValue:
        description: value of the parameter that will be used in the logs
        type: string
      name:
        description: internal name of the parameter
        type: string
      parameterType:
        description: the type of this parameter
        type: string
        enum:
          - String
          - DateTime
          - Boolean
          - Integer
          - Float
          - List
          - ListTypeahead
          - Scope
      value:
        description: value of the parameter
        type: string
    description: ReportParameterValue
    type: object
  CreateSsrsReportPreviewRequest:
    title: CreateSsrsReportPreviewRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      reportParameters:
        description: The selected values for the parameters.
        type: array
        items:
          $ref: '#/definitions/ReportParameterValue'
    description: Reporting API.
    type: object
  ExportSsrsReportRequest:
    title: ExportSsrsReportRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      exportType:
        description: The export type (format) to be used.
        type: string
        enum:
          - Excel
          - Csv
          - Xml
          - Html
          - Image
          - Word
          - Pdf
      reportName:
        description: The name of the report to be used as name for the background task.
        type: string
      reportParameters:
        description: The selected values for the parameters.
        type: array
        items:
          $ref: '#/definitions/ReportParameterValue'
    description: Reporting API.
    type: object
  GetSsrsRenderingFormatsRequest:
    title: GetSsrsRenderingFormatsRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Reporting API.
    type: object
  GetSearchQueryByNameRequest:
    title: GetSearchQueryByNameRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: The name of the requested search query
        type: string
      queryType:
        description: The type of the requested search query
        type: string
        enum:
          - Category
          - Merchandising
          - ProductSet
      useScopeStrictMode:
        description: 'Indicates whether the system should use a strict mode (allow only Sales Scope), or should search for a parent Sales Scope'
        type: boolean
        x-nullable: false
    description: The API used to handle saved Search queries.
    type: object
  CreateSearchQueryRequest:
    title: CreateSearchQueryRequest
    properties:
      category:
        description: Category of the search query
        type: string
      queryData:
        description: The data used to build a search request
        type: array
        items:
          $ref: '#/definitions/SearchQueryData'
    description: The API used to handle saved Search queries.
    type: object
  SearchQueryData:
    title: SearchQueryData
    properties:
      cultureName:
        description: Culture Name. Should be * if the QueryData is auto-localizable
        type: string
      facetPredicates:
        description: The facet predicates to include in the Search Query
        type: array
        items:
          $ref: '#/definitions/SavedFacetPredicate'
      elevatedIds:
        description: The elevated ids
        type: array
        items:
          type: string
      productSkus:
        description: The product skus
        type: array
        items:
          type: string
      sortings:
        description: the sorting parameter of the query
        type: array
        items:
          $ref: '#/definitions/SavedQuerySorting'
    description: SearchQueryData
    type: object
  SavedFacetPredicate:
    title: SavedFacetPredicate
    properties:
      facetName:
        description: The name of the facet
        type: string
      valueType:
        description: The type of the value
        type: string
        enum:
          - Lookup
          - Field
          - Range
          - Category
      operatorType:
        description: The type of the operator to use when using many values
        type: string
        enum:
          - Or
          - And
      values:
        description: The values of the facet predicate
        type: array
        items:
          type: string
    description: SavedFacetPredicate
    type: object
  SavedQuerySorting:
    title: SavedQuerySorting
    properties:
      direction:
        description: the sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      propertyName:
        description: the name of the property to be sorted
        type: string
    description: SavedQuerySorting
    type: object
  UpdateSearchQueryRequest:
    title: UpdateSearchQueryRequest
    properties:
      category:
        description: Category of the search query
        type: string
      queryData:
        description: The data used to build a search request
        type: array
        items:
          $ref: '#/definitions/SearchQueryData'
    description: The API used to handle saved Search queries.
    type: object
  DeleteSearchQueryRequest:
    title: DeleteSearchQueryRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: The name of the requested search query
        type: string
      queryType:
        description: The type of the requested search query
        type: string
        enum:
          - Category
          - Merchandising
          - ProductSet
    description: The API used to handle saved Search queries.
    type: object
  FindSearchQueriesRequest:
    title: FindSearchQueriesRequest
    properties:
      includeQueryData:
        description: Indicates if the response should include the query data with the SearchQueries or not
        type: boolean
        x-nullable: false
      queryType:
        description: Query type to filter with
        type: string
    description: The API used to handle saved Search queries.
    type: object
  CreateOrUpdateTemplateVariableRequest:
    title: CreateOrUpdateTemplateVariableRequest
    properties:
      description:
        description: The template variable's description.
        type: string
      value:
        $ref: '#/definitions/LocalizedString'
        description: The template variable's value.
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  DeleteTemplateVariableRequest:
    title: DeleteTemplateVariableRequest
    required:
      - name
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: The name of the template variable to be deleted from the scope.
        type: string
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  GetTemplateByNameRequest:
    title: GetTemplateByNameRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      activeOnly:
        description: Determines whether the result will include inactive templates
        type: boolean
        x-nullable: false
      cultures:
        description: List of cultures for which to retrieve the content
        type: array
        items:
          type: string
      includeContents:
        description: Determines whether the template content will be included with the result
        type: boolean
        x-nullable: false
      name:
        description: Name of the template to retrieve
        type: string
      replaceTemplateVariables:
        description: Determines if the template variable tags will be replaced with their actual values.
        type: boolean
        x-nullable: false
      type:
        description: Type of the template to retrieve
        type: string
        enum:
          - Unknown
          - Email
          - Shipment
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  CreateTemplateRequest:
    title: CreateTemplateRequest
    properties:
      contents:
        description: Template contents
        type: array
        items:
          $ref: '#/definitions/TemplateContent'
      description:
        $ref: '#/definitions/LocalizedString'
        description: Template description
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: Template display name
      isActive:
        description: the current state of the template
        type: boolean
        x-nullable: false
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  TemplateContent:
    title: TemplateContent
    required:
      - id
      - name
      - templateId
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      content:
        $ref: '#/definitions/LocalizedString'
        description: The template content
      name:
        description: The template content name
        type: string
      templateId:
        description: The Id of the Template parent of this TemplateContent
        type: string
    description: TemplateContent
    type: object
  DeleteTemplateRequest:
    title: DeleteTemplateRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: the name of the template
        type: string
      type:
        description: the type of the template
        type: string
        enum:
          - Unknown
          - Email
          - Shipment
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  GetTemplateVariablesRequest:
    title: GetTemplateVariablesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  GetTemplatesRequest:
    title: GetTemplatesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      activeOnly:
        description: Determines whether the result will include inactive templates
        type: boolean
        x-nullable: false
      cultures:
        description: List of cultures for which to retrieve the content
        type: array
        items:
          type: string
      includeContents:
        description: Determines whether the template content will be included with the result
        type: boolean
        x-nullable: false
      replaceTemplateVariables:
        description: Determines if the template variable tags will be replaced with their actual values.
        type: boolean
        x-nullable: false
      type:
        description: Template type to retrieve
        type: string
        enum:
          - Unknown
          - Email
          - Shipment
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  CreateUserRequest:
    title: CreateUserRequest
    properties:
      address:
        description: the address.
        type: string
      city:
        description: the city.
        type: string
      country:
        description: the country.
        type: string
      department:
        description: the department.
        type: string
      displayName:
        description: the display name.
        type: string
      enabled:
        description: a value indicating whether user is enabled.
        type: boolean
        x-nullable: false
      firstName:
        description: the first name.
        type: string
      jobTitle:
        description: the job title.
        type: string
      lastName:
        description: the last name.
        type: string
      mobile:
        description: the mobile.
        type: string
      passwordProfile:
        $ref: '#/definitions/PasswordProfile'
        description: the password profile.
      phone:
        description: the phone.
        type: string
      postalCode:
        description: the postal code.
        type: string
      preferredLanguage:
        description: the preferred language.
        type: string
      state:
        description: the state.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  PasswordProfile:
    title: PasswordProfile
    properties:
      forceChangePasswordNextLogin:
        description: the password should be changed or not at the next user's login.
        type: boolean
      password:
        description: the password.
        type: string
    description: PasswordProfile
    type: object
  FindUsersByNameRequest:
    title: FindUsersByNameRequest
    properties:
      includeDisabled:
        description: Indicates whether the query should include disabled user
        type: boolean
        x-nullable: false
      maxResults:
        description: The maximum of user results to return.
        type: integer
        format: int32
      name:
        description: The name of the user.
        type: string
      orderBy:
        description: 'The ''order by attribute'' use to sort users. By default, the users will be order by DisplayName.'
        type: string
        enum:
          - DisplayName
          - FirstName
          - LastName
          - UserName
      pageIndex:
        description: The index of the result page
        type: integer
        format: int32
      pageSize:
        description: The number results to return. Used for paging.
        type: integer
        format: int32
      sortDirection:
        description: Indicates how to sort the users
        type: string
        enum:
          - Ascending
          - Descending
    description: Users represents the persons interacting with the system.
    type: object
  GetUserRequest:
    title: GetUserRequest
    required:
      - userName
    properties:
      userName:
        description: The username of user.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  GetAvailableDomainsRequest:
    title: GetAvailableDomainsRequest
    properties: {}
    description: Users represents the persons interacting with the system.
    type: object
  SaveUserRequest:
    title: SaveUserRequest
    properties:
      address:
        description: the address.
        type: string
      city:
        description: the city.
        type: string
      country:
        description: the country.
        type: string
      department:
        description: the department.
        type: string
      displayName:
        description: the display name.
        type: string
      enabled:
        description: a value indicating whether the user is enabled.
        type: boolean
        x-nullable: false
      firstName:
        description: the first name.
        type: string
      jobTitle:
        description: the job title.
        type: string
      lastName:
        description: the last name.
        type: string
      mobile:
        description: the mobile number.
        type: string
      passwordProfile:
        $ref: '#/definitions/PasswordProfile'
        description: the password profile.
      phone:
        description: the phone number.
        type: string
      postalCode:
        description: the postal code.
        type: string
      preferredLanguage:
        description: the preferred language.
        type: string
      state:
        description: the state.
        type: string
      userId:
        description: the user identifier.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  DeleteUserRequest:
    title: DeleteUserRequest
    required:
      - userName
    properties:
      userName:
        description: The username of the user.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  DeactivateUsersRequest:
    title: DeactivateUsersRequest
    required:
      - usersToDeactivate
    properties:
      usersToDeactivate:
        description: The users to deactivate.
        type: array
        items:
          type: string
    description: Users represents the persons interacting with the system.
    type: object
  ActivateUsersRequest:
    title: ActivateUsersRequest
    required:
      - usersToActivate
    properties:
      usersToActivate:
        description: The users to activate.
        type: array
        items:
          type: string
    description: Users represents the persons interacting with the system.
    type: object
  DeactivateUserRequest:
    title: DeactivateUserRequest
    properties: {}
    description: Users represents the persons interacting with the system.
    type: object
  ActivateUserRequest:
    title: ActivateUserRequest
    properties: {}
    description: Users represents the persons interacting with the system.
    type: object
  ResetUserPasswordRequest:
    title: ResetUserPasswordRequest
    properties: {}
    description: Users represents the persons interacting with the system.
    type: object
  ForceChangeUserPasswordRequest:
    title: ForceChangeUserPasswordRequest
    properties:
      cultureName:
        description: The culture name.
        type: string
      password:
        description: The new password.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  GetUserGroupsRequest:
    title: GetUserGroupsRequest
    required:
      - userName
    properties:
      userName:
        description: The username of the user.
        type: string
    description: Users represents the persons interacting with the system.
    type: object
  GetOrderDefinitionRequest:
    title: GetOrderDefinitionRequest
    required:
      - name
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      name:
        description: The id to retrieve related entity definition
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetCustomerDefinitionRequest:
    title: GetCustomerDefinitionRequest
    required:
      - name
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      name:
        description: The id to retrieve related entity definition
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CreateProductDefinitionRequest:
    title: CreateProductDefinitionRequest
    properties:
      allowPriceLists:
        description: Whether the product definition allows setting price lists
        type: boolean
        x-nullable: false
      description:
        description: The description of the product definition
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the product definition
      isDivisible:
        description: Whether the components of this product can be divided
        type: boolean
        x-nullable: false
      numberOfDivision:
        description: A number of divisions the specified component may be split into
        type: integer
        format: int32
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  UpdateProductDefinitionRequest:
    title: UpdateProductDefinitionRequest
    properties:
      attributesToAdd:
        description: The list of attributes to be added to the product definition
        type: array
        items:
          $ref: '#/definitions/ProductDefinitionAttributeToAdd'
      attributesToRemove:
        description: The list of attribute names to be removed from the product definition
        type: array
        items:
          type: string
      description:
        description: The description of the product definition
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the product definition
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  ProductDefinitionAttributeToAdd:
    title: ProductDefinitionAttributeToAdd
    properties:
      attributeName:
        description: The name of the existing attribute to associate to the definition
        type: string
      attributeTarget:
        description: Indicates whether attribute should be applied to product itself and/or its variants.
        type: string
        enum:
          - Product
          - ProductAndVariant
          - VariantKey
      sequenceNumber:
        description: Affects the order in which attributes are shown when editing a product.
        type: integer
        format: int32
        x-nullable: false
      keyVariantOrder:
        description: The order of a key variant attribute.
        type: integer
        format: int32
      isVariantGroup:
        description: Gets or sets a value inticating whether the attribute is used for variant grouping
        type: boolean
        x-nullable: false
    description: ProductDefinitionAttributeToAdd
    type: object
  CreateCategoryDefinitionRequest:
    title: CreateCategoryDefinitionRequest
    properties:
      description:
        description: The description of the category definition
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the category definition
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  UpdateCategoryDefinitionRequest:
    title: UpdateCategoryDefinitionRequest
    properties:
      attributesToAdd:
        description: 'The list of attributes to associate to the definition. If none are specified, the list is unchanged.'
        type: array
        items:
          $ref: '#/definitions/CategoryDefinitionAttributeToAdd'
      attributesToRemove:
        description: The list of the names of the attributes to be removed from the category definition
        type: array
        items:
          type: string
      description:
        description: The description of the category definition
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the category definition
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CategoryDefinitionAttributeToAdd:
    title: CategoryDefinitionAttributeToAdd
    properties:
      attributeName:
        type: string
      sequenceNumber:
        type: integer
        format: int32
        x-nullable: false
    description: CategoryDefinitionAttributeToAdd
    type: object
  GetProductLookupRequest:
    title: GetProductLookupRequest
    properties:
      lookupName:
        description: The id to retrieve related lookup
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetOrderLookupRequest:
    title: GetOrderLookupRequest
    properties:
      lookupName:
        description: The id to retrieve related lookup
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetMarketingLookupRequest:
    title: GetMarketingLookupRequest
    properties:
      lookupName:
        description: The id to retrieve related lookup
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetCustomerLookupRequest:
    title: GetCustomerLookupRequest
    properties:
      lookupName:
        description: The id to retrieve related lookup
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CreateProductLookupTypeDefinitionRequest:
    title: CreateProductLookupTypeDefinitionRequest
    properties:
      description:
        description: The description of this lookup.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name for this lookup.
      values:
        description: The list of values available for this lookup.
        type: array
        items:
          $ref: '#/definitions/LookupValue'
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  LookupValue:
    title: LookupValue
    required:
      - id
    properties:
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name of this lookup value
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      isActive:
        description: If the lookup value is active. Lookup value can not be used after being deactivated but previous references are not deleted.
        type: boolean
        x-nullable: false
      isSystem:
        description: Whether this lookup value is built-in.
        type: boolean
        x-nullable: false
      lookupId:
        description: The name of the lookup for which this value is defined.
        type: string
      sortOrder:
        description: The number used for ordering the LookupValue in a list.An integer that allows the ordering of the values when they are presented in a list. No restriction is given for the number (e.g. it allows two values to have the same value for this property).
        type: integer
        format: int32
        x-nullable: false
      value:
        description: The unique lookup value name.
        type: string
    description: LookupValue
    type: object
  UpdateProductLookupTypeDefinitionRequest:
    title: UpdateProductLookupTypeDefinitionRequest
    properties:
      description:
        description: The description of this lookup.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name for this lookup.
      values:
        description: The list of values available for this lookup.
        type: array
        items:
          $ref: '#/definitions/LookupValue'
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CreateProductAttributeRequest:
    title: CreateProductAttributeRequest
    properties:
      allowMultipleSelection:
        description: A value indicating whether multiple values can be specified. Applicable only for attributes of type 'Lookup'.
        type: boolean
        x-nullable: false
      dataType:
        description: The data type of this attribute
        type: string
        enum:
          - Number
          - Boolean
          - Text
          - DateTime
          - Decimal
          - Currency
          - Lookup
          - RichText
      defaultValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: The default value
      description:
        description: The description of the attribute
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the attribute
      groupName:
        description: 'The ID of the attribute group, if the attribute is associated to a group'
        type: string
      includeInAllCategoryDefinition:
        description: A value indicating whether the attribute will be automatically returned with all Category definitions of the system
        type: boolean
        x-nullable: false
      includeInAllProductDefinition:
        description: A value indicating whether the attribute will be automatically returned with all Product definitions of the system
        type: boolean
        x-nullable: false
      includeInAllVariantDefinition:
        description: A value indicating whether or not the attribute should be automatically included in variant definitions of the system
        type: boolean
        x-nullable: false
      isHiddenInOrchestrator:
        description: A value indicating whether this instance is hidden in the orchestrator
        type: boolean
        x-nullable: false
      isRequired:
        description: A value indicating whether a value is required for this attribute
        type: boolean
        x-nullable: false
      localizable:
        description: A value indicating whether this attribute is localizable and a distinct value can be specified for different cultures
        type: boolean
        x-nullable: false
      lookupName:
        description: The name of the lookup type. Applicable only for attributes of type 'Lookup'.
        type: string
      maximumValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: 'The maximum value of the allowed range. If the data type is a string, this is the maximum length of the string.'
      minimumValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: 'The minimum value of the allowed range. If the data type is a string, this is the minimum length of the string.'
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  ValueTypeWrapper:
    properties:
      type:
        description: 'Data type of the value based on the name of the C# type. For example: ValueOfBoolean, ValueOfInt32, ValueOfDateTime, ValueOfString, ValueOfSingle, ValueOfDouble, ValueOfDecimal'
        type: string
      value:
        description: Value of the property as a string. The value should use the invariant format for all types except dates which should use ISO8601.
        type: string
    type: object
  UpdateProductAttributeRequest:
    title: UpdateProductAttributeRequest
    properties:
      defaultValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: The default value
      description:
        description: The description of the attribute
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the attribute
      groupName:
        description: 'The ID of the attribute group, if the attribute is associated to a group'
        type: string
      includeInAllCategoryDefinition:
        description: A value indicating whether the attribute will be automatically returned with all Category definitions of the system
        type: boolean
        x-nullable: false
      includeInAllProductDefinition:
        description: A value indicating whether the attribute will be automatically returned with all Product definitions of the system
        type: boolean
        x-nullable: false
      includeInAllVariantDefinition:
        description: A value indicating whether or not the attribute should be automatically included in variant definitions of the system
        type: boolean
        x-nullable: false
      isHiddenInOrchestrator:
        description: A value indicating whether this instance is hidden in the orchestrator
        type: boolean
        x-nullable: false
      isRequired:
        description: A value indicating whether a value is required for this attribute
        type: boolean
        x-nullable: false
      maximumValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: 'The maximum value of the allowed range. If the data type is a string, this is the maximum length of the string.'
      minimumValue:
        $ref: '#/definitions/ValueTypeWrapper'
        description: 'The minimum value of the allowed range. If the data type is a string, this is the minimum length of the string.'
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  DeleteProductAttributeRequest:
    title: DeleteProductAttributeRequest
    properties:
      attributeName:
        description: The name of the attribute
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  FindProductAttributeGroupsRequest:
    title: FindProductAttributeGroupsRequest
    properties:
      groupNames:
        description: The names of the groups to retrieve. All groups will be returned if this is null or empty.
        type: array
        items:
          type: string
      includeAttributes:
        description: Determines whether or not to include the attributes associated to each group.
        type: boolean
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CreateProductAttributeGroupRequest:
    title: CreateProductAttributeGroupRequest
    properties:
      description:
        description: The description of the attribute group
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the attribute group
      displayOrder:
        description: The display order of the attribute group
        type: integer
        format: int32
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  UpdateProductAttributeGroupRequest:
    title: UpdateProductAttributeGroupRequest
    properties:
      description:
        description: The description of the attribute group
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized display names of the attribute group
      displayOrder:
        description: The display order of the attribute group
        type: integer
        format: int32
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  DeleteProductAttributeGroupRequest:
    title: DeleteProductAttributeGroupRequest
    properties:
      name:
        description: The name of the attribute group
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  UpdateMarketingLookupTypeDefinitionRequest:
    title: UpdateMarketingLookupTypeDefinitionRequest
    properties:
      description:
        description: The description of this lookup.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name for this lookup.
      values:
        description: The list of values available for this lookup.
        type: array
        items:
          $ref: '#/definitions/LookupValue'
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetOrderDefinitionsRequest:
    title: GetOrderDefinitionsRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetCustomerDefinitionsRequest:
    title: GetCustomerDefinitionsRequest
    properties:
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  CreateEntityTypeRequest:
    title: CreateEntityTypeRequest
    properties:
      attributes:
        description: The list of attributes describing this entity type.
        type: array
        items:
          $ref: '#/definitions/AttributeDefinition'
      description:
        description: The description for the entity definition.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name for this entity type.
      isSharedEntity:
        description: 'Whether or not the instances of this entity is considered as a shared entity, meaning that an instance of the entity will be reused by multiple other entities (using relations).'
        type: boolean
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  AttributeDefinition:
    title: AttributeDefinition
    properties:
      allowMultipleValues:
        description: Whether multiple values can be specified for the AttributeDefinition.
        type: boolean
        x-nullable: false
      customDataType:
        description: The type of the custom data for the AttributeDefinition.
        type: string
      dataType:
        description: The data type for the AttributeDefinition.
        type: string
        enum:
          - Integer
          - Decimal
          - Boolean
          - Text
          - DateTime
          - Lookup
          - EntityReference
          - CustomType
          - Xml
          - Uniqueidentifier
          - Number
      defaultValue:
        $ref: '#/definitions/Object'
        description: The default value for the AttributeDefinition.
      description:
        description: The description for the AttributeDefinition.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name given for the AttributeDefinition.
      displayOrder:
        description: The display order for the AttributeDefinition.
        type: integer
        format: int32
        x-nullable: false
      groupId:
        description: 'The Id of the AttributeDefinition group, if the attribute is associated to a group.'
        type: string
      isBuiltIn:
        description: Whether the AttributeDefinition is built-in.
        type: boolean
        x-nullable: false
      isRequired:
        description: Whether a value is required for the AttributeDefinition.
        type: boolean
        x-nullable: false
      isSearchable:
        description: The AttributeDefinition should be indexed and used for searches.
        type: boolean
        x-nullable: false
      maximum:
        $ref: '#/definitions/Object'
        description: The maximum value of the allowed range for the AttributeDefinition.
      minimum:
        $ref: '#/definitions/Object'
        description: The minimum value of the allowed range for the AttributeDefinition.
      multilingual:
        description: Whether the AttributeDefinition is multilingual and a distinct value can be specified for different cultures.
        type: boolean
        x-nullable: false
      name:
        description: The name of the AttributeDefinition.
        type: string
      referenceTypeName:
        description: 'The name of the reference type for the AttributeDefinition, if DataType is a lookup or an entity reference.'
        type: string
    description: AttributeDefinition
    type: object
  GetMarketingLookupsRequest:
    title: GetMarketingLookupsRequest
    properties: {}
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetOrderLookupsRequest:
    title: GetOrderLookupsRequest
    properties: {}
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetCustomerLookupsRequest:
    title: GetCustomerLookupsRequest
    properties: {}
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetProductLookupsRequest:
    title: GetProductLookupsRequest
    properties: {}
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  DeleteProductLookupValuesRequest:
    title: DeleteProductLookupValuesRequest
    properties:
      lookupName:
        description: The name of a lookup
        type: string
      values:
        description: The list of values to be removed from this lookup.
        type: array
        items:
          type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetCountriesRequest:
    title: GetCountriesRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeRegions:
        description: Whether to include the regions in each country
        type: boolean
        x-nullable: false
      includeUnsupported:
        description: Whether to include the unsupported countries
        type: boolean
        x-nullable: false
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  AddCountryRequest:
    title: AddCountryRequest
    required:
      - isoCode
    properties:
      isoCode:
        description: Two letter code that identifies Country uniquely (ISO 3166)
        type: string
      isSupported:
        description: The indicator specifying if the Country is supported by the merchant
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The official political name given for the Country
      phoneRegex:
        description: The Country's telephone validation regular expression
        type: string
      postalCodeRegex:
        description: The Country's postal code validation regular expression
        type: string
      sortOrder:
        description: The number used for ordering the Country in a list
        type: integer
        format: int32
        x-nullable: false
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  GetCountryRequest:
    title: GetCountryRequest
    required:
      - countryIsoCode
    properties:
      countryIsoCode:
        description: The countryIsoCode (unique) that identifies the country to retrieve
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeRegions:
        description: Whether to include the regions in each country
        type: boolean
        x-nullable: false
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  UpdateCountryAndRegionsRequest:
    title: UpdateCountryAndRegionsRequest
    properties:
      isSupported:
        description: The indicator specifying if the Country is supported by the merchant
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The official political name given for the Country
      phoneRegex:
        description: The Country's telephone validation regular expression
        type: string
      postalCodeRegex:
        description: The Country's postal code validation regular expression
        type: string
      regions:
        description: The list of Region associated to the Country
        type: array
        items:
          $ref: '#/definitions/Region'
      sortOrder:
        description: The number used for ordering the Country in a list
        type: integer
        format: int32
        x-nullable: false
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  Region:
    title: Region
    required:
      - id
      - countryId
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      countryId:
        description: The Id of the Country parent of this Region
        type: string
      isoCode:
        description: The four letter iso code identifying the Region uniquely
        type: string
      isSupported:
        description: The indicator specifying if the Region is supported by the merchant
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The official political name given for the Region
      sortOrder:
        description: The number used for ordering the Region in a list
        type: integer
        format: int32
        x-nullable: false
    description: Region
    type: object
  GetRegionsRequest:
    title: GetRegionsRequest
    required:
      - countryIsoCode
    properties:
      countryIsoCode:
        description: The unique countryIsoCode that identifies the country whose regions will be retrieved
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeUnsupported:
        description: Whether to include the unsupported regions
        type: boolean
        x-nullable: false
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  GetSupportedCulturesRequest:
    title: GetSupportedCulturesRequest
    properties: {}
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  SetSupportedCulturesRequest:
    title: SetSupportedCulturesRequest
    properties:
      cultureIsoCodes:
        description: The list of supported cultures (represented as ISO codes) to be saved
        type: array
        items:
          type: string
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  GetAllCulturesRequest:
    title: GetAllCulturesRequest
    properties: {}
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  SetDefaultCultureRequest:
    title: SetDefaultCultureRequest
    properties:
      cultureIso:
        description: The ISO code of the default culture
        type: string
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
    type: object
  GetTimeZonesRequest:
    title: GetTimeZonesRequest
    properties: {}
    description: Time zones.
    type: object
  FindUtcOffsetForTimeZoneRequest:
    title: FindUtcOffsetForTimeZoneRequest
    properties:
      timeZoneId:
        description: The specific destination time zone id
        type: string
      utcDateTime:
        description: The date and time that will be converted
        type: string
        format: date-time
        x-nullable: false
    description: Time zones.
    type: object
  GetCurrenciesRequest:
    title: GetCurrenciesRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeUnsupported:
        description: Whether to include the unsupported currencies
        type: boolean
        x-nullable: false
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetTargetingMetadataRequest:
    title: GetTargetingMetadataRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Metadata are entities which represents additional definitions and attribute information.
    type: object
  GetScopeRequest:
    title: GetScopeRequest
    required:
      - scopeId
    properties:
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includeChildren:
        description: Whether to include the entire scope map
        type: boolean
        x-nullable: false
      includeCurrency:
        description: Whether to include the associated currency
        type: boolean
        x-nullable: false
      scopeId:
        description: The id of the requested scope.
        type: string
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
    type: object
  CreateScopeRequest:
    title: CreateScopeRequest
    properties:
      currencyIso:
        description: The currency iso code of the scope.
        type: string
      defaultCulture:
        description: The default culture of the scope.
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The description of the scope.
      name:
        $ref: '#/definitions/LocalizedString'
        description: The name of the scope.
      parentScopeId:
        description: The parent scope id.
        type: string
      scopeType:
        description: The type of the scope.
        type: string
        enum:
          - Global
          - Sale
          - Dependant
          - Virtual
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
    type: object
  UpdateScopeRequest:
    title: UpdateScopeRequest
    properties:
      currencyIso:
        description: The currency iso code of the scope.
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The description of the scope.
      endDate:
        description: ' The end date of the scope.'
        type: string
        format: date-time
      isActive:
        description: The value indicating whether or not the scope is active.
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The name of the scope.
      parentScopeId:
        description: The parent scope id.
        type: string
      startDate:
        description: The start date of the scope.
        type: string
        format: date-time
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
    type: object
  DeleteScopeRequest:
    title: DeleteScopeRequest
    properties:
      scopeId:
        description: The unique identifier of the scope to delete.
        type: string
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
    type: object
  GetScopeChildrenRequest:
    title: GetScopeChildrenRequest
    required:
      - scopeId
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeCurrency:
        description: Whether to include the associated currency
        type: boolean
        x-nullable: false
      scopeId:
        description: The id of the requested scope.
        type: string
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
    type: object
  GetVariantSearchConfigurationsRequest:
    title: GetVariantSearchConfigurationsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: The API used to query the search engine.
    type: object
  AddOrUpdateVariantSearchConfigurationRequest:
    title: AddOrUpdateVariantSearchConfigurationRequest
    properties:
      groupingVariantAttribute:
        description: the grouping attribute to be used for this configuration.
        type: string
      productDefinitionName:
        description: the product definition name of the configuration to be updated.
        type: string
      searchOption:
        description: the search option to set for the specified product definition.
        type: string
        enum:
          - SingleRecordPerProduct
          - GroupByKvaValue
          - SingleRecordPerVariant
          - GroupByCustomAttribute
    description: The API used to query the search engine.
    type: object
  SearchProductRequest:
    title: SearchProductRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      activeProductOnly:
        description: whether to return active products only. True by default.
        type: boolean
        x-nullable: false
      facets:
        description: the list of facets that will be included in the results.
        type: array
        items:
          type: string
      featuredProducts:
        description: The document ids of the products that will be elevated
        type: array
        items:
          type: string
      keywords:
        description: the search terms to use in the query.
        type: string
      maximumItems:
        description: the maximum number of items returned by the search query.
        type: integer
        format: int32
        x-nullable: false
      properties:
        description: 'the collection of properties, represented as string, to return in the search results.'
        type: array
        items:
          type: string
      searchFilters:
        description: the collection of SearchFilters.
        type: array
        items:
          $ref: '#/definitions/SearchFilter'
      searchRanges:
        description: the collection of SearchRange.
        type: array
        items:
          $ref: '#/definitions/SearchRange'
      sortFieldDirection:
        description: the direction used to sort the results.
        type: string
        enum:
          - Ascending
          - Descending
      sortFieldName:
        description: the name of the field used to order the results.
        type: string
      startingIndex:
        description: the index of the first record in the list (used for paging purpose).
        type: integer
        format: int32
        x-nullable: false
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
    description: The API used to query the search engine.
    type: object
  SearchFilter:
    title: SearchFilter
    properties:
      displayName:
        description: the display name of the filter.
        type: string
      name:
        description: the name of the field to filter.
        type: string
      value:
        description: the value to use to filter the data.
        type: string
    description: SearchFilter
    type: object
  SearchRange:
    title: SearchRange
    properties:
      displayName:
        description: the display name of the filter.
        type: string
      name:
        description: the name of the field to filter.
        type: string
      selectedMax:
        description: the maximum value to use to filter the data.
        type: number
        format: double
      selectedMin:
        description: the minimum value to use to filter the data.
        type: number
        format: double
    description: SearchRange
    type: object
  SearchCustomersRequest:
    title: SearchCustomersRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      facets:
        description: the list of facets that will be included in the results.
        type: array
        items:
          type: string
      isSortAscending:
        description: the value indicating the sort is ascending
        type: boolean
        x-nullable: false
      keywords:
        description: the search terms to use in the query.
        type: string
      maximumItems:
        description: the maximum number of items returned by the search query.
        type: integer
        format: int32
        x-nullable: false
      properties:
        description: 'the collection of properties, represented as string, to return in the search results.'
        type: array
        items:
          type: string
      searchFilters:
        description: the collection of SearchFilters.
        type: array
        items:
          $ref: '#/definitions/SearchFilter'
      searchRanges:
        description: the collection of SearchRange.
        type: array
        items:
          $ref: '#/definitions/SearchRange'
      sortFieldName:
        description: the name of the field used to order the results.
        type: string
      startingIndex:
        description: the index of the first record in the list (used for paging purpose).
        type: integer
        format: int32
        x-nullable: false
    description: The API used to query the search engine.
    type: object
  SearchAvailableProductsRequest:
    title: SearchAvailableProductsRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      autoCorrect:
        description: Whether search term should be automatically corrected
        type: boolean
        x-nullable: false
      availabilityDate:
        description: the date at which the product should be available
        type: string
        format: date-time
      boostQueryParams:
        description: The boost query parameters for this search. This will append a 'bq' parameter to the call to Solr for each param.
        type: array
        items:
          type: string
      facetPredicates:
        description: List of FacetPredicates to apply on the search
        type: array
        items:
          $ref: '#/definitions/FacetPredicate'
      facets:
        description: 'The facets, a list of strings, that will be included in the results'
        type: array
        items:
          type: string
      includeFacets:
        description: Whether facets are returned as part of the search results
        type: boolean
        x-nullable: false
      inventoryLocationIds:
        description: the Ids of the inventory locations where the products should be available.
        type: array
        items:
          type: string
      inventoryLocationOperator:
        description: should the products found be available in all (AND) or in any (OR) of the inventory locations.
        type: string
        enum:
          - Or
          - And
      inventoryStatuses:
        description: 'The inventory statuses to filter by. If none are specified, the value will be taken from the product setting ''AvailableInventoryStatuses'' (InStock, OutOfStock, BackOrder).'
        type: array
        items:
          type: string
      properties:
        description: 'The collection of properties, represented as a string. According to the search engine, a list of properties may be required to retrieve the document properties'
        type: array
        items:
          type: string
      searchTerms:
        description: The search terms for this search query
        type: string
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
      featuredProducts:
        description: The document ids of the products that will be elevated
        type: array
        items:
          type: string
    description: The API used to query the search engine.
    type: object
  Query:
    title: Query
    properties:
      distinctResults:
        description: Whether the result must be unique
        type: boolean
        x-nullable: false
      filter:
        $ref: '#/definitions/FilterGroup'
        description: The filtering condition of the query
      hierarchyDepth:
        description: The maximum hierarchy depth
        type: integer
        format: int32
        x-nullable: false
      includedHierarchy:
        description: the included hierarchy
        type: string
      includeTotalCount:
        description: Whether the total number of records is calculated
        type: boolean
        x-nullable: false
      maximumItems:
        description: Maximum number of returned items
        type: integer
        format: int32
      sortings:
        description: the sorting parameter of the query
        type: array
        items:
          $ref: '#/definitions/QuerySorting'
      startingIndex:
        description: the starting index of the query
        type: integer
        format: int32
        x-nullable: false
    description: Query
    type: object
  FilterGroup:
    title: FilterGroup
    properties:
      binaryOperator:
        description: The binary operator joining the condition together
        type: string
        enum:
          - And
          - Or
      filterGroups:
        description: The nested filter groups
        type: array
        items:
          $ref: '#/definitions/FilterGroup'
      filters:
        description: The nested filters
        type: array
        items:
          $ref: '#/definitions/Filter'
      not:
        description: If the operation is negate
        type: boolean
        x-nullable: false
    description: FilterGroup
    type: object
  Filter:
    title: Filter
    properties:
      customExpression:
        description: The custom expression to be consumed as-is by the provider. Applies only with the Operator.Custom.
        type: string
      member:
        description: The name of the property
        type: string
      not:
        description: Whether to negate the filter operation
        type: boolean
        x-nullable: false
      operator:
        description: The operation to apply on the filter
        type: string
        enum:
          - Equals
          - GreaterThan
          - GreaterThanOrEqual
          - LessThan
          - LessThanOrEqual
          - Matches
          - In
          - Custom
          - InOrderedList
      value:
        $ref: '#/definitions/Object'
        description: The value to compare
    description: Filter
    type: object
  QuerySorting:
    title: QuerySorting
    properties:
      direction:
        description: the sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      propertyName:
        description: the name of the property to be sorted
        type: string
    description: QuerySorting
    type: object
  FacetPredicate:
    title: FacetPredicate
    properties:
      excludeFilterForFacetsCount:
        description: Exclude specified filter for facets count
        type: boolean
        x-nullable: false
      facetType:
        description: Gets the Facet Type.
        type: string
        enum:
          - Unspecified
          - Field
          - Range
          - Query
      fieldName:
        description: The name which is used to refer to this facet
        type: string
      maximumValue:
        description: The range maximum value
        type: string
      minimumValue:
        description: The range minimum value
        type: string
      operatorType:
        description: The values operator
        type: string
        enum:
          - Or
          - And
      queryExpression:
        description: The query expression
        type: string
      values:
        description: The values
        type: array
        items:
          type: string
    description: FacetPredicate
    type: object
  AdvancedSearchRequest:
    title: AdvancedSearchRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      autoCorrect:
        description: Whether or not to automatically do the correction when there is no result and at least one suggestion
        type: boolean
        x-nullable: false
      boostQueryParams:
        description: The boost query parameters for this search. This will append a 'bq' parameter to the call to Solr for each param.
        type: array
        items:
          type: string
      elevatedIds:
        description: The ids of the documents that will be elevated
        type: array
        items:
          type: string
      facetHierarchyId:
        description: 'The ID of the facet hierarchy to use. This will impact the facets results, only the facets defined in this hierarchy will be returned.'
        type: string
      facetPredicates:
        description: List of FacetPredicate to apply on the search
        type: array
        items:
          $ref: '#/definitions/FacetPredicate'
      facets:
        description: 'The facets, a list of string, that will be included in the results'
        type: array
        items:
          type: string
      groupByField:
        description: The field used to group results.
        type: string
      includeEmptyFacets:
        description: Whether to return the Facet with no values in it
        type: boolean
        x-nullable: false
      includeFacets:
        description: Whether facets are returned as part of the search results
        type: boolean
        x-nullable: false
      operator:
        description: 'The operator (OR, AND), default to AND'
        type: string
      properties:
        description: 'The collection of properties, represented as string. According to the search engine, a list of properties may be required to retrieve the documents properties'
        type: array
        items:
          type: string
      searchTerms:
        description: The search terms for this search query
        type: string
    description: The API used to query the search engine.
    type: object
  SearchProductByIdsRequest:
    title: SearchProductByIdsRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      activeProductOnly:
        description: whether to return active products only. True by default.
        type: boolean
        x-nullable: false
      ids:
        description: the list of products to return.
        type: array
        items:
          type: string
      properties:
        description: 'the collection of properties, represented as string, to return in the search results.'
        type: array
        items:
          type: string
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
    description: The API used to query the search engine.
    type: object
  SearchProductBySavedQueryRequest:
    title: SearchProductBySavedQueryRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      activeProductOnly:
        description: whether to return active product only.
        type: boolean
        x-nullable: false
      properties:
        description: 'the collection of properties, represented as string, to return in the search results.'
        type: array
        items:
          type: string
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
    description: The API used to query the search engine.
    type: object
  SearchSimilarProductsRequest:
    title: SearchSimilarProductsRequest
    properties:
      maxNumberOfResults:
        description: The maximum number of results
        type: integer
        format: int32
        x-nullable: false
      maxPrice:
        description: The maximum price
        type: integer
        format: int32
      minPrice:
        description: The minimum price
        type: integer
        format: int32
      onlyActiveProducts:
        description: Whether or not retrieve only active products
        type: boolean
        x-nullable: false
      query:
        $ref: '#/definitions/Query'
        description: The query
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
    description: The API used to query the search engine.
    type: object
  SearchBySearchQueryRequest:
    title: SearchBySearchQueryRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      autoCorrect:
        description: Whether search term should be automatically corrected
        type: boolean
        x-nullable: false
      facetPredicates:
        description: List of FacetPredicates to apply on the search
        type: array
        items:
          $ref: '#/definitions/FacetPredicate'
      facets:
        description: 'The facets, a list of strings, that will be included in the results'
        type: array
        items:
          type: string
      includeFacets:
        description: Whether facets are returned as part of the search results
        type: boolean
        x-nullable: false
      properties:
        description: 'the collection of properties, represented as string, to return in the search results.'
        type: array
        items:
          type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes. You may use this bag to add attributes to the effective Search request that will be executed.
      searchTerms:
        description: The search terms for this search query
        type: string
    description: The API used to query the search engine.
    type: object
  SearchAvailableProductsByCategoryRequest:
    title: SearchAvailableProductsByCategoryRequest
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      autoCorrect:
        description: Whether search term should be automatically corrected
        type: boolean
        x-nullable: false
      availabilityDate:
        description: the date at which the product should be available
        type: string
        format: date-time
      boostQueryParams:
        description: The boost query parameters for this search. This will append a 'bq' parameter to the call to Solr for each param.
        type: array
        items:
          type: string
      facetPredicates:
        description: List of FacetPredicates to apply on the search
        type: array
        items:
          $ref: '#/definitions/FacetPredicate'
      facets:
        description: 'The facets, a list of strings, that will be included in the results'
        type: array
        items:
          type: string
      includeFacets:
        description: Whether facets are returned as part of the search results
        type: boolean
        x-nullable: false
      inventoryLocationIds:
        description: the Ids of the inventory locations where the products should be available.
        type: array
        items:
          type: string
      inventoryLocationOperator:
        description: should the products found be available in all (AND) or in any (OR) of the inventory locations.
        type: string
        enum:
          - Or
          - And
      inventoryStatuses:
        description: 'The inventory statuses to filter by. If none are specified, the value will be taken from the product setting ''AvailableInventoryStatuses'' (InStock, OutOfStock, BackOrder).'
        type: array
        items:
          type: string
      properties:
        description: 'The collection of properties, represented as a string. According to the search engine, a list of properties may be required to retrieve the document properties'
        type: array
        items:
          type: string
      searchTerms:
        description: The search terms for this search query
        type: string
      variantGroupingStrategy:
        description: The variant grouping strategy
        type: string
        enum:
          - PerConfiguredSearchOption
          - PerProduct
          - None
    description: The API used to query the search engine.
    type: object
  QueueActivityTaskRequest:
    title: QueueActivityTaskRequest
    properties:
      correlationId:
        description: The correlation identifier allowing to regroup and retrieve various tasks together.
        type: string
        x-nullable: false
      inputs:
        $ref: '#/definitions/PropertyBag'
        description: The task input arguments.
      isSequential:
        description: Value indicating whether the task must be run in the specific sequence.
        type: boolean
      sequenceGroup:
        description: The name to identify the sequence that this task is part of. Tasks that must execute in sequence must share the same SequenceGroup
        type: string
      sequenceQuota:
        description: Value indicating what is the expected maximum sequence count.
        type: integer
        format: int32
      taskName:
        description: The task identifier.
        type: string
      activityTypeName:
        description: The fully qualified name of the workflow activity type.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  QueueWorkflowTaskRequest:
    title: QueueWorkflowTaskRequest
    properties:
      correlationId:
        description: The correlation identifier allowing to regroup and retrieve various tasks together.
        type: string
        x-nullable: false
      inputs:
        $ref: '#/definitions/PropertyBag'
        description: The task input arguments.
      isSequential:
        description: Value indicating whether the task must be run in the specific sequence.
        type: boolean
      sequenceGroup:
        description: The name to identify the sequence that this task is part of. Tasks that must execute in sequence must share the same SequenceGroup
        type: string
      sequenceQuota:
        description: Value indicating what is the expected maximum sequence count.
        type: integer
        format: int32
      taskName:
        description: The task identifier.
        type: string
      workflowName:
        description: The relative path of the workflow xaml file.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  GetTaskExecutionLogsRequest:
    title: GetTaskExecutionLogsRequest
    properties:
      taskId:
        description: The task identifier.
        type: string
        x-nullable: false
    description: Long running tasks perform batch processing.
    type: object
  GetTasksInfoByCorrelationIdRequest:
    title: GetTasksInfoByCorrelationIdRequest
    properties:
      id:
        description: The task correlation identifier
        type: string
        x-nullable: false
    description: Long running tasks perform batch processing.
    type: object
  CancelTaskRequest:
    title: CancelTaskRequest
    properties: {}
    description: Long running tasks perform batch processing.
    type: object
  GetAllScheduledTasksRequest:
    title: GetAllScheduledTasksRequest
    properties: {}
    description: Long running tasks perform batch processing.
    type: object
  GetRunningScheduledTasksRequest:
    title: GetRunningScheduledTasksRequest
    properties: {}
    description: Long running tasks perform batch processing.
    type: object
  DeleteAllScheduledTasksRequest:
    title: DeleteAllScheduledTasksRequest
    properties: {}
    description: Long running tasks perform batch processing.
    type: object
  GetRequesterTasksInfoRequest:
    title: GetRequesterTasksInfoRequest
    properties:
      filterTaskNames:
        description: 'The array of task type names to filter by, if none specified, no filtering is performed. The type names are the fully qualified type names (Eg. Orckestra.Overture.Providers.CommerceEngine.Profiles.ProfileSchemaImportTask, Orckestra.Overture.Providers.CommerceEngine)'
        type: array
        items:
          type: string
      lastModified:
        description: The last modification date of the task. Use this to limit the results to items after this date
        type: string
        format: date-time
      requester:
        description: The username of the user that requested the tasks.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  GetTaskInfoRequest:
    title: GetTaskInfoRequest
    properties:
      taskId:
        description: The task identifier.
        type: string
        x-nullable: false
    description: Long running tasks perform batch processing.
    type: object
  DeleteTaskInfoRequest:
    title: DeleteTaskInfoRequest
    properties:
      force:
        description: force delete task.
        type: boolean
        x-nullable: false
      taskId:
        description: The task identifier.
        type: string
        x-nullable: false
    description: Long running tasks perform batch processing.
    type: object
  UpdateTemplateRequest:
    title: UpdateTemplateRequest
    properties:
      contents:
        $ref: '#/definitions/Dictionary_String_String_'
        description: the content of the template
      description:
        $ref: '#/definitions/LocalizedString'
        description: the description of the template
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the template
      isActive:
        description: the current state of the template
        type: boolean
        x-nullable: false
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
    type: object
  Dictionary_String_String_:
    additionalProperties:
      type: string
    type: string
  GetTokenRequest:
    title: GetTokenRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      expiryDate:
        description: The expiry date of the token. It must be in the future.
        type: string
        format: date-time
        x-nullable: false
      name:
        description: The name of the token
        type: string
      propertyBag:
        $ref: '#/definitions/Dictionary_String_String_'
        description: The bag containing all the custom attributes.
      type:
        description: The type of token
        type: string
        enum:
          - Default
          - Guest
          - Customer
          - ProductPicker
          - ProductMarchandiser
    description: This can be used to retrieve security token for guest customer.
    type: object
  GetGuestTokenRequest:
    title: GetGuestTokenRequest
    properties:
      expiryDate:
        description: The expiry date of the token. It must be in the future.
        type: string
        format: date-time
        x-nullable: false
    description: This can be used to retrieve security token for guest customer.
    type: object
  GetUserScopeTreeRequest:
    title: GetUserScopeTreeRequest
    properties:
      cultureName:
        description: The culture name in which language tha data will be returned.
        type: string
      module:
        description: The module for which the scope tree is returned.
        type: string
        enum:
          - Product
          - Customer
          - Order
          - Marketing
          - Reports
          - Administration
          - UserManagement
          - PriceManagement
    description: Application are blocks of logical business features.
    type: object
  SaveUserScopeRequest:
    title: SaveUserScopeRequest
    properties: {}
    description: Application are blocks of logical business features.
    type: object
  GetAddressesByIdsRequest:
    title: GetAddressesByIdsRequest
    required:
      - ids
    properties:
      ids:
        description: The list of system-wide unique identifier for the Addresses to retrieve.
        type: array
        items:
          type: string
          x-nullable: false
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  UpdateCustomerAddressRequest:
    title: UpdateCustomerAddressRequest
    properties:
      addressName:
        description: Name of the address. A customer cannot have two addresses with the same name.
        type: string
      city:
        description: City of the address
        type: string
      countryCode:
        description: 2 letter country ISO code
        type: string
      email:
        description: Email
        type: string
      firstName:
        description: Resident first name
        type: string
      isPreferredBilling:
        description: a boolean which specifies whether this address is the customer's preferred choice for Billing. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: a boolean which specifies whether this address is the customer's preferred choice for Shipping. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      lastName:
        description: Resident last name
        type: string
      latitude:
        description: Latitude coordinate of the Address
        type: number
        format: double
      line1:
        description: First line of the address
        type: string
      line2:
        description: Second line of the address
        type: string
      longitude:
        description: Longitude coordinate of the address
        type: number
        format: double
      notes:
        description: Notes
        type: string
      phoneExtension:
        description: Phone extension of the address
        type: string
      phoneNumber:
        description: Phone number of the address
        type: string
      postalCode:
        description: Postal code of the address
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      regionCode:
        description: 2 letter region ISO code
        type: string
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  GetCustomerAddressRequest:
    title: GetCustomerAddressRequest
    required:
      - addressId
    properties:
      addressId:
        description: The unique identifier of the address.
        type: string
        x-nullable: false
      customerId:
        description: The customer identifier.
        type: string
        x-nullable: false
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  RemoveCustomerAddressRequest:
    title: RemoveCustomerAddressRequest
    required:
      - addressId
    properties:
      addressId:
        description: The unique identifier of the address.
        type: string
        x-nullable: false
      customerId:
        description: The customer identifier.
        type: string
        x-nullable: false
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  UpdateAddressRequest:
    title: UpdateAddressRequest
    required:
      - relatedEntityId
      - relatedEntityType
    properties:
      addressName:
        description: Name of the address. A customer cannot have two addresses with the same name.
        type: string
      city:
        description: City of the address
        type: string
      countryCode:
        description: 2 letter country ISO code
        type: string
      email:
        description: Email
        type: string
      firstName:
        description: Resident first name
        type: string
      isPreferredBilling:
        description: a boolean which specifies whether this address is the customer's preferred choice for Billing. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: a boolean which specifies whether this address is the customer's preferred choice for Shipping. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      lastName:
        description: Resident last name
        type: string
      latitude:
        description: Latitude coordinate of the Address
        type: number
        format: double
      line1:
        description: First line of the address
        type: string
      line2:
        description: Second line of the address
        type: string
      longitude:
        description: Longitude coordinate of the address
        type: number
        format: double
      notes:
        description: Notes
        type: string
      phoneExtension:
        description: Phone extension of the address
        type: string
      phoneNumber:
        description: Phone number of the address
        type: string
      postalCode:
        description: Postal code of the address
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      regionCode:
        description: 2 letter region ISO code
        type: string
      relatedEntityId:
        description: The unique Id of the entity (such as a customer) that owns the address.
        type: string
      relatedEntityType:
        description: The type string of the entity (such as a customer) that owns the address.
        type: string
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  GetAddressRequest:
    title: GetAddressRequest
    required:
      - addressId
    properties:
      addressId:
        description: The unique identifier of the address.
        type: string
        x-nullable: false
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  RemoveAddressRequest:
    title: RemoveAddressRequest
    required:
      - addressId
    properties:
      addressId:
        description: The unique identifier of the address.
        type: string
        x-nullable: false
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
    type: object
  AddOrUpdateCustomerAddressRequest:
    title: AddOrUpdateCustomerAddressRequest
    properties:
      addressName:
        description: Name of the address. A customer cannot have two addresses with the same name.
        type: string
      city:
        description: City of the address
        type: string
      countryCode:
        description: 2 letter country ISO code
        type: string
      email:
        description: Email
        type: string
      firstName:
        description: Resident first name
        type: string
      isPreferredBilling:
        description: a boolean which specifies whether this address is the customer's preferred choice for Billing. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: a boolean which specifies whether this address is the customer's preferred choice for Shipping. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      lastName:
        description: Resident last name
        type: string
      latitude:
        description: Latitude coordinate of the Address
        type: number
        format: double
      line1:
        description: First line of the address
        type: string
      line2:
        description: Second line of the address
        type: string
      longitude:
        description: Longitude coordinate of the address
        type: number
        format: double
      notes:
        description: Notes
        type: string
      phoneExtension:
        description: Phone extension of the address
        type: string
      phoneNumber:
        description: Phone number of the address
        type: string
      postalCode:
        description: Postal code of the address
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      regionCode:
        description: 2 letter region ISO code
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerRequest:
    title: GetCustomerRequest
    required:
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique id of the requested customer
        type: string
        x-nullable: false
      includeAddresses:
        description: Specifies whether or not to fully load the collection of addresses linked to the customer.
        type: boolean
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerStoresRequest:
    title: GetCustomerStoresRequest
    required:
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique id of the customer
        type: string
        x-nullable: false
      includeAddresses:
        description: The value indicating whether the addresses should be included
        type: boolean
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  UpdateCustomerRequest:
    title: UpdateCustomerRequest
    properties:
      accountStatus:
        description: The current status (active/inactive/requires approval) of the customer account.
        type: string
        enum:
          - Active
          - Inactive
          - RequiresApproval
      addressIds:
        description: TODO
        type: array
        items:
          type: string
          x-nullable: false
      cellNumber:
        description: the number for the cellular of the customer.
        type: string
      created:
        description: the date the customer was created.
        type: string
        format: date-time
        x-nullable: false
      customerType:
        description: 'the type of customer (Registered, Guest).'
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
      email:
        description: the email associated to the customer.
        type: string
      faxExtension:
        description: 'the extension, if any, for the customer fax.'
        type: string
      faxNumber:
        description: the number to use for the customer fax.
        type: string
      firstName:
        description: the first name of the customer.
        type: string
      language:
        description: the preferred communication language of the customer.
        type: string
      lastModified:
        description: the date that the last modification was applied to the customer.
        type: string
        format: date-time
        x-nullable: false
      lastName:
        description: the last name of the customer.
        type: string
      passwordQuestion:
        description: the secret question for the customer.
        type: string
      phoneExtension:
        description: 'the extension, if any, for the telephone number of the customer.'
        type: string
      phoneExtensionWork:
        description: 'the extension, if any, for the work phone number.'
        type: string
      phoneNumber:
        description: the telephone number of the customer.
        type: string
      phoneNumberWork:
        description: the phone number at the work place of the customer.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      username:
        description: a string of character representing a unique name used for the customer.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  AddAddressToCustomerRequest:
    title: AddAddressToCustomerRequest
    properties:
      addressName:
        description: The name of the address. A customer can not have two addresses with the same name.
        type: string
      city:
        description: The city of the address.
        type: string
      countryCode:
        description: 2 letter country ISO code.
        type: string
      email:
        description: The email address.
        type: string
      firstName:
        description: The resident first name.
        type: string
      id:
        description: Unique identifier of the new address (will be generated if not specified).
        type: string
        x-nullable: false
      isPreferredBilling:
        description: A value which specifies if this address should be used as a billing address in the case of multiple addresses.
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: A value which specifies if this address should be used as a shipping address in the case of multiple addresses.
        type: boolean
        x-nullable: false
      lastName:
        description: The resident last name.
        type: string
      latitude:
        description: Latitude coordinate of the address.
        type: number
        format: double
      line1:
        description: The first line of the address.
        type: string
      line2:
        description: the second line of the address.
        type: string
      longitude:
        description: Longitude coordinate of the address.
        type: number
        format: double
      notes:
        description: The notes for the address.
        type: string
      phoneExtension:
        description: The phone extension of the address.
        type: string
      phoneNumber:
        description: The phone number of the address.
        type: string
      postalCode:
        description: The postal code of the address.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      regionCode:
        description: 2 letter region ISO code.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerAddressesRequest:
    title: GetCustomerAddressesRequest
    required:
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier associated to the requested customer
        type: string
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  AddOrganizationsToCustomerRequest:
    title: AddOrganizationsToCustomerRequest
    properties:
      associatedIds:
        description: The list of unique identifiers of the organizations to associate.
        type: array
        items:
          type: string
          x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerOrganizationsRequest:
    title: GetCustomerOrganizationsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier of the customer.
        type: string
        x-nullable: false
      includeAllAddresses:
        description: Gets or sets a value indicating whether all addresses should be returned or only the first one. If False only one organization address will be returned using either IsPreferredBilling or IsPreferredShipping as priority. If True every organization addresses for the customer will be returned
        type: boolean
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  RemoveOrganizationsToCustomerRequest:
    title: RemoveOrganizationsToCustomerRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      associatedIds:
        description: The list of unique identifier for the associated entities
        type: array
        items:
          type: string
          x-nullable: false
      customerId:
        description: The unique identifier for the customer
        type: string
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  FindCustomersRequest:
    title: FindCustomersRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      filteringScopes:
        description: The identifier of the filtering Scopes separated with comma.
        type: string
      searchTerms:
        description: The phrase to search for in the list of Customers.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerNotesRequest:
    title: GetCustomerNotesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier of the customer.
        type: string
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  AddCustomerNoteRequest:
    title: AddCustomerNoteRequest
    properties:
      content:
        description: Note to add to the customer.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerPaymentProfilesRequest:
    title: GetCustomerPaymentProfilesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier of the customer.
        type: string
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerOrderHistoryRequest:
    title: GetCustomerOrderHistoryRequest
    required:
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier associated to the requested customer
        type: string
        x-nullable: false
      ordersCreatedAfter:
        description: Shows the orders after this date.
        type: string
        format: date-time
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerByUsernameRequest:
    title: GetCustomerByUsernameRequest
    required:
      - username
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to fully load the collection of addresses linked to the customer.
        type: boolean
        x-nullable: false
      username:
        description: The username associated to the requested customer
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerPaymentProfileRequest:
    title: GetCustomerPaymentProfileRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier of the customer to retrieve.
        type: string
        x-nullable: false
      paymentProviderName:
        description: The name of the payment provider.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  AddCustomerPaymentProfileRequest:
    title: AddCustomerPaymentProfileRequest
    properties:
      allowMultiplePaymentProfileOnProvider:
        description: The value for overwriting the way pyment profile are added.
        type: boolean
        x-nullable: false
      externalIds:
        description: The list of unique identifier returned by external provider related to the payment profile.
        type: string
      id:
        description: Unique identifier of the new payment profile (will be generated if not specified).
        type: string
        x-nullable: false
      orderLocationId:
        description: The store for wich the provider configuration is done.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
    description: Customers represents entities which have the ability to buy products.
    type: object
  UpdateCustomerPaymentProfileRequest:
    title: UpdateCustomerPaymentProfileRequest
    properties:
      externalIds:
        description: The list of unique identifier returned by external provider related to the payment profile.
        type: string
      id:
        description: Unique identifier of the new payment profile (will be generated if not specified).
        type: string
        x-nullable: false
      orderLocationId:
        description: The store for wich the provider configuration is done.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
    description: Customers represents entities which have the ability to buy products.
    type: object
  UpdatePreferredStoreRequest:
    title: UpdatePreferredStoreRequest
    properties:
      storeId:
        description: 'The unique id of the store. Required when StoreNumber is empty. If both are provided, StoreId is used first and validates the match with StoreNumber.'
        type: string
        x-nullable: false
      storeNumber:
        description: 'The unique number of the store. Required when StoreId is empty. If both are provided, StoreId is used first and validates the match with StoreNumber.'
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerPaymentMethodsRequest:
    title: GetCustomerPaymentMethodsRequest
    required:
      - customerId
      - paymentProviderName
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: the unique identifier of the Customer
        type: string
        x-nullable: false
      paymentProviderName:
        description: the name of the payment provider to use
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetCustomerFromPasswordTicketRequest:
    title: GetCustomerFromPasswordTicketRequest
    required:
      - ticket
    properties:
      ticket:
        description: The ticket
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  CreateCustomerRequest:
    title: CreateCustomerRequest
    properties:
      accountStatus:
        description: The current status of the customer account.
        type: string
        enum:
          - Active
          - Inactive
          - RequiresApproval
      addressIds:
        description: The customer's addresses.
        type: array
        items:
          type: string
          x-nullable: false
      cellNumber:
        description: the number for the cellular of the customer.
        type: string
      created:
        description: the date the customer was created.
        type: string
        format: date-time
        x-nullable: false
      customerId:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      customerType:
        description: 'the type of customer (Registered, Guest).'
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
      email:
        description: the email associated to the customer.
        type: string
      faxExtension:
        description: 'the extension, if any, for the customer fax.'
        type: string
      faxNumber:
        description: the number to use for the customer fax.
        type: string
      firstName:
        description: the first name of the customer.
        type: string
      language:
        description: the preferred communication language of the customer.
        type: string
      lastModified:
        description: the date and time that the last modification was applied to the customer.
        type: string
        format: date-time
        x-nullable: false
      lastName:
        description: the last name of the customer.
        type: string
      passwordQuestion:
        description: the secret question for the customer.
        type: string
      phoneExtension:
        description: 'the extension, if any, for the telephone number of the customer.'
        type: string
      phoneExtensionWork:
        description: 'the extension, if any, for the work phone number.'
        type: string
      phoneNumber:
        description: the telephone number of the customer.
        type: string
      phoneNumberWork:
        description: the phone number at the work place of the customer.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      username:
        description: a string of character representing a unique name used for the customer.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  GetAssociatedScopesRequest:
    title: GetAssociatedScopesRequest
    required:
      - entityId
      - entityTypeName
      - scopeId
    properties:
      entityId:
        description: The identifier (business key) of the instance of entity to which the scopes are associated.
        type: string
      entityTypeName:
        description: The EntityTypeName of the profile instance to which the scopes are linked.
        type: string
      scopeId:
        description: The identifier of the scope.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  UpdateScopeAssociationsRequest:
    title: UpdateScopeAssociationsRequest
    required:
      - scopes
    properties:
      scopes:
        description: The list of name (business key) of scopes to associate to the given entity.
        type: array
        items:
          type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  RemoveScopeAssociationRequest:
    title: RemoveScopeAssociationRequest
    required:
      - entityId
      - entityTypeName
      - scopeId
    properties:
      entityId:
        description: The Id (business key) of the instance of entity to which the scopes are associated.
        type: string
      entityTypeName:
        description: The name (business key) of the entity type of the instance to which the scopes are linked.
        type: string
      scopeId:
        description: The Id (business key) of the Scope to which the associations must be deleted.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  GetProfileInstanceByNameRequest:
    title: GetProfileInstanceByNameRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      entityTypeName:
        description: Name of the custom type of the profile instance represented by this entity.
        type: string
      name:
        description: Unique identifier name for the entity.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  GetCustomersByOrganizationRequest:
    title: GetCustomersByOrganizationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Whether or not to fully load the collection of addresses linked to the customer.
        type: boolean
        x-nullable: false
      maximumItems:
        description: The maximum items returned by the search query.
        type: integer
        format: int32
        x-nullable: false
      organizationId:
        description: The organization identifier of the customer to search for.
        type: string
        x-nullable: false
      startingIndex:
        description: The starting index.
        type: integer
        format: int32
        x-nullable: false
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  GetOrganizationByNameRequest:
    title: GetOrganizationByNameRequest
    required:
      - name
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to fully load the addresses.
        type: boolean
        x-nullable: false
      name:
        description: The name of the organization to retrieve.
        type: string
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  GetCustomersByOrganizationNameRequest:
    title: GetCustomersByOrganizationNameRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to fully load the collection of addresses linked to the customer.
        type: boolean
        x-nullable: false
      maximumItems:
        description: The maximum items returned by the search query.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: The organization name of the Customer to search for.
        type: string
      startingIndex:
        description: The starting index.
        type: integer
        format: int32
        x-nullable: false
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  AssociateCustomerEntityRequest:
    title: AssociateCustomerEntityRequest
    properties: {}
    description: Customers represents entities which have the ability to buy products.
    type: object
  DisassociateCustomerEntityRequest:
    title: DisassociateCustomerEntityRequest
    required:
      - attributeName
      - entityId
      - scopeId
    properties:
      attributeName:
        description: The name of the attribute in the parent definition under which the association is kept.
        type: string
      customerId:
        description: The customer identifier.
        type: string
        x-nullable: false
      entityId:
        description: The unique identifier for the associated entity.
        type: string
        x-nullable: false
      scopeId:
        description: The identifier of scope in which the parent entity belong.
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  DeleteCustomerPaymentMethodRequest:
    title: DeleteCustomerPaymentMethodRequest
    required:
      - customerId
      - paymentMethodId
      - paymentProviderName
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: the unique identifier of the Customer owning the cart.
        type: string
        x-nullable: false
      paymentMethodId:
        description: the unique identifier of the payment method to be removed
        type: string
        x-nullable: false
      paymentProviderName:
        description: 'the name of the payment provider to use. If null, all methods will be returned'
        type: string
    description: Customers represents entities which have the ability to buy products.
    type: object
  FindNearestStoresRequest:
    title: FindNearestStoresRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentMethodType:
        description: The fulfillment method type used to filter the stores.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      maximumItemsCount:
        description: The maximum number of stores
        type: integer
        format: int32
        x-nullable: false
      searchTerms:
        description: The search terms.
        type: string
      startingIndex:
        description: The starting index used to find the stores
        type: integer
        format: int32
        x-nullable: false
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  GetStoreByNameRequest:
    title: GetStoreByNameRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includeAddresses:
        description: Specifies whether or not to load the collection of addresses linked to the store.
        type: boolean
        x-nullable: false
      includeOperatingStatus:
        description: Specifies whether or not to load the operating status the store.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the store.
        type: boolean
        x-nullable: false
      name:
        description: the name of the store.
        type: string
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  GetStoreByNumberRequest:
    title: GetStoreByNumberRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includeAddresses:
        description: Specifies whether or not to load the collection of addresses linked to the store.
        type: boolean
        x-nullable: false
      includeOperatingStatus:
        description: Specifies whether or not to load the operating status the store.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the store.
        type: boolean
        x-nullable: false
      number:
        description: the number of the store.
        type: string
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  ValidateUserRequest:
    title: ValidateUserRequest
    properties:
      password:
        description: The Password of the user to validate
        type: string
      userName:
        description: The UserName of the user to validate
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  LoginRequest:
    title: LoginRequest
    properties:
      password:
        description: The Password used to login
        type: string
      userName:
        description: The UserName used to login
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  ResetPasswordRequest:
    title: ResetPasswordRequest
    properties:
      email:
        description: The customer's email address
        type: string
      password:
        description: The password
        type: string
      passwordAnswer:
        description: The answer for the password 'question-answer'
        type: string
      username:
        description: The username
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  CreateCustomerMembershipRequest:
    title: CreateCustomerMembershipRequest
    properties:
      email:
        description: The Email of the customer
        type: string
      firstName:
        description: The FirstName of the customer
        type: string
      id:
        description: The unique id of the Customer
        type: string
        x-nullable: false
      language:
        description: Gets or sets the preferred communication language of the customer.
        type: string
      lastName:
        description: The LastName of the customer
        type: string
      password:
        description: The Password of the customer
        type: string
      passwordAnswer:
        description: The 'Answer' for the password 'question and andswer'
        type: string
      passwordQuestion:
        description: The 'Question' for the password 'question and andswer'
        type: string
      username:
        description: The UserName of the customer
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  GetMembershipConfigurationRequest:
    title: GetMembershipConfigurationRequest
    properties: {}
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  ChangePasswordRequest:
    title: ChangePasswordRequest
    properties:
      newPassword:
        description: The new (replacement) password
        type: string
      oldPassword:
        description: The old (current) password
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  ChangeUserNameRequest:
    title: ChangeUserNameRequest
    properties:
      newUsername:
        description: The new username
        type: string
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  UnlockUserRequest:
    title: UnlockUserRequest
    properties: {}
    description: Membership represents a set of Authorization rules applied to a Customer.
    type: object
  FindOrganizationsRequest:
    title: FindOrganizationsRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      searchTerms:
        description: The search terms to search for.
        type: string
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  GetOrganizationRequest:
    title: GetOrganizationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to fully load the addresses.
        type: boolean
        x-nullable: false
      organizationId:
        description: The identifier of the organization to retrieve.
        type: string
        x-nullable: false
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  UpdateOrganizationRequest:
    title: UpdateOrganizationRequest
    properties:
      addressIds:
        description: The organization's addresses.
        type: array
        items:
          type: string
          x-nullable: false
      created:
        description: the date the organization was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the organization.
        type: string
      description:
        description: the description of the organization.
        type: string
      email:
        description: the email associated to the organization.
        type: string
      faxExtension:
        description: the fax extension of the organization.
        type: string
      faxNumber:
        description: the fax number of the organization.
        type: string
      isActive:
        description: whether or not this organization is currently active.
        type: boolean
        x-nullable: false
      lastModified:
        description: the date of the last modification to the organization.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the organization.
        type: string
      manager:
        description: the full name of the organization manager
        type: string
      name:
        description: the name of the organization. Must be unique.
        type: string
      phoneExtension:
        description: the phone extension of the organization.
        type: string
      phoneNumber:
        description: the phone number of the organization.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      tradingPartnerNumber:
        description: the trading partner number of the organization.
        type: string
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  CreateOrganizationRequest:
    title: CreateOrganizationRequest
    properties:
      addressIds:
        description: The organization's addresses.
        type: array
        items:
          type: string
          x-nullable: false
      created:
        description: the date the organization was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the organization.
        type: string
      description:
        description: the description of the organization.
        type: string
      email:
        description: the email associated to the organization.
        type: string
      faxExtension:
        description: the fax extension of the organization.
        type: string
      faxNumber:
        description: the fax number of the organization.
        type: string
      isActive:
        description: whether or not this organization is currently active.
        type: boolean
        x-nullable: false
      lastModified:
        description: the date of the last modification to the organization.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the organization.
        type: string
      manager:
        description: the full name of the organization manager
        type: string
      name:
        description: the name of the organization. Must be unique.
        type: string
      organizationId:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      phoneExtension:
        description: the phone extension of the organization.
        type: string
      phoneNumber:
        description: the phone number of the organization.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      tradingPartnerNumber:
        description: the trading partner number of the organization.
        type: string
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
    type: object
  GetProfileInstanceRequest:
    title: GetProfileInstanceRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      entityId:
        description: Unique identifier for the entity.
        type: string
        x-nullable: false
      entityTypeName:
        description: Name of the custom type of the profile instance represented by this entity.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  UpdateCustomProfileRequest:
    title: UpdateCustomProfileRequest
    properties:
      created:
        description: The date and time the entity was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the entity.
        type: string
      isActive:
        description: Whether this entity can be used in business processes or linked to a scope.
        type: boolean
        x-nullable: false
      lastModified:
        description: Date and time that the last modification was applied to the entity.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the entity.
        type: string
      name:
        description: The unique name given to identify the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      sequenceNumber:
        description: The sort order.
        type: integer
        format: int32
        x-nullable: false
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  DeleteCustomProfileRequest:
    title: DeleteCustomProfileRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      entityId:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      entityTypeName:
        description: Entity type name.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  GetProfileInstancesRequest:
    title: GetProfileInstancesRequest
    required:
      - ids
    properties:
      ids:
        description: Unique identifiers for the entities.
        type: array
        items:
          type: string
          x-nullable: false
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  FindProfileInstancesRequest:
    title: FindProfileInstancesRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      searchTerms:
        description: The phrases to search for in a text field containing all the information of the CustomProfile.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  AddAddressToCustomProfileRequest:
    title: AddAddressToCustomProfileRequest
    properties:
      addressName:
        description: The name of the address. A customer can not have two addresses with the same name.
        type: string
      city:
        description: The city of the address.
        type: string
      countryCode:
        description: The 2 letter country ISO code.
        type: string
      email:
        description: The email address.
        type: string
      entityTypeName:
        description: The name of the custom type of the profile instance represented by this entity.
        type: string
      firstName:
        description: The resident first name.
        type: string
      id:
        description: The unique identifier of the new address (will be generated if not specified).
        type: string
        x-nullable: false
      lastName:
        description: The resident last name.
        type: string
      latitude:
        description: The latitude coordinate of the address.
        type: number
        format: double
      line1:
        description: The first line of the address.
        type: string
      line2:
        description: The second line of the address.
        type: string
      longitude:
        description: The longitude coordinate of the address.
        type: number
        format: double
      notes:
        description: The notes.
        type: string
      phoneExtension:
        description: The phone extension of the address.
        type: string
      phoneNumber:
        description: The phone number of the address.
        type: string
      postalCode:
        description: The postal code of the address.
        type: string
      regionCode:
        description: The 2 letter region ISO code.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  CreateCustomProfileRequest:
    title: CreateCustomProfileRequest
    properties:
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      entityId:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      isActive:
        description: Indicate whether this entity can be used in business processes or linked to a scope
        type: boolean
        x-nullable: false
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      name:
        description: Unique name given to identify the entity
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      sequenceNumber:
        description: The sort order
        type: integer
        format: int32
        x-nullable: false
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  AssociateEntityRequest:
    title: AssociateEntityRequest
    properties: {}
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  DisassociateEntityRequest:
    title: DisassociateEntityRequest
    required:
      - attributeName
      - entityId
      - parentEntityTypeName
      - parentId
      - scopeId
    properties:
      attributeName:
        description: The name of the attribute in the parent definition under which the association is kept.
        type: string
      entityId:
        description: The unique identifier for the associated entity.
        type: string
        x-nullable: false
      parentEntityTypeName:
        description: Gets the name (business key) of the custom type of the profile instance to which the entity will be associated.
        type: string
      parentId:
        description: The unique identifier for the parent entity.
        type: string
        x-nullable: false
      scopeId:
        description: The identifier of scope in which the parent entity belong.
        type: string
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
    type: object
  SetDefaultCustomerPaymentMethodRequest:
    title: SetDefaultCustomerPaymentMethodRequest
    required:
      - default
    properties:
      default:
        description: whether the payment method is set to default or non-default
        type: boolean
        x-nullable: false
    description: Customers represents entities which have the ability to buy products.
    type: object
  ExportProfileSchemaRequest:
    title: ExportProfileSchemaRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      requestedBy:
        description: the user name of the request initiator.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProfileSchemaRequest:
    title: ImportProfileSchemaRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      fileName:
        description: The path of the file(s) to be imported.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProductsRequest:
    title: ImportProductsRequest
    properties:
      allowPricesDeleting:
        description: Whether or not the import have to delete prices which are not specified in the import file.
        type: boolean
        x-nullable: false
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      maximumErrors:
        description: The maximum number of validation errors that can be encountered. 0 means infinite number.
        type: integer
        format: int32
        x-nullable: false
      path:
        description: The path of the file(s) to import.
        type: string
      rebuildSearchIndex:
        description: Indicates whether or not the search indexes are rebuilt after the import. The default value is True (when not set)
        type: boolean
      reIndex:
        description: Whether or not the indexes are built after the import. The default value is True (when not set).
        type: boolean
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ExportProductsRequest:
    title: ExportProductsRequest
    properties:
      breakInheritance:
        description: Indicates to break or not inheritance for Products.
        type: boolean
        x-nullable: false
      category:
        description: The category of products to be exported.
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      cultures:
        description: The languages to include in the export.
        type: array
        items:
          type: string
      fileFormat:
        description: 'The file format of the export, JSON or XML.'
        type: string
      filePath:
        description: The File path in the blob storage.
        type: string
      includeCategories:
        description: Indicates to include or not the categories.
        type: boolean
        x-nullable: false
      includePrices:
        description: Indicates to include or not the prices.
        type: boolean
        x-nullable: false
      includeProducts:
        description: Indicates to include or not the products.
        type: boolean
        x-nullable: false
      includeSchema:
        description: Indicates to include or not the schema.
        type: boolean
        x-nullable: false
      taskId:
        description: The task id.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ExportOrderSchemaRequest:
    title: ExportOrderSchemaRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      fileName:
        description: File name containing the exported order schema.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportOrderSchemaRequest:
    title: ImportOrderSchemaRequest
    required:
      - fileName
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      fileName:
        description: File name containing the order schema to import.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ExportProfilesRequest:
    title: ExportProfilesRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      excludeDeletedProfiles:
        description: Indicates whether to exclude the deleted profiles.
        type: boolean
        x-nullable: false
      fileFormat:
        description: 'The file format of the export, JSON or XML. If not set the export will be in JSON. (Optional)'
        type: string
      filePath:
        description: The File path in the blob storage. (Optional)
        type: string
      profilesToExport:
        description: 'Profiles to export, if not set all profiles will be exported. (Optional)'
        type: array
        items:
          type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProfilesRequest:
    title: ImportProfilesRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      filePath:
        description: The File path in the blob storage. (Required)
        type: string
      importData:
        description: False to skip the import ( Default true)
        type: boolean
      preValidate:
        description: False to skip the prevalidation ( Default true)
        type: boolean
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportInventoryItemsRequest:
    title: ImportInventoryItemsRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      ignoreReservedItems:
        description: Indicates to ignore or not the reserved Items.
        type: boolean
        x-nullable: false
      path:
        description: the path of the file(s) to import
        type: string
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportOrdersRequest:
    title: ImportOrdersRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      orderLocationNumber:
        description: The location (store) of the order
        type: string
      orderNumberBatchPrefix:
        description: Prefix used to allow system integrator to ensure that there will be no clash with current order numbering
        type: string
      path:
        description: The path of the file(s) to import.
        type: string
      replaceExistingOrders:
        description: Indicates that existing orders will be replaced based on their Order Number
        type: boolean
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  GetStoreRequest:
    title: GetStoreRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      id:
        description: the unique id of the Store
        type: string
        x-nullable: false
      includeAddresses:
        description: Specifies whether or not to load the collection of addresses linked to the store.
        type: boolean
        x-nullable: false
      includeOperatingStatus:
        description: Specifies whether or not to load the operating status the store.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the store.
        type: boolean
        x-nullable: false
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  DeleteStoreRequest:
    title: DeleteStoreRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      id:
        description: the unique id of the Store
        type: string
        x-nullable: false
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  FindStoresRequest:
    title: FindStoresRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      includeChildScopes:
        description: Includes the stores of the child scopes.
        type: boolean
        x-nullable: false
      searchTerms:
        description: The word or phrase the store name or number is beginning with
        type: string
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  CreateOrUpdateStoreByNumberRequest:
    title: CreateOrUpdateStoreByNumberRequest
    properties:
      addresses:
        description: The store's addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the delivery service opening hours schedule. This value is not loaded by default.
      deliveryScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for delivery
        type: boolean
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the store. Use this to provide internal (admin) users information about this store.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the store. This is a multilingual value.
      email:
        description: the email of the store. This could be a specific person's address or a general customerService@ address depending on the store.
        type: string
      faxExtension:
        description: the extension for the fax number of the store.
        type: string
      faxNumber:
        description: the fax number of the store.
        type: string
      inventoryLocationId:
        description: The inventory location identifier related to this fulfillment location
        type: string
      inventoryProviderId:
        description: The inventory provider identifier to use with this fulfillment location
        type: string
      isActive:
        description: 'Is this store currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the store to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      isAtpEnabled:
        description: value indicating whether inventory availability to promise is enabled
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: value indicating whether this store has inventory enabled
        type: boolean
        x-nullable: false
      isPickUpLocation:
        description: a value indicating whether this store is a pickup location for order fulfillment.
        type: boolean
        x-nullable: false
      manager:
        description: the full name of the manager of the store.
        type: string
      name:
        description: the name of the store. Each store must have a name that unique in the system.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the store operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the store.
        type: string
      phoneNumber:
        description: the telephone number of the store.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the pickup service opening hours schedule. This value is not loaded by default.
      pickUpScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for pickup
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      schedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the store/warehouse opening hours schedule. This value is not loaded by default.
      storeType:
        description: Indicates if this is a physical or virtual store.
        type: string
        enum:
          - Physical
          - Virtual
      supportDelivery:
        description: a value indicating whether this store supports delivery for order fulfillment.
        type: boolean
        x-nullable: false
      supportPickUp:
        description: a value indicating whether this store supports pickup for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipping:
        description: a value indicating whether this store supports shipping for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipToStore:
        description: a value indicating whether this store supports ship to store for order fulfillment.
        type: boolean
        x-nullable: false
      timeZone:
        description: The time zone of the schedules.
        type: string
    description: Stores are entities which represents physical stores or an online/web stores.
    type: object
  Address:
    title: Address
    properties:
      addressName:
        description: Name of the address. A customer/store/warehouse cannot have two addresses with the same name.
        type: string
      city:
        description: City of the address
        type: string
      countryCode:
        description: 2 letter country ISO code
        type: string
      email:
        description: Email
        type: string
      firstName:
        description: Resident first name
        type: string
      id:
        description: Unique identifier
        type: string
        x-nullable: false
      isPreferredBilling:
        description: a boolean which specifies if this address should be used as a billing address in the case of multiple addresses.
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: a boolean which specifies if this address should be used as a shipping address in the case of multiple addresses.
        type: boolean
        x-nullable: false
      lastModified:
        description: the date that the last modification was applied to the address.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the operator who last modified the address.
        type: string
      lastName:
        description: Resident last name
        type: string
      latitude:
        description: Latitude coordinate of the Address
        type: number
        format: double
      line1:
        description: First line of the address
        type: string
      line2:
        description: Second line of the address
        type: string
      longitude:
        description: Longitude coordinate of the address
        type: number
        format: double
      notes:
        description: Notes
        type: string
      phoneExtension:
        description: Phone extension of the address
        type: string
      phoneNumber:
        description: Phone number of the address
        type: string
      postalCode:
        description: Postal code of the address
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
      regionCode:
        description: 2 letter region ISO code
        type: string
    description: Address
    type: object
  FulfillmentSchedule:
    title: FulfillmentSchedule
    properties:
      fulfillmentLocationId:
        description: A unique identifier for the FulfillmentLocation.
        type: string
      openingHourExceptions:
        description: This collection will contain every exception of the regular hours entered for the store or warehouse.
        type: array
        items:
          $ref: '#/definitions/DailyScheduleException'
      openingHours:
        description: This collection will contain one OpeningHour for each calendar week day.
        type: array
        items:
          $ref: '#/definitions/DailySchedule'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: Gets the property bag containing extended properties for this entity.
      scheduleType:
        description: the type of the schedule.
        type: string
        enum:
          - OpeningHours
          - Delivery
          - Pickup
    description: FulfillmentSchedule
    type: object
  DailyScheduleException:
    title: DailyScheduleException
    properties:
      endDate:
        description: Gets or sets the date on which the exception ends.
        type: string
        format: date-time
        x-nullable: false
      id:
        description: The unique identifier for this exception.
        type: string
        x-nullable: false
      isClosed:
        description: Indicates whether the Store/Warehouse is closed on that day.
        type: boolean
        x-nullable: false
      isRecurrent:
        description: 'Indicating whether the exception is recurrent, thus applying on the same date every year.'
        type: boolean
        x-nullable: false
      name:
        description: The name given for the exception for identification purpose.
        type: string
      openingTime:
        $ref: '#/definitions/ScheduleInterval'
        description: The time of day when the Store/Warehouse is open.
      startDate:
        description: The date on which the exception starts.
        type: string
        format: date-time
        x-nullable: false
    description: DailyScheduleException
    type: object
  ScheduleInterval:
    title: ScheduleInterval
    properties:
      beginingTime:
        description: The date and hour of the day from which the time interval is beginning.
        type: string
        x-nullable: false
      endingTime:
        description: The date and hour of the day to which the time interval is ending.
        type: string
        x-nullable: false
    description: ScheduleInterval
    type: object
  DailySchedule:
    title: DailySchedule
    properties:
      day:
        description: the day of the week to which this daily schedule applies.
        type: string
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      isClosed:
        description: Indicates whether the store/warehouse is closed on that day of the week.
        type: boolean
        x-nullable: false
      isOpenedAllDay:
        description: Indicates whether the store/warehouse is opened all day on that day of the week.
        type: boolean
        x-nullable: false
      openingTimes:
        description: The time intervals of the day during which the store/warehouse is open.
        type: array
        items:
          $ref: '#/definitions/ScheduleInterval'
    description: DailySchedule
    type: object
  OperatingStatus:
    title: OperatingStatus
    properties:
      availabilityStatus:
        $ref: '#/definitions/AvailabilityStatus'
        description: 'the store/warehouse availability status AvailabilityStatus:  is it currently opened/closed, the reason for closing and the estimated duration.'
      deliveryAvailabilityStatus:
        $ref: '#/definitions/AvailabilityStatus'
        description: 'the store/warehouse delivery availability status AvailabilityStatus:  is it currently opened/closed, the reason for closing and the estimated duration.'
      deliveryQuoteTime:
        $ref: '#/definitions/QuoteTime'
        description: the delivery quote time.
      id:
        description: The unique identifier for the Store/Warehouse to which this entity is associated.
        type: string
      pickupAvailabilityStatus:
        $ref: '#/definitions/AvailabilityStatus'
        description: 'the store/warehouse pickup availability status AvailabilityStatus: is it currently opened/closed, the reason for closing and the estimated duration.'
      pickupQuoteTime:
        $ref: '#/definitions/QuoteTime'
        description: the pickup quote time.
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
    description: OperatingStatus
    type: object
  AvailabilityStatus:
    title: AvailabilityStatus
    properties:
      estimatedDuration:
        $ref: '#/definitions/Duration'
        description: The estimated duration of the interruption.
      isAvailable:
        description: Indicates whether the entity is available.
        type: boolean
        x-nullable: false
      reason:
        description: The reason for the interruption.
        type: string
    description: AvailabilityStatus
    type: object
  Duration:
    title: Duration
    properties:
      time:
        description: the number of minutes/hours/days for this duration.
        type: number
        format: double
        x-nullable: false
      timeScale:
        description: ' Gets or sets the time scale.'
        type: string
        enum:
          - Minutes
          - Hours
          - Days
    description: Duration
    type: object
  QuoteTime:
    title: QuoteTime
    properties:
      couldBeDelayed:
        description: a value indicating whether the quotes could be delayed.
        type: boolean
        x-nullable: false
      delayEstimatedDuration:
        $ref: '#/definitions/Duration'
        description: the estimated duration of the delay.
      delayReason:
        description: the delay reason.
        type: string
      duration:
        $ref: '#/definitions/Duration'
        description: the duration of a quote.
    description: QuoteTime
    type: object
  GetOperatingStatusRequest:
    title: GetOperatingStatusRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: The unique identifier of the FulfillmentLocation (Store or other) to retrieve.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetScheduleRequest:
    title: GetScheduleRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: The unique identifier of the Store to retrieve.
        type: string
        x-nullable: false
      scheduleType:
        description: ' Gets or sets the type of the schedule. The possible values are : OpeningHours, Delivery or PickUp.'
        type: string
        enum:
          - OpeningHours
          - Delivery
          - Pickup
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationByIdElapsedTimeRequest:
    title: GetFulfillmentLocationByIdElapsedTimeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      endDate:
        description: The end date to determine elapsed time.
        type: string
        format: date-time
        x-nullable: false
      fulfillmentLocationId:
        description: The unique identifier of the fulfillment location.
        type: string
        x-nullable: false
      scheduleType:
        description: The schedule type to use
        type: string
        enum:
          - OpeningHours
          - Delivery
          - Pickup
      startDate:
        description: The start date to determine elapsed time.
        type: string
        format: date-time
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  SetFulfillmentLocationInventoryManagementRequest:
    title: SetFulfillmentLocationInventoryManagementRequest
    properties:
      inventoryLocationId:
        description: the unique identifier of the inventory location.
        type: string
      inventoryProviderId:
        description: the identifier of the inventory provider.
        type: string
      isAtpEnabled:
        description: a value indicating whether the inventory availability to promise is enabled.
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: whether the inventory is enabled.
        type: boolean
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  CheckAvailabilitySlotRequest:
    title: CheckAvailabilitySlotRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      endDate:
        description: The Date and Time of the desired slot. The calendar date on which the slot should be checked and the time at which the slot ends
        type: string
        format: date-time
        x-nullable: false
      orderId:
        description: the unique identifier of the Order.
        type: string
        x-nullable: false
      shipmentId:
        description: the unique identifier of the Shipment.
        type: string
        x-nullable: false
      startDate:
        description: The Date and Time of the desired slot. The calendar date on which the slot should be checked and the time at which the slot starts
        type: string
        format: date-time
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  FindWarehousesRequest:
    title: FindWarehousesRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      includeChildScopes:
        description: Includes the warehouses of the child score.
        type: boolean
        x-nullable: false
      searchTerms:
        description: The word or phrase the warehouse name or number is beginning with
        type: string
    description: Warehouses are entities which represents physical warehouses.
    type: object
  CreateOrUpdateWarehouseByNumberRequest:
    title: CreateOrUpdateWarehouseByNumberRequest
    properties:
      addresses:
        description: The warehouse's addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      associatedScopes:
        description: The warehouse's associated scopes.
        type: array
        items:
          type: string
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the delivery service opening hours schedule. This value is not loaded by default.
      deliveryScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for delivery
        type: boolean
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the warehouse. Use this to provide internal (admin) users information about this warehouse.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the warehouse. This is a multilingual value.
      email:
        description: the email of the warehouse. This could be a specific person's address or a general customerService@ address depending on the warehouse.
        type: string
      faxExtension:
        description: the extension for the fax number of the warehouse.
        type: string
      faxNumber:
        description: the fax number of the warehouse.
        type: string
      inventoryLocationId:
        description: The inventory location identifier related to this fulfillment location
        type: string
      inventoryProviderId:
        description: The inventory provider identifier to use with this fulfillment location
        type: string
      isActive:
        description: 'Is this warehouse currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the warehouse to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      isAtpEnabled:
        description: value indicating whether inventory availability to promise is enabled.
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: value indicating whether inventory is enabled for this fulfillment location.
        type: boolean
        x-nullable: false
      manager:
        description: the full name of the manager of the warehouse.
        type: string
      name:
        description: the name of the warehouse. Each warehouse must have a name that unique in the system.
        type: string
      number:
        description: a business centric number to identify the warehouse that could be used to link the warehouse to external data.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the warehouse operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the warehouse.
        type: string
      phoneNumber:
        description: the telephone number of the warehouse.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the pickup service opening hours schedule. This value is not loaded by default.
      pickUpScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for pickup
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      schedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the opening hours schedule. This value is not loaded by default.
      supportDelivery:
        description: a value indicating whether this warehouse supports delivery for order fulfillment.
        type: boolean
        x-nullable: false
      supportPickUp:
        description: a value indicating whether this warehouse supports pickup for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipping:
        description: a value indicating whether this warehouse supports shipping for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipToStore:
        description: a value indicating whether this warehouse supports ship to store for order fulfillment.
        type: boolean
        x-nullable: false
      timeZone:
        description: The time zone of the schedules.
        type: string
    description: Warehouses are entities which represents physical warehouses.
    type: object
  UpdateWarehouseRequest:
    title: UpdateWarehouseRequest
    properties:
      addresses:
        description: The warehouse's addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      associatedScopes:
        description: The warehouse's associated scopes.
        type: array
        items:
          type: string
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the delivery service opening hours schedule. This value is not loaded by default.
      deliveryScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for delivery
        type: boolean
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the warehouse. Use this to provide internal (admin) users information about this warehouse.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the warehouse. This is a multilingual value.
      email:
        description: the email of the warehouse. This could be a specific person's address or a general customerService@ address depending on the warehouse.
        type: string
      faxExtension:
        description: the extension for the fax number of the warehouse.
        type: string
      faxNumber:
        description: the fax number of the warehouse.
        type: string
      inventoryLocationId:
        description: The inventory location identifier related to this fulfillment location
        type: string
      inventoryProviderId:
        description: The inventory provider identifier to use with this fulfillment location
        type: string
      isActive:
        description: 'Is this warehouse currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the warehouse to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      isAtpEnabled:
        description: value indicating whether inventory availability to promise is enabled.
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: value indicating whether inventory is enabled for this fulfillment location.
        type: boolean
        x-nullable: false
      manager:
        description: the full name of the manager of the warehouse.
        type: string
      name:
        description: the name of the warehouse. Each warehouse must have a name that unique in the system.
        type: string
      number:
        description: a business centric number to identify the warehouse that could be used to link the warehouse to external data.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the warehouse operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the warehouse.
        type: string
      phoneNumber:
        description: the telephone number of the warehouse.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the pickup service opening hours schedule. This value is not loaded by default.
      pickUpScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for pickup
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      schedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the opening hours schedule. This value is not loaded by default.
      supportDelivery:
        description: a value indicating whether this warehouse supports delivery for order fulfillment.
        type: boolean
        x-nullable: false
      supportPickUp:
        description: a value indicating whether this warehouse supports pickup for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipping:
        description: a value indicating whether this warehouse supports shipping for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipToStore:
        description: a value indicating whether this warehouse supports ship to store for order fulfillment.
        type: boolean
        x-nullable: false
      timeZone:
        description: The time zone of the schedules.
        type: string
    description: Warehouses are entities which represents physical warehouses.
    type: object
  GetWarehouseRequest:
    title: GetWarehouseRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      id:
        description: The unique id of the warehouse.
        type: string
        x-nullable: false
      includeAddresses:
        description: Specifies whether or not to load the collection of addresses linked to the warehouse.
        type: boolean
        x-nullable: false
      includeOperatingStatus:
        description: Specifies whether or not to load the operating status of the warehouse.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the warehouse.
        type: boolean
        x-nullable: false
    description: Warehouses are entities which represents physical warehouses.
    type: object
  CreateWarehouseRequest:
    title: CreateWarehouseRequest
    properties:
      addresses:
        description: The warehouse's addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      associatedScopes:
        description: The warehouse's associated scopes.
        type: array
        items:
          type: string
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the delivery service opening hours schedule. This value is not loaded by default.
      deliveryScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for delivery
        type: boolean
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the warehouse. Use this to provide internal (admin) users information about this warehouse.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the warehouse. This is a multilingual value.
      email:
        description: the email of the warehouse. This could be a specific person's address or a general customerService@ address depending on the warehouse.
        type: string
      faxExtension:
        description: the extension for the fax number of the warehouse.
        type: string
      faxNumber:
        description: the fax number of the warehouse.
        type: string
      inventoryLocationId:
        description: The inventory location identifier related to this fulfillment location
        type: string
      inventoryProviderId:
        description: The inventory provider identifier to use with this fulfillment location
        type: string
      isActive:
        description: 'Is this warehouse currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the warehouse to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      isAtpEnabled:
        description: value indicating whether inventory availability to promise is enabled.
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: value indicating whether inventory is enabled for this fulfillment location.
        type: boolean
        x-nullable: false
      manager:
        description: the full name of the manager of the warehouse.
        type: string
      name:
        description: the name of the warehouse. Each warehouse must have a name that unique in the system.
        type: string
      number:
        description: a business centric number to identify the warehouse that could be used to link the warehouse to external data.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the warehouse operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the warehouse.
        type: string
      phoneNumber:
        description: the telephone number of the warehouse.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the pickup service opening hours schedule. This value is not loaded by default.
      pickUpScheduleManaged:
        description: A value indicating whether this fulfillment location manage his own schedule for pickup
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      schedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the opening hours schedule. This value is not loaded by default.
      supportDelivery:
        description: a value indicating whether this warehouse supports delivery for order fulfillment.
        type: boolean
        x-nullable: false
      supportPickUp:
        description: a value indicating whether this warehouse supports pickup for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipping:
        description: a value indicating whether this warehouse supports shipping for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipToStore:
        description: a value indicating whether this warehouse supports ship to store for order fulfillment.
        type: boolean
        x-nullable: false
      timeZone:
        description: The time zone of the schedules.
        type: string
      id:
        description: the unique identifier of the Warehouse.
        type: string
        x-nullable: false
    description: Warehouses are entities which represents physical warehouses.
    type: object
  UpdateWarehouseScopeAssociationsRequest:
    title: UpdateWarehouseScopeAssociationsRequest
    properties:
      associatedScopes:
        description: The warehouse's associated scopes.
        type: array
        items:
          type: string
    description: Warehouses are entities which represents physical warehouses.
    type: object
  DeleteWarehouseRequest:
    title: DeleteWarehouseRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      id:
        description: the unique identifier of the Warehouse to be updated.
        type: string
        x-nullable: false
    description: Warehouses are entities which represents physical warehouses.
    type: object
  ProcessPromotionEngineRequest:
    title: ProcessPromotionEngineRequest
    properties:
      cart:
        $ref: '#/definitions/Cart'
        description: The cart to process
      customer:
        $ref: '#/definitions/Customer'
        description: The customer
      orderOrCartDateTime:
        description: The Order Creation date if exists or the cart modification date
        type: string
        format: date-time
        x-nullable: false
      processPromotionEngineMode:
        description: The process mode of the PromotionEngine
        type: string
        enum:
          - Live
          - OnlySavedPromotionsInCart
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  Cart:
    title: Cart
    required:
      - id
      - customerId
      - name
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      additionalFeeTotal:
        description: the sum of LineItems totals.
        type: number
        format: double
      adjustmentTotal:
        description: 'the total amount of adjustments.  This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      billingCurrency:
        description: the currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      cartType:
        description: 'the cart type, according to the CartType lookup.'
        type: string
      cartVersion:
        description: the version of the cart
        type: string
      coupons:
        description: the collection of coupon codes included in the order.
        type: array
        items:
          $ref: '#/definitions/Coupon'
      cultureName:
        description: the culture in which the cart is being processed.
        type: string
      customer:
        $ref: '#/definitions/CustomerSummary'
        description: the customer information.
      customerId:
        description: the ID of the customer owning this cart.
        type: string
        x-nullable: false
      discountTotal:
        description: 'the computed sum of all discounts applied to the cart (including order, line item and fulfillment level discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      fulfillmentCost:
        description: 'the computed sum of all shipment cost. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      fulfillmentCostWithoutDiscount:
        description: the fulfillment cost without discount.
        type: number
        format: double
        x-nullable: false
      fulfillmentLevelDiscountTotal:
        description: the sum of Shipments discounts. Shipment.DiscountAmount.
        type: number
        format: double
        x-nullable: false
      itemCount:
        description: the line item count.
        type: integer
        format: int32
        x-nullable: false
      lineItemLevelDiscount:
        description: the minimum value between the sum of LineItem.DiscountAmount and LineItemsTotalWithoutDiscount.
        type: number
        format: double
        x-nullable: false
      lineItemsTotal:
        description: the sum of LineItems totals.
        type: number
        format: double
        x-nullable: false
      lineItemsTotalWithoutDiscount:
        description: the sum of LineItems totals without discount.
        type: number
        format: double
        x-nullable: false
      merchandiseTotal:
        description: 'the total amount of all line items merchandise without discounts. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      name:
        description: the name of the cart.
        type: string
      orderLocation:
        $ref: '#/definitions/OrderLocationSummary'
        description: the order location information.
      originalPromotions:
        description: the promotion versions applied for the original order.
        type: array
        items:
          $ref: '#/definitions/PromotionVersion'
      payments:
        description: The collection of payments to use for this order.
        type: array
        items:
          $ref: '#/definitions/Payment'
      scopeId:
        description: the unique identifier of the scope associated to the cart.
        type: string
      shipmentLevelDiscountTotal:
        description: the sum of Discounts amounts.
        type: number
        format: double
        x-nullable: false
      shipments:
        description: the collection of shipments associated to this order.
        type: array
        items:
          $ref: '#/definitions/Shipment'
      source:
        description: the cart source.
        type: string
      status:
        description: the status of the cart.
        type: string
      subTotal:
        description: 'the computed sum of all line items totals, including line item and order level discount. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      subTotalDiscount:
        description: the sum of LineItems totals without discount.
        type: number
        format: double
        x-nullable: false
      taxTotal:
        description: 'the computed sum of all tax amount for the order. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      total:
        description: 'the grand total for the cart. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
    description: Cart
    type: object
  Coupon:
    title: Coupon
    required:
      - promotionId
    properties:
      couponCode:
        description: The coupon code. This is the string that is to be entered on the Cart or Order to be able to fetch the coupon and apply the promotion. It is unique in the system.
        type: string
      couponState:
        description: Gets or sets a value to indicate if the coupon is usable and the reason when it is not.
        type: string
        enum:
          - Unspecified
          - Ok
          - NotYetActive
          - Expired
          - GlobalMaximumUsed
          - CustomerMaximumUsed
          - CampaignNotFound
          - CampaignNotLive
          - InvalidCoupon
          - ValidCouponCannotApply
      displayText:
        description: The coupon display text.
        type: string
      hasBeenConsumed:
        description: Gets or sets a value indicating whether or not the coupon has been consumed in a previous order submission. This will be used to un-consume a coupon if it is no longer active when submitted. (Cart and draft only)
        type: boolean
        x-nullable: false
      id:
        description: The unique identifier of the coupon.
        type: string
        x-nullable: false
      isActive:
        description: Gets or sets a value indicating whether or not the coupon is being applied to the current order. (Cart and draft only)
        type: boolean
        x-nullable: false
      isDeleted:
        description: Gets or sets a value indicating whether or not the coupon has a soft delete. This is used to ensure that coupons that have been previously consumed are not removed before they are de-consumed. (Cart and draft only)
        type: boolean
        x-nullable: false
      mode:
        description: 'The coupon mode.  This mode is used to know if the coupon is unique for this promotion, or part of a set of coupons.'
        type: string
        enum:
          - Unspecified
          - None
          - Single
          - Multiple
      promotionId:
        description: The unique identifier of the promotion to which the coupon is associated.
        type: string
        x-nullable: false
      usedCount:
        description: Gets or sets the number of times the promo code was used.
        type: integer
        format: int32
        x-nullable: false
    description: Coupon
    type: object
  CustomerSummary:
    title: CustomerSummary
    properties:
      email:
        description: the email address of the customer owning this cart.
        type: string
      firstName:
        description: the first name of the customer owning this cart.
        type: string
      lastName:
        description: Gets or set the last name of the customer owning this cart
        type: string
      middleName:
        description: Gets or set the middle name of the customer owning this cart
        type: string
      phone:
        description: the phone number of the customer owning this cart.
        type: string
      type:
        description: the type of the customer owning this cart.
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
    description: CustomerSummary
    type: object
  OrderLocationSummary:
    title: OrderLocationSummary
    properties:
      email:
        description: Get or set the email of the order location that will process the cart and to which the order is associated.
        type: string
      name:
        description: Get or set the name of the order location that will process the cart and to which the order is associated.
        type: string
      number:
        description: Get or set the sytem wide unique number of the order location that will process the cart and to which the order is associated.
        type: string
      timeZone:
        description: Get or set TimeZone email of the order location that will process the cart and to which the order is associated.
        type: string
    description: OrderLocationSummary
    type: object
  PromotionVersion:
    title: PromotionVersion
    properties:
      campaignId:
        description: The campaign Id which the promotion belongs.
        type: string
      promotionId:
        description: the promotion Identifier.
        type: string
      versionNumber:
        description: The version number.
        type: integer
        format: int32
        x-nullable: false
    description: PromotionVersion
    type: object
  Payment:
    title: Payment
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      amount:
        description: The amount of this payment.
        type: number
        format: double
        x-nullable: false
      billingAddress:
        $ref: '#/definitions/Address'
        description: The billing address.
      billingAddressId:
        description: The unique identifier of the billing address to use for this payment.
        type: string
        x-nullable: false
      created:
        description: The creation date.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identity of the user who created the payment.
        type: string
      lastModified:
        description: The last modification date.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identity of the user who modified the payment.
        type: string
      paymentCaptureAction:
        $ref: '#/definitions/PaymentCaptureAction'
        description: the payment capture action
      paymentDate:
        description: the date when the payment was made.
        type: string
        format: date-time
      paymentMethod:
        $ref: '#/definitions/PaymentMethod'
        description: The payment method.
      paymentStatus:
        description: 'The status of the payment. Typical values will include: Outstanding, Verified, Authorized, Paid'
        type: string
    description: Payment
    type: object
  PaymentCaptureAction:
    title: PaymentCaptureAction
    properties:
      paymentCaptureUrl:
        description: The url to capture the payment.
        type: string
      windowMode:
        description: The window mode.
        type: string
        enum:
          - Overlay
    description: PaymentCaptureAction
    type: object
  PaymentMethod:
    title: PaymentMethod
    properties:
      default:
        description: Whether this payment method is used when none are specified
        type: boolean
        x-nullable: false
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name of the payment method.
      enabled:
        description: Whether this payment method is currently enabled and can be used.
        type: boolean
        x-nullable: false
      id:
        description: The unique identifier for this payment method.
        type: string
        x-nullable: false
      paymentProviderName:
        description: The name of the associated payment provider.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this object.
      type:
        description: The PaymentMethodType that is associated with this payment method.
        type: string
        enum:
          - CreditCard
          - SavedCreditCard
          - GiftCertificate
          - PurchaseOrder
          - CashCard
          - Cash
          - Debit
          - OnSiteCredit
          - OnSiteDebit
          - Cheque
          - OnSiteUnspecified
          - Paypal
    description: PaymentMethod
    type: object
  Shipment:
    title: Shipment
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      additionalFeeAmount:
        description: 'The amount for all shipment additional fees applied to this shipment. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      additionalFees:
        description: The collection of additional fees to apply on this line item.
        type: array
        items:
          $ref: '#/definitions/ShipmentAdditionalFee'
      address:
        $ref: '#/definitions/Address'
        description: The address to use as destination for the shipment.
      adjustmentAmount:
        description: The shipment adjustment amount.
        type: number
        format: double
      adjustmentNote:
        description: The shipment adjustment note.
        type: string
      amount:
        description: The amount to pay for the shipment. The amount is usually set using the shipping method during the workflow execution.
        type: number
        format: double
      created:
        description: the date when the order as created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the user id of the user that created the shipment.
        type: string
      discountAmount:
        description: 'The discount amount to apply on the shipment. The sum of all applicable discounts, usually calculated during the workflow execution.'
        type: number
        format: double
      expectedDeliveryDate:
        description: The expected delivery date.
        type: string
        format: date-time
      fulfillmentLastAssignedDate:
        description: The last assigned date for the fulfillment.
        type: string
        format: date-time
      fulfillmentLocationId:
        description: The fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentLocationType:
        description: The fulfillment location type.
        type: string
        enum:
          - Unspecified
          - Store
          - Warehouse
      fulfillmentMethod:
        $ref: '#/definitions/FulfillmentMethod'
        description: The Fulfillment method.
      fulfillmentScheduledTimeBeginDate:
        description: The begin date and time scheduled for the fulfillment.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: The end date and time scheduled for the fulfillment.
        type: string
        format: date-time
      fulfillmentScheduleMode:
        description: The fulfillment schedule mode.
        type: string
        enum:
          - Asap
          - Specified
      fulfillmentScheduleReservationDate:
        description: the date the fulfillment reservation was done.
        type: string
        format: date-time
      fulfillmentScheduleReservationNumber:
        description: the reservation number for the scheduled fulfillment date and time.
        type: string
      lastModified:
        description: the date when the shipment was last modified.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the user id of the user that last modified the shipment.
        type: string
      lineItems:
        description: The collection of items included in the order. A line item represents a product and its quantity that the customer places in the cart.
        type: array
        items:
          $ref: '#/definitions/LineItem'
      pickUpLocationId:
        description: The pick-up location identifier required when the selected shipping method type is ship to store; any value will be ignored otherwise.
        type: string
      processingDate:
        description: the date the shipment is processed.
        type: string
        format: date-time
        x-nullable: false
      returnTrackingNumber:
        description: The shipment return tracking number provided by the shipping provider.
        type: string
      rewards:
        description: The collection of rewards to apply on this shipment. The collection is usually filled during the workflow execution.
        type: array
        items:
          $ref: '#/definitions/Reward'
      status:
        description: 'The shipment status, according to the Shipping Status lookup.'
        type: string
      taxes:
        description: The collection of taxes to apply on this shipment line items. The collection is usually filled during the workflow execution.
        type: array
        items:
          $ref: '#/definitions/Tax'
      taxProviderId:
        description: 'The id of the tax provider that will be used to calculate taxes on this shipment line items. The provider is usually used during the workflow execution, in the CalculateTaxes activity.'
        type: string
        x-nullable: false
      taxTotal:
        description: 'the total of all taxes to apply on the shipment. The sum of all applicable taxes, usually calculated during the workflow execution.'
        type: number
        format: double
      total:
        description: 'The total amount for the shipment, including discounts.'
        type: number
        format: double
      trackingNumber:
        description: The shipment tracking number provided by the shipping provider.
        type: string
    description: Shipment
    type: object
  ShipmentAdditionalFee:
    title: ShipmentAdditionalFee
    properties:
      amount:
        description: The amount of the additional fee.
        type: number
        format: double
        x-nullable: false
      description:
        description: The description of the additional fee.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the additional fee.
      id:
        description: The unique identifier of the additional fee.
        type: string
        x-nullable: false
      name:
        description: The name of the additional fee.
        type: string
      taxable:
        description: The amount of the additional fee.
        type: boolean
        x-nullable: false
      taxCategory:
        description: The tax category of the shipment additional fee.
        type: string
    description: ShipmentAdditionalFee
    type: object
  FulfillmentMethod:
    title: FulfillmentMethod
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      carrierName:
        description: The carrier name for this shipping method.
        type: string
      carrierOptionDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly carrier display name for this shipping method.
      carrierServiceLevel:
        description: The carrier service level for this shipping method.
        type: string
      cost:
        description: The cost of this shipping for this cart/order.
        type: number
        format: double
        x-nullable: false
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name for this shipping method.
      expectedDeliveryDate:
        description: The date at which the delivery is expected.
        type: string
        format: date-time
      fulfillmentMethodType:
        description: The FulfillmentMethodType to which the method belongs.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      name:
        description: The name of the Fulfillment method.
        type: string
      shipmentId:
        description: The unique identifier of the shipment associated to this shipment method.
        type: string
        x-nullable: false
      shippingProviderId:
        description: The shipping provider unique id.
        type: string
        x-nullable: false
      taxCategory:
        description: The tax category to use for tax on shipping. This value value is read from the ShippingProvider.
        type: string
    description: FulfillmentMethod
    type: object
  LineItem:
    title: LineItem
    required:
      - id
      - productId
      - quantity
      - catalogId
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      giftMessage:
        description: 'if the product is to be gift-wrapped, a message to be written on it.'
        type: string
      giftWrap:
        description: whether or not the item will wrapped in a gift presentation.
        type: boolean
        x-nullable: false
      placedPrice:
        description: Gets or sets the placed price of the line item at the moment the cart was submitted either on order creation or order modification. This value is set automatically by the system.
        type: number
        format: double
      productId:
        description: The unique identifier of the product.
        type: string
      quantity:
        description: The number of items bought for this Product.
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: the name of the recurring order program frequency.
        type: string
      recurringOrderProgramName:
        description: the name of the recurring order program.
        type: string
      variantId:
        description: 'The unique identifier of the product variant, if there is one.'
        type: string
      additionalFeeAmount:
        description: 'The amount for all line item additional fees applied to this line item. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      additionalFees:
        description: The collection of additional fees to apply on this line item.
        type: array
        items:
          $ref: '#/definitions/LineItemAdditionalFee'
      catalogId:
        description: The unique identifier of the catalog where the product belongs.
        type: string
      currentPrice:
        description: 'The price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      defaultListPrice:
        description: 'The default price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      defaultPrice:
        description: 'The default price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      discountAmount:
        description: 'The amount for all discounts applied to this line item. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      isGiftItem:
        description: item is a gift
        type: boolean
        x-nullable: false
      kvaDisplayValues:
        $ref: '#/definitions/PropertyBag'
        description: the key value attributes display values.
      kvaValues:
        $ref: '#/definitions/PropertyBag'
        description: the key value attributes values.
      listPrice:
        description: 'The price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      placedQuantity:
        description: 'The placed quantity of product to purchase at the moment the cart was submitted either on order creation or order modification. This value is set automatically by the system. A decimal number can be used for products sold with a unit of measure (pounds, kilos, etc.).'
        type: number
        format: double
        x-nullable: false
      pricingCalculationSummary:
        $ref: '#/definitions/PricingCalculationSummary'
        description: The pricing summary of the product.
      productDefinitionName:
        description: the product definition name.
        type: string
      productSummary:
        $ref: '#/definitions/CartProductSummary'
        description: the summary of the product.
      regularPrice:
        description: 'The current regular price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      reservationStatus:
        description: The LineItem inventory reservation status.
        type: string
      rewards:
        description: The collection of RewardDefinitions to apply on this line item.
        type: array
        items:
          $ref: '#/definitions/Reward'
      shipmentId:
        description: The unique identifier of the shipment to use for this item. The shipment reference must be available within the same cart or order.
        type: string
        x-nullable: false
      sku:
        description: The LineItem Sku
        type: string
      status:
        description: 'The LineItem status, according to the LineItemStatus lookup.'
        type: string
      total:
        description: 'The total amount for this line item, including discounts (list price * quantity - discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      totalWithoutDiscount:
        description: 'The total amount for this line item, including discounts (list price * quantity - discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
        x-nullable: false
    description: LineItem
    type: object
  LineItemAdditionalFee:
    title: LineItemAdditionalFee
    properties:
      amount:
        description: The amount of the additional fee.
        type: number
        format: double
        x-nullable: false
      calculationRule:
        description: The calculation of the additional fee.
        type: string
        enum:
          - PerUnit
          - PerLineItem
      description:
        description: The description of the additional fee.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the additional fee.
      id:
        description: The unique identifier of the additional fee.
        type: string
        x-nullable: false
      name:
        description: The name of the additional fee.
        type: string
      taxable:
        description: Indicates whether additional fee is taxable or not.
        type: boolean
        x-nullable: false
      taxCategory:
        description: The tax category of the line item additional fee.
        type: string
    description: LineItemAdditionalFee
    type: object
  PricingCalculationSummary:
    title: PricingCalculationSummary
    properties:
      currentPricePriceListCategory:
        description: The category of the current price
        type: string
      currentPricePriceListId:
        description: The id of the current price
        type: string
      currentPricePriceListType:
        description: The type of the current price
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      regularPricePriceListCategory:
        description: The category of the regular price
        type: string
      regularPricePriceListId:
        description: The id of the regular price
        type: string
    description: PricingCalculationSummary
    type: object
  CartProductSummary:
    title: CartProductSummary
    properties:
      allowSelectionWithoutScan:
        description: a value indicating whether the item allows selection without scan
        type: boolean
        x-nullable: false
      brand:
        description: the Brand of the product.
        type: string
      displayName:
        description: the display name of the product.
        type: string
      isProductWithoutPrice:
        description: True if the product has no price.
        type: boolean
        x-nullable: false
      itemFormat:
        description: the ItemFormat of the product.
        type: number
        format: double
        x-nullable: false
      primaryParentCategoryId:
        description: the PrimaryParentCategoryId of the product.
        type: string
      productWeight:
        description: The weight of the product.
        type: number
        format: double
      productWeightUOM:
        description: The weight UOM of the product.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the bag in which the custom product attributes are stored.
      unitOfMeasure:
        description: the UnitOfMeasure of the product.
        type: string
    description: CartProductSummary
    type: object
  Reward:
    title: Reward
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      amount:
        description: The fixed amount for this reward.
        type: number
        format: double
        x-nullable: false
      campaignId:
        description: The id of the campaign of the promotion giving this reward.
        type: string
        x-nullable: false
      campaignName:
        description: The name of the campaign of the promotion giving this reward.
        type: string
      description:
        description: The description of the promotion.
        type: string
      level:
        description: The level of effectivity of this reward.
        type: string
        enum:
          - LineItem
          - Shipment
          - FulfillmentMethod
      promotionId:
        description: The unique identifier of the promotion giving this reward.
        type: string
        x-nullable: false
      promotionName:
        description: The promotion name for this reward.
        type: string
      promotionVersion:
        description: The version number of the promotion.
        type: integer
        format: int32
        x-nullable: false
      relatedObjectId:
        description: The relative object Id (LineItem.Id or Shipment.Id) depending of the Reward.Level.
        type: string
        x-nullable: false
      rewardType:
        description: 'The type of reward. (e.g: Discount or External)'
        type: string
        enum:
          - Discount
          - External
          - Gift
    description: Reward
    type: object
  Tax:
    title: Tax
    properties:
      code:
        description: 'The tax code. For example, this could be GST or HST in Canada.'
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The tax UI-friendly display name.
      id:
        description: The unique identifier of the tax.
        type: string
        x-nullable: false
      isShippingFeeTax:
        description: Indicates that this item is the tax for the additionbal shipping fees
        type: boolean
        x-nullable: false
      isShippingTax:
        description: Indicates that this item is the tax for the shipping charge
        type: boolean
        x-nullable: false
      lineItemIds:
        description: The unique identifier of all the LineItem on which the tax is applied.
        type: array
        items:
          type: string
          x-nullable: false
      percentage:
        description: The percentage to apply for this tax.
        type: number
        format: double
        x-nullable: false
      taxAmount:
        description: The tax amount to apply this tax percentage on. This should be the total of the LineItem prices.
        type: number
        format: double
      taxCategoryId:
        description: The unique identifier of the tax category.
        type: string
        x-nullable: false
      taxForShipmentId:
        description: The id of the shipment if this tax IsShippingTax or IsShippingFeeTax.
        type: string
        x-nullable: false
      taxTotal:
        description: The cost of the tax to pay. This should be the rounded TaxAmount * Percentage.
        type: number
        format: double
    description: Tax
    type: object
  Customer:
    title: Customer
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      accountLockedDownUntil:
        description: the time when the account lock down expires.
        type: string
        format: date-time
      accountStatus:
        description: The current status of the customer account.
        type: string
        enum:
          - Active
          - Inactive
          - RequiresApproval
      addresses:
        description: A list of the Customer's Addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      addressIds:
        description: A list of system-wide identifier uniquely identifying each Customer Address.
        type: array
        items:
          type: string
          x-nullable: false
      cellNumber:
        description: the number for the cellular of the customer.
        type: string
      created:
        description: the date the customer was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the operator who created the customer.
        type: string
      customerType:
        description: 'the type of customer (Registered, Guest).'
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
      email:
        description: the email associated with the customer.
        type: string
      faxExtension:
        description: 'the extension, if any, for the customer fax.'
        type: string
      faxNumber:
        description: the number to use for the customer fax.
        type: string
      firstName:
        description: the first name of the customer.
        type: string
      isRecurringBuyer:
        description: a value indicating whether this customer is a recurring buyer.
        type: boolean
        x-nullable: false
      language:
        description: the preferred communication language of the customer.
        type: string
      lastActivityDate:
        description: the date where the customer last interacted with the system.
        type: string
        format: date-time
        x-nullable: false
      lastLoginDate:
        description: the date where the customer last logged in the e-commerce website.
        type: string
        format: date-time
        x-nullable: false
      lastModified:
        description: the date that the last modification was applied to the customer.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the operator who last modified the customer.
        type: string
      lastName:
        description: the last name of the customer.
        type: string
      lastOrderCurrency:
        description: the currency used for the customer last order.
        type: string
      lastOrderDate:
        description: the date at which the customer last order was created.
        type: string
        format: date-time
        x-nullable: false
      lastOrderItemsCount:
        description: the total quantity of items for the last order of the customer.
        type: integer
        format: int32
        x-nullable: false
      lastOrderLineItemsCount:
        description: the total quantity of line items for the last order of the customer.
        type: integer
        format: int32
        x-nullable: false
      lastOrderNumber:
        description: the order number of the last order of the customer.
        type: string
      lastOrderStatus:
        description: the status of the customer last order.
        type: string
      lastOrderTotal:
        description: the total amount of the customer last order.
        type: number
        format: double
        x-nullable: false
      lastPasswordChanged:
        description: the date where the customer last changed his password.
        type: string
        format: date-time
        x-nullable: false
      middleName:
        description: the middle name of the person.
        type: string
      organizationIds:
        description: A list of system-wide identifier uniquely identifying each customer's Organization.
        type: array
        items:
          type: string
          x-nullable: false
      passwordQuestion:
        description: the secret question for the customer.
        type: string
      paymentProfileIds:
        description: A list of system-wide identifier uniquely identifying each customer's Payment Profile.
        type: array
        items:
          type: string
          x-nullable: false
      phoneExtension:
        description: 'the extension, if any, for the telephone number of the customer.'
        type: string
      phoneExtensionWork:
        description: 'the extension, if any, for the work phone number.'
        type: string
      phoneNumber:
        description: the telephone number of the customer.
        type: string
      phoneNumberWork:
        description: the phone number at the work place of the customer.
        type: string
      preferredStoreId:
        description: the id of the customer's preferred store.
        type: string
        x-nullable: false
      storeIds:
        description: A list of system-wide identifier uniquely identifying each customer's Store.
        type: array
        items:
          type: string
          x-nullable: false
      username:
        description: a string of character representing a unique name used for the customer.
        type: string
    description: Customer
    type: object
  GetCampaignRequest:
    title: GetCampaignRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignId:
        description: The id of the campaign to retrieve.
        type: string
        x-nullable: false
      includePromotions:
        description: Indicates whether the promotions be fully loaded.
        type: boolean
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  FindCampaignsRequest:
    title: FindCampaignsRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      campaignStatus:
        description: The status of the campaign(s) to search for.
        type: string
        enum:
          - Unspecified
          - Draft
          - PendingApproval
          - Ready
          - Live
          - Paused
          - Cancelled
          - Expired
          - Rejected
      campaignType:
        description: The type of the campaign.
        type: string
      effectiveDateTime:
        description: The date time at which the campaign must be effective.
        type: string
        format: date-time
      endDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: The range of dates for the campaign's end date
      searchMode:
        description: The campaign search mode.
        type: string
        enum:
          - Unspecified
          - Current
          - Future
          - Archive
      searchTerm:
        description: The search term used by the query. The search term will search on the campaign name.
        type: string
      startDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: The range of dates for the campaign's start date
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  Range_DateTime_:
    title: Range_DateTime
    properties:
      end:
        description: the end of the range.
        type: string
        format: date-time
        x-nullable: false
      start:
        description: the beginning of the range.
        type: string
        format: date-time
        x-nullable: false
    description: Range<DateTime>
    type: object
  GetLiveCampaignsRequest:
    title: GetLiveCampaignsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      effectiveDateTime:
        description: The date time at which the campaign must be effective.
        type: string
        format: date-time
        x-nullable: false
      includePromotions:
        description: Indicates whether to include promotions of retrieved campaigns.
        type: boolean
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  UpdateCampaignRequest:
    title: UpdateCampaignRequest
    properties:
      allowOptOut:
        description: Indicates whether the campaign allows opting out.
        type: boolean
        x-nullable: false
      description:
        description: The description.
        type: string
      endDate:
        description: The end date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      name:
        description: The name.
        type: string
      priority:
        description: The priority of the Campaign
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: The start date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      status:
        description: The status of the Campaign
        type: string
        enum:
          - Unspecified
          - Draft
          - PendingApproval
          - Ready
          - Live
          - Paused
          - Cancelled
          - Expired
          - Rejected
      timeZone:
        description: The time zone of the Campaign.
        type: string
      type:
        description: The type of the Campaign.
        type: string
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  GetCampaignPromotionsRequest:
    title: GetCampaignPromotionsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignId:
        description: The id of the campaign to retrieve.
        type: string
        x-nullable: false
      validateTargeting:
        description: Indicates whether the targeting conditions in the promotions should be validated (only applicable if IncludePromotions is True)
        type: boolean
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  GetCampaignsRequest:
    title: GetCampaignsRequest
    required:
      - campaignIds
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignIds:
        description: Gets or sets the ids of the campaigns to retrieve.
        type: array
        items:
          type: string
          x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  CopyCampaignRequest:
    title: CopyCampaignRequest
    properties:
      newCampaignDescription:
        description: The description of the new campaign
        type: string
      newCampaignEndDate:
        description: The end date in the time zone of the campaign.
        type: string
        format: date-time
      newCampaignName:
        description: The name of the new campaign
        type: string
      newCampaignStartDate:
        description: The start date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      priority:
        description: The priority of the Campaign
        type: integer
        format: int32
      timeZone:
        description: The timezone fo the campaign
        type: string
      type:
        description: The type of the campaign
        type: string
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  AddOrUpdateCampaignRequest:
    title: AddOrUpdateCampaignRequest
    properties:
      allowOptOut:
        description: Indicates whether the campaign allows opting out.
        type: boolean
        x-nullable: false
      description:
        description: The description.
        type: string
      endDate:
        description: The end date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      name:
        description: The name.
        type: string
      priority:
        description: The priority of the Campaign
        type: integer
        format: int32
        x-nullable: false
      promotions:
        description: The promotions
        type: array
        items:
          $ref: '#/definitions/Promotion'
      startDate:
        description: The start date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      status:
        description: The status of the Campaign
        type: string
        enum:
          - Unspecified
          - Draft
          - PendingApproval
          - Ready
          - Live
          - Paused
          - Cancelled
          - Expired
          - Rejected
      timeZone:
        description: The time zone of the Campaign.
        type: string
      type:
        description: The type of the Campaign.
        type: string
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  Promotion:
    title: Promotion
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      allowConsumedConditionItemsToBeReused:
        description: Indicates whether the condition is re-usable
        type: boolean
        x-nullable: false
      allowConsumedRewardItemsToBeReused:
        description: Indicates whether the reward is combinable
        type: boolean
        x-nullable: false
      campaignId:
        description: the Id of the campaign that this promotion belongs to
        type: string
        x-nullable: false
      campaignPriority:
        description: a copy of the priority of the campaign
        type: integer
        format: int32
        x-nullable: false
      conditions:
        description: the purchase conditions (purchase requirements) for the promotion to be applied.
        type: array
        items:
          $ref: '#/definitions/PurchaseCondition'
      consumabilityRules:
        description: the rules used to determine whether an entity should be used when validating the conditions of this promotion.
        type: array
        items:
          $ref: '#/definitions/ConsumabilityRule'
      couponEndDate:
        description: '[Obsolete] the end date.'
        type: string
        format: date-time
      couponMaximumUsageCustomer:
        description: the maximum usage per customer
        type: integer
        format: int32
        x-nullable: false
      couponMaximumUsageGlobal:
        description: ' the global maximum usage (across all customers).'
        type: integer
        format: int32
        x-nullable: false
      couponMode:
        description: 'What CouponMode kind of coupon, if any, is needed to qualify for this promotion. (None, Single, Multiple)'
        type: string
        enum:
          - Unspecified
          - None
          - Single
          - Multiple
      couponSingleCouponCode:
        description: 'the coupon code used when in single coupon mode. '
        type: string
      couponStartDate:
        description: '[Obsolete] the start date.'
        type: string
        format: date-time
      datetimeFilter:
        $ref: '#/definitions/PromotionDatetimeFilter'
        description: the DateTime filter. Value can be null to disable filter.
      description:
        description: the description of the promotion
        type: string
      endDate:
        description: the promotion end date.
        type: string
        format: date-time
      excludeDiscountedItems:
        description: Indicates whether discounted items should be excluded when evaluating this promotion.
        type: boolean
        x-nullable: false
      exclusivity:
        description: Indicates exclusivity of the promotion
        type: string
        enum:
          - None
          - Campaign
          - All
      isActive:
        description: Indicates whether the promotion is Active
        type: boolean
        x-nullable: false
      isExclusive:
        description: Indicates whether this promotion is exclusive or not.
        type: boolean
        x-nullable: false
      maximumRewardAmount:
        description: Indicates maximum amount of total reward for this promotion
        type: number
        format: double
      name:
        description: the name of the promotion.
        type: string
      priority:
        description: the priority of the promotion.
        type: integer
        format: int32
        x-nullable: false
      promotionLimit:
        description: the number of times that the promotion can be applied to a customer's cart
        type: integer
        format: int32
        x-nullable: false
      promotionText:
        $ref: '#/definitions/LocalizedString'
        description: the text message to show when the promotion is applied.
      rewardDefinitions:
        description: the reward definitions that are given if the promotion is applied.
        type: array
        items:
          $ref: '#/definitions/RewardDefinition'
      selectionInfo:
        description: the internal UI hints for the Orchestrator
        type: string
      startDate:
        description: the promotion start date.
        type: string
        format: date-time
      targeting:
        $ref: '#/definitions/TargetingCondition'
        description: the targeting condition (customer requirements) for the promotion to be applied.
      versionNumber:
        description: the number of the version
        type: integer
        format: int32
        x-nullable: false
    description: Promotion
    type: object
  PurchaseCondition:
    title: PurchaseCondition
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      consumabilityRules:
        description: the rules used to determine whether an entity should be used when validating the conditions of this promotion.
        type: array
        items:
          $ref: '#/definitions/ConsumabilityRule'
      excludeDiscountedItems:
        description: a flag indicating whether discounted items should be excluded when evaluating this condition.
        type: boolean
        x-nullable: false
      level:
        description: 'The level of the purchase condition: on which part of the cart the condition will be applied.'
        type: string
        enum:
          - NotSpecified
          - Product
          - Order
          - Shipping
          - Bundle
          - Payment
          - Gift
      targets:
        description: a list of the targets on which the condition will be applied.
        type: array
        items:
          $ref: '#/definitions/PurchaseConditionTarget'
      type:
        description: 'The type: how the Value will be applied to the Targets.'
        type: string
        enum:
          - Quantity
          - Amount
          - FulfillmentMethod
          - PaymentMethod
          - Recurrence
      unitOfMeasure:
        description: 'the UnitOfMeasure (Unit, Kilogram, Liter, etc..) of the condition.'
        type: string
      value:
        description: the value of the condition.
        type: number
        format: double
        x-nullable: false
    description: PurchaseCondition
    type: object
  ConsumabilityRule:
    title: ConsumabilityRule
    properties:
      operation:
        description: The operation type of the rule
        type: string
        enum:
          - Equals
          - DoesNotEqual
          - IsGreaterThan
          - IsGreaterThanOrEqualTo
          - IsLessThan
          - IsLessThanOrEqualTo
          - IsBetween
          - IsNotBetween
          - IsBlank
          - IsNotBlank
          - IsAnyOf
          - IsNoneOf
      propertyName:
        description: The name of the property to use for the rule.
        type: string
      propertyType:
        description: The type of the property to use for the rule..
        type: string
        enum:
          - Number
          - Boolean
          - Text
          - DateTime
          - Decimal
          - Currency
          - Lookup
          - RichText
      target:
        description: The rule target.
        type: string
        enum:
          - LineItem
          - Shipment
      value:
        description: The value to use for the rule.
        type: string
    description: ConsumabilityRule
    type: object
  PurchaseConditionTarget:
    title: PurchaseConditionTarget
    properties:
      catalogId:
        description: ' the catalog name of the entity necessary to get the promotion.'
        type: string
      categoryId:
        description: the identifier of the category necessary to get the promotion.
        type: string
      displayName:
        description: the display name.
        type: string
      fulfillmentMethodName:
        description: the shipping method necessary to get the promotion.
        type: string
      paymentMethodType:
        description: the payment method necessary to get the promotion.
        type: string
      paymentProviderName:
        description: the payment method necessary to get the promotion.
        type: string
      productId:
        description: the unique identifier of the product necessary to get the promotion.
        type: string
      shippingProviderId:
        description: the shipping provider necessary to get the promotion.
        type: string
      targetType:
        description: the type of the target PurchaseConditionTargetType.
        type: string
        enum:
          - Product
          - Category
          - Variant
          - FulfillmentMethod
          - PaymentMethod
      variantId:
        description: ' the unique identifier of the variant necessary to get the promotion.'
        type: string
    description: PurchaseConditionTarget
    type: object
  PromotionDatetimeFilter:
    title: PromotionDatetimeFilter
    properties:
      daysOfWeek:
        description: the days of the week when the promotion is valid.
        type: integer
        format: int32
        enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
      endTime:
        description: the end time of the day when the promotion is valid.
        type: string
        format: date-time
      startTime:
        description: the start time of the day when the promotion is valid.
        type: string
        format: date-time
    description: PromotionDatetimeFilter
    type: object
  RewardDefinition:
    title: RewardDefinition
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      consumabilityRules:
        description: the rules used to determine whether an entity should be used when validating the conditions of this promotion.
        type: array
        items:
          $ref: '#/definitions/ConsumabilityRule'
      disambiguation:
        description: the disambiguation method.
        type: string
        enum:
          - NotSpecified
          - LessExpensive
          - MoreExpensive
      excludeDiscountedItems:
        description: a flag indicating whether discounted items should be excluded when evaluating this reward.
        type: boolean
        x-nullable: false
      level:
        description: 'the level of the reward: on which part of the order the promotion is applied.'
        type: string
        enum:
          - NotSpecified
          - Product
          - Order
          - Shipping
          - Bundle
          - Payment
          - Gift
      matchQuantityOrLess:
        description: the value indicating whether the reward condition can be less than the quantity specified.
        type: boolean
        x-nullable: false
      matchQuantityOrMore:
        description: the value indicating whether the reward can be more than the quantity specified.
        type: boolean
        x-nullable: false
      quantity:
        description: the quantity of targets on which the reward will apply.
        type: number
        format: double
        x-nullable: false
      rewardTargets:
        description: 'a list of reward targets on which the reward will be applied. '
        type: array
        items:
          $ref: '#/definitions/RewardTarget'
      rewardType:
        description: 'The type of reward. (e.g: Discount or External)'
        type: string
        enum:
          - Discount
          - External
          - Gift
      unitOfMeasure:
        description: 'the UnitOfMeasure (Unit, Kilogram, Liter, etc..) of the reward.'
        type: string
      useConsumedItemsFromConditions:
        description: the value indicating whether the reward can use items consumed in the conditions.
        type: boolean
        x-nullable: false
      value:
        description: the value of the reward.
        type: number
        format: double
        x-nullable: false
      valueType:
        description: 'the type of the value of the reward: how the Value will be applied to the RewardTargets.'
        type: string
        enum:
          - Amount
          - Percentage
          - FixedPrice
    description: RewardDefinition
    type: object
  RewardTarget:
    title: RewardTarget
    properties:
      catalogId:
        description: the catalog name of the entity on which the promotion will give a reward.
        type: string
      categoryId:
        description: the identifier of the category on which the promotion will give a reward.
        type: string
      displayName:
        description: the display name.
        type: string
      fulfillmentMethodName:
        description: the name of the Fulfillment method on which the promotion will give a reward.
        type: string
      productId:
        description: the unique identifier of the product on which the promotion will give a reward.
        type: string
      quantity:
        description: the quantity of entities on which the reward will be applied.
        type: integer
        format: int32
        x-nullable: false
      shippingProviderId:
        description: the identifier of the shipping provider on which the promotion will give a reward.
        type: string
      targetType:
        description: the target RewardTargetType.
        type: string
        enum:
          - Product
          - Variant
          - Category
          - FulfillmentMethod
      variantId:
        description: the unique identifier of the variant on which the promotion will give a reward.
        type: string
    description: RewardTarget
    type: object
  TargetingCondition:
    title: TargetingCondition
    properties:
      binaryOperator:
        description: The binary operator which will be apply between the children targeting conditions.
        type: string
        enum:
          - Unspecified
          - And
          - Or
      children:
        description: The children of this targeting condition.
        type: array
        items:
          $ref: '#/definitions/TargetingCondition'
      collectionOperator:
        description: ' Gets or sets the operator to apply on the Value to get the promotion when the target is used on a collection.'
        type: string
        enum:
          - Unspecified
          - All
          - Any
      not:
        description: ' Gets or sets a value indicating whether to use the Operator should NOT be matched.'
        type: boolean
        x-nullable: false
      operator:
        description: The operator to apply on the Value to get the promotion.
        type: string
        enum:
          - Unspecified
          - Equals
          - GreaterThan
          - GreaterThanOrEqual
          - LessThan
          - LessThanOrEqual
          - Matches
          - In
          - HasValue
          - IsEmpty
      propertyPath:
        description: The relative path of the property used for the condition
        type: string
      type:
        description: The type of condition
        type: string
        enum:
          - Unspecified
          - PropertyFilter
          - CollectionFilter
          - SegmentFilter
          - TargetingGroup
      value:
        $ref: '#/definitions/Object'
        description: The value that must be matched to get the promotion.
    description: TargetingCondition
    type: object
  UpdateCampaignStatusRequest:
    title: UpdateCampaignStatusRequest
    properties:
      status:
        description: The status of the Campaign
        type: string
        enum:
          - Unspecified
          - Draft
          - PendingApproval
          - Ready
          - Live
          - Paused
          - Cancelled
          - Expired
          - Rejected
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  CancelCampaignRequest:
    title: CancelCampaignRequest
    properties: {}
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  PublishCampaignRequest:
    title: PublishCampaignRequest
    properties: {}
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  RejectCampaignRequest:
    title: RejectCampaignRequest
    properties: {}
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  SubmitCampaignRequest:
    title: SubmitCampaignRequest
    properties: {}
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  PauseCampaignRequest:
    title: PauseCampaignRequest
    properties: {}
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  CreatePromotionRequest:
    title: CreatePromotionRequest
    properties:
      promotion:
        $ref: '#/definitions/Promotion'
        description: The promotion to be created
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  CreateCampaignRequest:
    title: CreateCampaignRequest
    properties:
      allowOptOut:
        description: Indicates whether the campaign allows opting out.
        type: boolean
        x-nullable: false
      description:
        description: The description.
        type: string
      endDate:
        description: The end date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      name:
        description: The name.
        type: string
      priority:
        description: The priority of the Campaign
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: The start date in the time zone of the campaign.
        type: string
        format: date-time
        x-nullable: false
      timeZone:
        description: The time zone of the Campaign.
        type: string
      type:
        description: The type of the Campaign.
        type: string
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  GetMarketingSettingsRequest:
    title: GetMarketingSettingsRequest
    properties: {}
    description: Requests related to the marketing application.
    type: object
  UpdateMarketingSettingsRequest:
    title: UpdateMarketingSettingsRequest
    properties:
      allowCampaignLevelInheritanceManagement:
        description: Gets or sets a value indicating whether campaign inheritance is managed at the campaign-level.
        type: boolean
        x-nullable: false
      campaignsAreInheritedByDefault:
        description: Gets or sets a value indicating whether campaign are inherited by default.
        type: boolean
        x-nullable: false
      orderRewardsAreSplittedOnLineItem:
        description: Gets or sets a value indicating whether Order rewards are splitted on LineItems or applied on shipment.
        type: boolean
        x-nullable: false
      productPickerMode:
        description: Gets or sets a value indicating whether the product picker fetch products by IDs or by skus.
        type: string
        enum:
          - ById
          - BySku
    description: Requests related to the marketing application.
    type: object
  ConsumeCouponRequest:
    title: ConsumeCouponRequest
    properties:
      coupon:
        $ref: '#/definitions/Coupon'
        description: The coupon.
      customerId:
        description: The identifier of the customer that is consuming the coupon
        type: string
        x-nullable: false
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  LiberateCouponRequest:
    title: LiberateCouponRequest
    properties:
      coupon:
        $ref: '#/definitions/Coupon'
        description: The coupon.
      customerId:
        description: The identifier of the customer that is consuming the coupon
        type: string
        x-nullable: false
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  GetCouponsRequest:
    title: GetCouponsRequest
    properties:
      couponCodes:
        description: The coupons to retrieve
        type: array
        items:
          type: string
      effectiveDateTime:
        description: The effective date time used to validate the coupon.
        type: string
        format: date-time
        x-nullable: false
      validateCoupons:
        description: Should the coupons be validated.
        type: boolean
        x-nullable: false
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  GetCouponRequest:
    title: GetCouponRequest
    properties:
      couponCode:
        description: The coupon code.
        type: string
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  ConsumeCouponByCodeRequest:
    title: ConsumeCouponByCodeRequest
    properties:
      couponCode:
        description: The coupon.
        type: string
      customerId:
        description: The identifier of the customer that is consuming the coupon
        type: string
        x-nullable: false
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  DeleteCouponByCodeRequest:
    title: DeleteCouponByCodeRequest
    properties:
      couponCode:
        description: The coupon code.
        type: string
      force:
        description: Delete the promo code if it is used in an active promotion and update the promotion.
        type: boolean
        x-nullable: false
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
    type: object
  ImportPromoCodesRequest:
    title: ImportPromoCodesRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      path:
        description: The path of the file to import.
        type: string
      scopeId:
        description: The scope.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ExportPromoCodesRequest:
    title: ExportPromoCodesRequest
    properties:
      correlationId:
        description: The correlation id for the durable task. Not used for now.
        type: string
        x-nullable: false
      path:
        description: The path of the file to import. Not used for now.
        type: string
      scopeId:
        description: The scope.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ProductInformationLegacyImportRequest:
    title: ProductInformationLegacyImportRequest
    properties:
      allowPricesDeleting:
        description: Whether or not the import have to delete prices which are not specified in the import file.
        type: boolean
        x-nullable: false
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      extendedOptions:
        $ref: '#/definitions/ImportProductExtendedOptions'
        description: The extended options applied during the import process.
      fileFormat:
        description: 'The file format of the import, JSON or XML'
        type: string
      maximumErrors:
        description: The maximum number of validation errors that can be encountered. 0 means infinite number.
        type: integer
        format: int32
        x-nullable: false
      path:
        description: The path of the file(s) to import.
        type: string
      rebuildSearchIndex:
        description: Indicates whether or not the search indexes are rebuilt after the import. The default value is True (when not set).
        type: boolean
      reIndex:
        description: Whether or not the indexes are built after the import. The default value is True (when not set).
        type: boolean
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProductExtendedOptions:
    title: ImportProductExtendedOptions
    properties:
      removeImportedProductsAssociations:
        description: Indicates whether the associations of imported products are removed prior to import.
        type: boolean
        x-nullable: false
      removeImportedCategoriesAssociations:
        description: Indicates whether existing associations of imported categories are removed prior to import.
        type: boolean
        x-nullable: false
      removeAllProductAssociations:
        description: Indicates whether all existing product associations are removed prior to import.
        type: boolean
        x-nullable: false
      removeAllCategoryAssociations:
        description: Indicates whether all existing category associations are removed prior to import.
        type: boolean
        x-nullable: false
      importEmptyAttributes:
        description: 'Indicates whether whether [empty attributes are imported], otherwise the latter are ignored.'
        type: boolean
        x-nullable: false
      importPublicationStatus:
        description: Indicates the status of imported products.
        type: string
      importType:
        description: 'Indicates the import type, can be full, or products, categories, associations, or relations'
        type: string
      validationOnly:
        description: Indicates whether only validation should be done and changes should not be committed.
        type: boolean
        x-nullable: false
    description: ImportProductExtendedOptions
    type: object
  ImportCouponCodesRequest:
    title: ImportCouponCodesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      couponCodes:
        description: The list of coupon codes to add to the promotion
        type: array
        items:
          type: string
      promotionName:
        description: The (friendly) name of the promotion (used in messages instead of the unique id)
        type: string
      requestedBy:
        description: The user name of the request initiator
        type: string
      taskId:
        description: The task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  ExportCouponCodesRequest:
    title: ExportCouponCodesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      couponMode:
        description: The promotion coupon mode.
        type: string
        enum:
          - Unspecified
          - None
          - Single
          - Multiple
      requestedBy:
        description: The user name of the request initiator.
        type: string
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  FindPromoCodesRequest:
    title: FindPromoCodesRequest
    properties:
      maximumItems:
        description: The number of items to return. The default value is 10.
        type: integer
        format: int32
        x-nullable: false
      startingIndex:
        description: The starting index. The default value is 0.
        type: integer
        format: int32
        x-nullable: false
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  GetPromoCodesCountRequest:
    title: GetPromoCodesCountRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      promotionId:
        description: The id of the promotion.
        type: string
        x-nullable: false
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  GeneratePromoCodesRequest:
    title: GeneratePromoCodesRequest
    properties:
      prefix:
        description: The id of the promotion.
        type: string
      quantity:
        description: The number of promo codes to generate.
        type: integer
        format: int32
        x-nullable: false
      suffix:
        description: The id of the promotion.
        type: string
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  ValidatePromoCodeRequest:
    title: ValidatePromoCodeRequest
    properties: {}
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
    type: object
  GetPromotionRequest:
    title: GetPromotionRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignId:
        description: The id of the promotion's campaign
        type: string
        x-nullable: false
      promotionId:
        description: The id of the promotion to retrieve.
        type: string
        x-nullable: false
      validateTargeting:
        description: Indicates whether the targeting conditions in the promotion should be validated
        type: boolean
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  UpdatePromotionRequest:
    title: UpdatePromotionRequest
    properties:
      promotion:
        $ref: '#/definitions/Promotion'
        description: The updated promotion
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  DeletePromotionRequest:
    title: DeletePromotionRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignId:
        description: The id of the promotion's campaign
        type: string
        x-nullable: false
      promotionId:
        description: The id of the promotion to delete
        type: string
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  GetPromotionSummariesRequest:
    title: GetPromotionSummariesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      campaignId:
        description: The id of the campaign
        type: string
        x-nullable: false
    description: Campaigns are entities used to organize marketing promotions.
    type: object
  CreateOrUpdateSegmentRequest:
    title: CreateOrUpdateSegmentRequest
    required:
      - description
      - name
    properties:
      description:
        description: The description of the segment
        type: string
      isActive:
        description: Gets or sets a value indicating whether the segment is active and usable in promotion
        type: boolean
        x-nullable: false
      name:
        description: The name of the segment
        type: string
      targetingCondition:
        $ref: '#/definitions/TargetingCondition'
        description: The targeting condition (customer requirements) for the promotion to be applied.
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  GetSegmentsRequest:
    title: GetSegmentsRequest
    properties:
      maximumItems:
        description: The number of items to return. (This is the page size when requesting paged data)
        type: integer
        format: int32
        x-nullable: false
      startingIndex:
        description: The starting index. (The offset of the first record when requesting paged data)
        type: integer
        format: int32
        x-nullable: false
      validateTargeting:
        description: Indicates whether the targeting conditions in the segment should be validated
        type: boolean
        x-nullable: false
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  CreateSegmentRequest:
    title: CreateSegmentRequest
    required:
      - description
      - name
    properties:
      description:
        description: The description of the segment
        type: string
      isActive:
        description: Gets or sets a value indicating whether the segment is active and usable in promotion
        type: boolean
        x-nullable: false
      name:
        description: The name of the segment
        type: string
      targetingCondition:
        $ref: '#/definitions/TargetingCondition'
        description: The targeting condition (customer requirements) for the promotion to be applied.
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  UpdateSegmentRequest:
    title: UpdateSegmentRequest
    required:
      - description
      - id
      - name
    properties:
      description:
        description: The description of the segment
        type: string
      id:
        description: The id of the segment
        type: string
        x-nullable: false
      isActive:
        description: Gets or sets a value indicating whether the segment is active and usable in promotion
        type: boolean
        x-nullable: false
      name:
        description: The name of the segment
        type: string
      targetingCondition:
        $ref: '#/definitions/TargetingCondition'
        description: The targeting condition (customer requirements) for the promotion to be applied.
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  GetSegmentRequest:
    title: GetSegmentRequest
    properties:
      segmentId:
        description: The id of the segment to retrieve.
        type: string
        x-nullable: false
      validateTargeting:
        description: Indicates whether the targeting conditions in the segment should be validated
        type: boolean
        x-nullable: false
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  FindSegmentsRequest:
    title: FindSegmentsRequest
    properties:
      maximumItems:
        description: The number of items to return. (This is the page size when requesting paged data)
        type: integer
        format: int32
        x-nullable: false
      segmentStatus:
        description: The status of the segment(s) to search for.
        type: string
        enum:
          - Unspecified
          - Active
          - Inactive
      sortDirection:
        description: The sort direction. (Ascending or descending)
        type: string
        enum:
          - Ascending
          - Descending
      sortOrderField:
        description: The sort by specifying the SegmentOrderField.
        type: string
        enum:
          - Name
          - Status
          - StartDate
          - EndDate
          - Type
          - Scope
      startingIndex:
        description: The starting index. (The offset of the first record when requesting paged data)
        type: integer
        format: int32
        x-nullable: false
      validateTargeting:
        description: Indicates whether the targeting conditions in the segment should be validated
        type: boolean
        x-nullable: false
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  DeleteSegmentRequest:
    title: DeleteSegmentRequest
    properties:
      segmentId:
        description: The id of the segment to delete.
        type: string
        x-nullable: false
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
    type: object
  GetCatalogRequest:
    title: GetCatalogRequest
    required:
      - catalogId
      - cultureName
    properties:
      catalogId:
        description: The CatalogId of the request.
        type: string
      cultureName:
        description: The name of the culture (language) to use to process the request.
        type: string
      includeChildren:
        description: Indicates if the children must be included in the response.
        type: boolean
        x-nullable: false
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
    type: object
  UpdateCatalogRequest:
    title: UpdateCatalogRequest
    required:
      - defaultLanguage
    properties:
      defaultLanguage:
        description: The catalog default language.
        type: string
      description:
        description: The catalog description.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The catalog display name.
      endDate:
        description: The catalog ending date.
        type: string
        format: date-time
      isActive:
        description: Whether the catalog is active.
        type: boolean
        x-nullable: false
      keepModifications:
        description: A value indicating whether product modifications will remain intact when OverrideParent is set to false.
        type: boolean
        x-nullable: false
      languages:
        description: The collection of languages (cultures) supported by this catalog.
        type: array
        items:
          type: string
      overrideParent:
        description: A value indicating whether the products has overridden values in the current Sales scope.
        type: boolean
        x-nullable: false
      startDate:
        description: The catalog starting date.
        type: string
        format: date-time
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
    type: object
  GetUsedLanguagesRequest:
    title: GetUsedLanguagesRequest
    properties: {}
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
    type: object
  GetCatalogChildrenIdsRequest:
    title: GetCatalogChildrenIdsRequest
    required:
      - catalogId
      - cultureName
    properties:
      catalogId:
        description: The Id of the parent Catalog.
        type: string
      cultureName:
        description: The name of the culture (language) to use to process the request.
        type: string
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
    type: object
  GetClosestCatalogLanguageRequest:
    title: GetClosestCatalogLanguageRequest
    properties:
      catalogId:
        description: The ID of the catalog
        type: string
      language:
        description: The requested language
        type: string
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
    type: object
  GetCategoriesV2Request:
    title: GetCategoriesV2Request
    required:
      - scopeId
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      scopeId:
        description: The scope id
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryRequest:
    title: GetCategoryRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeRelationships:
        description: Indicates if the relationships must be included in the response.
        type: boolean
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryTreeExistingItemByStateRequest:
    title: GetCategoryTreeExistingItemByStateRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture in which the data will be returned
        type: string
      draftState:
        description: The draft state used to filter the products
        type: string
      hasNotification:
        description: The flag to get only or not products with change notification
        type: boolean
      isNew:
        description: The flag to get only new or not new products
        type: boolean
    description: Categories are entities which represents a classification of products.
    type: object
  UpdateCategoryRequest:
    title: UpdateCategoryRequest
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible description for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the name'
      parentCategoryId:
        description: The parent category's id.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
    description: Categories are entities which represents a classification of products.
    type: object
  DeleteCategoryRequest:
    title: DeleteCategoryRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category's id.
        type: string
      deleteProducts:
        description: Determines whether the products should be deleted or have the category association removed.
        type: boolean
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoriesContainingProductsByStatusRequest:
    title: GetCategoriesContainingProductsByStatusRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      publicationStatus:
        description: The publication status to filter the products
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryChildrenV2Request:
    title: GetCategoryChildrenV2Request
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryTreeNodesV2Request:
    title: GetCategoryTreeNodesV2Request
    required:
      - cultureName
    properties:
      categoryId:
        description: The root node category unique identifier
        type: string
      cultureName:
        description: The name of the culture (language) to use to process the request.
        type: string
      maximumItems:
        description: A hint that the service will use to determine the maximum number of nodes to return
        type: integer
        format: int32
        x-nullable: false
      scopeId:
        description: The Scope of the request.
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryRelationshipsV2Request:
    title: GetCategoryRelationshipsV2Request
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryTreeNodesForPathRequest:
    title: GetCategoryTreeNodesForPathRequest
    required:
      - cultureName
    properties:
      cultureName:
        description: The name of the culture to use to process the request.
        type: string
      endId:
        description: The unique identifier of the last node of the path (a category id).
        type: string
      scopeId:
        description: The ScopeId of the request.
        type: string
      startId:
        description: The unique identifier of the first node of the path (a category id).
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  UpdateCategorySequenceRequest:
    title: UpdateCategorySequenceRequest
    properties:
      orderedCategoryNames:
        description: The ORDERED list of child category. Any unlisted category will be placed at the end.
        type: array
        items:
          type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetProductsByCategoryV2Request:
    title: GetProductsByCategoryV2Request
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      categoryId:
        description: The category id at which point in the category hierarchy should the 'get products' be started.
        type: string
      continuationToken:
        description: The continuation token used for pagination
        type: string
      pageSize:
        description: 'The maximum number of products to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryV2Request:
    title: GetCategoryV2Request
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeChildren:
        description: Indicates if the relationships must be included in the response.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: Indicates if the relationships must be included in the response.
        type: boolean
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  UpdateCategoryV2Request:
    title: UpdateCategoryV2Request
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible description for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the name'
      includeInSearch:
        description: The flag that defines whether the category should appear in frond-end search results
        type: boolean
      parentItemName:
        description: The value that defines the id of the parent category
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      sequenceNumber:
        description: The value that defines in what order will the category be returned relative to its parent category
        type: integer
        format: int32
    description: Categories are entities which represents a classification of products.
    type: object
  DeleteCategoryV2Request:
    title: DeleteCategoryV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category's id.
        type: string
      deleteProducts:
        description: Determines whether the products should be deleted or have the category association removed.
        type: boolean
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryRelationshipsRequest:
    title: GetCategoryRelationshipsRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryChildrenRequest:
    title: GetCategoryChildrenRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoryTreeNodesRequest:
    title: GetCategoryTreeNodesRequest
    required:
      - cultureName
    properties:
      categoryId:
        description: The root node category unique identifier
        type: string
      cultureName:
        description: The name of the culture (language) to use to process the request.
        type: string
      maximumItems:
        description: A hint that the service will use to determine the maximum number of nodes to return
        type: integer
        format: int32
        x-nullable: false
      scopeId:
        description: The Scope of the request.
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  FindCategoryTreeNodesRequest:
    title: FindCategoryTreeNodesRequest
    required:
      - cultureName
    properties:
      cultureName:
        description: The name of the culture (language) to use to process the request.
        type: string
      maximumResultSize:
        description: A hint that the service will use to determine the maximum number of nodes to return
        type: integer
        format: int32
        x-nullable: false
      scopeId:
        description: The Scope of the request.
        type: string
      searchTerms:
        description: The search terms for the query.
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  GetProductsByCategoryRequest:
    title: GetProductsByCategoryRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includeVariants:
        description: Whether or not to include the variants (if they exists) of the products.
        type: boolean
        x-nullable: false
      categoryId:
        description: The category id at which point in the category hierarchy should the 'get products' be started.
        type: string
      includePriceLists:
        description: Whether or not to include the price lists of the products.
        type: boolean
        x-nullable: false
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
    description: Categories are entities which represents a classification of products.
    type: object
  GetCategoriesRequest:
    title: GetCategoriesRequest
    required:
      - scopeId
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      scopeId:
        description: The scope id
        type: string
    description: Categories are entities which represents a classification of products.
    type: object
  CreateCategoryRequest:
    title: CreateCategoryRequest
    properties:
      categoryId:
        description: The category's id.
        type: string
      definitionName:
        description: The name of the definition of the Category
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible description for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the name'
      parentCategoryId:
        description: The primary parent category id
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
    description: Categories are entities which represents a classification of products.
    type: object
  GetProductsCountByCategoryRequest:
    title: GetProductsCountByCategoryRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      categoryId:
        description: The category id at which point in the category hierarchy the 'get products' should  be started. If nothing is specified the root is used as starting point
        type: string
      includeDescendantsCategories:
        description: Whether or not the descendant categories content should be recursively included below the specified starting categoryId
        type: boolean
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateProductDraftRequest:
    title: UpdateProductDraftRequest
    required:
      - cultureName
      - deleteVariantModifications
      - parentCategoriesModification
      - primaryParentCategoryModification
      - productPropertyModifications
      - variantPropertyModifications
    properties:
      cultureName:
        description: Gets or sets the culture (language) name in which the product draft is processed
        type: string
      deleteVariantModifications:
        description: Gets or sets the list of modifications that the draft should apply to the variants
        type: array
        items:
          $ref: '#/definitions/DeleteVariantModification'
      overwriteModifications:
        description: Gets or sets a value indicating wheter to clear the existing motifications and save only the list given in this request or add the given motifications to the existing list. The default value is 'true'
        type: boolean
        x-nullable: false
      parentCategoriesModification:
        $ref: '#/definitions/ParentCategoriesModification'
        description: Gets or sets an object representing the category to be associated to the product in draft
      primaryParentCategoryModification:
        $ref: '#/definitions/PrimaryParentCategoryModification'
        description: Gets or sets an object representing the category to be set as primary for the product in draft
      productPropertyModifications:
        description: Gets or sets the list of modifications that the draft should apply to the product
        type: array
        items:
          $ref: '#/definitions/ProductPropertyModification'
      variantPropertyModifications:
        description: Gets or sets the list of modifications that the draft should apply to the variants
        type: array
        items:
          $ref: '#/definitions/VariantPropertyModification'
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeleteVariantModification:
    title: DeleteVariantModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      variantId:
        type: string
    description: DeleteVariantModification
    type: object
  ParentCategoriesModification:
    title: ParentCategoriesModification
    properties:
      categoryIds:
        type: array
        items:
          type: string
      lastModified:
        type: string
        format: date-time
        x-nullable: false
    description: ParentCategoriesModification
    type: object
  PrimaryParentCategoryModification:
    title: PrimaryParentCategoryModification
    properties:
      categoryId:
        type: string
      lastModified:
        type: string
        format: date-time
        x-nullable: false
    description: PrimaryParentCategoryModification
    type: object
  ProductPropertyModification:
    title: ProductPropertyModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      currentValue:
        $ref: '#/definitions/Object'
      oldValue:
        $ref: '#/definitions/Object'
      propertyName:
        type: string
    description: ProductPropertyModification
    type: object
  VariantPropertyModification:
    title: VariantPropertyModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      currentValue:
        $ref: '#/definitions/Object'
      oldValue:
        $ref: '#/definitions/Object'
      propertyName:
        type: string
      variantId:
        type: string
    description: VariantPropertyModification
    type: object
  SyncProductRequest:
    title: SyncProductRequest
    required:
      - deleteVariantModifications
      - parentCategoriesModification
      - primaryParentCategoryModification
      - productPropertyModifications
      - variantPropertyModifications
    properties:
      definitionName:
        description: 'Gets or sets the definition name for the product to be synchronized. '
        type: string
      deleteVariantModifications:
        description: Gets or sets the list of modifications that the draft should apply to the variants
        type: array
        items:
          $ref: '#/definitions/DeleteVariantModification'
      parentCategoriesModification:
        $ref: '#/definitions/ParentCategoriesModification'
        description: Gets or sets an object representing the category to be associated to the product in draft
      primaryParentCategoryModification:
        $ref: '#/definitions/PrimaryParentCategoryModification'
        description: Gets or sets an object representing the category to be set as primary for the product in draft
      productPropertyModifications:
        $ref: '#/definitions/Dictionary_String_List_ProductPropertyModification__'
        description: Gets or sets the list of modifications that the draft should apply to the product
      variantPropertyModifications:
        $ref: '#/definitions/Dictionary_String_List_VariantPropertyModification__'
        description: Gets or sets the list of modifications that the draft should apply to the variants
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  List_ProductPropertyModification_:
    title: List<ProductPropertyModification>
    type: array
    items:
      $ref: '#/definitions/ProductPropertyModification'
  Dictionary_String_List_ProductPropertyModification__:
    title: 'Dictionary<String,List<ProductPropertyModification>>'
    additionalProperties:
      type: array
      items:
        $ref: '#/definitions/ProductPropertyModification'
    description: 'Dictionary<String,List<ProductPropertyModification>>'
    type: object
  List_VariantPropertyModification_:
    title: List<VariantPropertyModification>
    type: array
    items:
      $ref: '#/definitions/VariantPropertyModification'
  Dictionary_String_List_VariantPropertyModification__:
    title: 'Dictionary<String,List<VariantPropertyModification>>'
    additionalProperties:
      type: array
      items:
        $ref: '#/definitions/VariantPropertyModification'
    description: 'Dictionary<String,List<VariantPropertyModification>>'
    type: object
  DeleteProductDraftRequest:
    title: DeleteProductDraftRequest
    required:
      - productId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: Gets or sets the id of the product for which we want to delete the draft
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductDraftRequest:
    title: GetProductDraftRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      productId:
        description: the business id for the product to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductDraftStatesRequest:
    title: GetProductDraftStatesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: the business id for the product to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductRelationshipsRequest:
    title: GetProductRelationshipsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      productId:
        description: The product id
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductV2Request:
    title: GetProductV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      includeImageUrl:
        description: A value indicating whether or not to include the image url.
        type: boolean
        x-nullable: false
      includeInheritanceInformation:
        description: A value indicating whether to include the list of overridden properties and variants. Applicable for sales scopes.
        type: boolean
        x-nullable: false
      productId:
        description: The business id for the product to retrieve
        type: string
      publishedVersion:
        description: A value indicating whether the published version of the product should be returned.
        type: boolean
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsByIdsV2Request:
    title: GetProductsByIdsV2Request
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      includeImageUrl:
        description: ' Gets or sets a value indicating whether or not to include the image url.'
        type: boolean
        x-nullable: false
      productIds:
        description: the business ids for the products to retrieve
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  ProductExistsRequest:
    title: ProductExistsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: The id of the product.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  RepairProductInheritanceRequest:
    title: RepairProductInheritanceRequest
    properties: {}
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeleteProductByIdRequest:
    title: DeleteProductByIdRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: The product's id.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeleteProductByIdV2Request:
    title: DeleteProductByIdV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: The product's id.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPropertiesByCategoryRequest:
    title: GetProductsPropertiesByCategoryRequest
    required:
      - categoryId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture in which the data will be returned
        type: string
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertiesNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
        enum:
          - DisplayName
          - ProductId
          - Price
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
      categoryId:
        description: The category id at which point in the category hierarchy should the 'get products' be started.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPropertiesByDraftStateRequest:
    title: GetProductsPropertiesByDraftStateRequest
    required:
      - draftState
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture in which the data will be returned
        type: string
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertiesNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
        enum:
          - DisplayName
          - ProductId
          - Price
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
      draftState:
        description: The draft state used to filter the products
        type: string
        enum:
          - InProgress
          - Rejected
          - PendingApproval
          - ReadyToCompose
          - Published
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetVariantsByProductRequest:
    title: GetVariantsByProductRequest
    required:
      - scopeId
      - productId
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      scopeId:
        description: The scope associated to the requested product
        type: string
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      productId:
        description: the business id for the product to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  FindPriceListsRequest:
    title: FindPriceListsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      endDate:
        description: Gets or sets the upper bound of dates used to filter returned priceLists (optional). Set this date to filter the results to price lists active before this date.
        type: string
        format: date-time
      includeExpiredEntries:
        description: Gets or sets a value indicating whether expired entries should be returned. Default is false.
        type: boolean
        x-nullable: false
      startDate:
        description: Gets or sets the lower bound of dates used to filter returned priceLists (optional). Set this date to filter the results to price lists active after this date.
        type: string
        format: date-time
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  CalculateProductPriceRequest:
    title: CalculateProductPriceRequest
    properties:
      includeVariants:
        description: whether or not to include the variants (if they exist) of the product.
        type: boolean
        x-nullable: false
      time:
        description: the price when the date must be computed..
        type: string
        format: date-time
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductPriceEntriesRequest:
    title: GetProductPriceEntriesRequest
    properties:
      effectiveDate:
        description: The date which the price is effective.
        type: string
        format: date-time
        x-nullable: false
      includeIgnoredPrices:
        description: Whether or not to include the ignored prices
        type: boolean
        x-nullable: false
      includeVariant:
        description: Whether or not to include the variant prices of the product
        type: boolean
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  CreatePriceListRequest:
    title: CreatePriceListRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the PriceList'
      endDate:
        description: The end date of the PriceList
        type: string
        format: date-time
      nextHigherPriorityPriceListId:
        description: 'The identifier of the price list with the next higher priority. If null, the price list will have the highest priority.'
        type: string
      rebuildSearchIndex:
        description: Whether or not the product prices search index will be built rollowing the import. The default value is False.
        type: boolean
      startDate:
        description: The start date of the PriceList
        type: string
        format: date-time
      type:
        description: The type of the PriceList.
        type: string
      category:
        description: The category of the PriceList.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeletePriceListRequest:
    title: DeletePriceListRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      deletePriceListEntries:
        description: The value indicating whether the related price list entries should be deleted as well.
        type: boolean
        x-nullable: false
      priceListId:
        description: The identifier of the price list.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdatePriceListRequest:
    title: UpdatePriceListRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the PriceList'
      endDate:
        description: The end date of the PriceList
        type: string
        format: date-time
      nextHigherPriorityPriceListId:
        description: 'The identifier of the price list with the next higher priority. If null, the price list will have the highest priority.'
        type: string
      rebuildSearchIndex:
        description: Whether or not the product prices search index will be built rollowing the import. The default value is False.
        type: boolean
      startDate:
        description: The start date of the PriceList
        type: string
        format: date-time
      type:
        description: The type of the PriceList.
        type: string
      category:
        description: The category of the PriceList.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsBySkuRequest:
    title: GetProductsBySkuRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includePriceLists:
        description: whether or not to include the price lists of the products.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the products.'
        type: boolean
        x-nullable: false
      sku:
        description: the stock keeping unit code (SKU) for the products to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsBySkusV2Request:
    title: GetProductsBySkusV2Request
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      searchVariantSkus:
        description: 'Gets or sets a value indicating whether or not to search for variant SKU-s, in addition to searching in product SKU-s.'
        type: boolean
        x-nullable: false
      skus:
        description: the SKU-s for the products to retrieve
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetPriceListEntriesRequest:
    title: GetPriceListEntriesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeExpiredEntries:
        description: Gets or sets a value indicating whether expired entries should be returned. Default is false.
        type: boolean
        x-nullable: false
      productId:
        description: The id of the product for which we want to retrieve price list entries
        type: string
      useParentScope:
        description: 'Returns values from the parent scope of the one provided in the request or not, default is false'
        type: boolean
        x-nullable: false
      variantId:
        description: The id of the variant for which we want to retrieve price list entries
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  AddPriceListEntryRequest:
    title: AddPriceListEntryRequest
    properties:
      isIgnored:
        description: 'Gets or sets a value indicating whether the price should be ignored, default is false. If set to true, the price entry will override the parent but will be ignored at the scope level, thus fallbacking to the next available price entry in the current scope'
        type: boolean
        x-nullable: false
      price:
        description: The price of this new price list entry
        type: number
        format: double
        x-nullable: false
      priceListId:
        description: The id of the price list for which we want to add a price list entry
        type: string
      variantId:
        description: The id of the variant for which we want to add a price list entry
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdatePriceListEntryRequest:
    title: UpdatePriceListEntryRequest
    properties:
      isIgnored:
        description: 'Gets or sets a value indicating whether the price should be ignored, default is false. If set to true, the price entry will override the parent but will be ignored at the scope level, thus fallbacking to the next available price entry in the current scope'
        type: boolean
        x-nullable: false
      price:
        description: The price of the updated price list entry
        type: number
        format: double
        x-nullable: false
      priceListId:
        description: The id of the price list for which we want to update a price list entry
        type: string
      variantId:
        description: The id of the variant for which we want to update a price list entry
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetEffectivePriceEntryInfoRequest:
    title: GetEffectivePriceEntryInfoRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      productId:
        description: The id of the product for which we want to retrieve the effective price
        type: string
      referenceDate:
        description: 'The Reference Date, null = Now'
        type: string
        format: date-time
      variantId:
        description: The id of the variant for which we want to retrieve the effective price
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetInventoryLocationRequest:
    title: GetInventoryLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      associatedLocationId:
        description: the business id for the inventory location to retrieve
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  GetInventorySchedulesRequest:
    title: GetInventorySchedulesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationId:
        description: the business id for the inventory location which schedules to retrieve
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  AddInventoryScheduleRequest:
    title: AddInventoryScheduleRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      dateRange:
        $ref: '#/definitions/DateRange'
        description: The date range of the schedule
      inventoryStatus:
        description: The status of product inventory
        type: string
        enum:
          - InStock
          - OutOfStock
          - PreOrder
          - BackOrder
      scheduleId:
        description: The inventory schedule identifier
        type: string
        x-nullable: false
      sku:
        description: The associated product sku
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  DateRange:
    title: DateRange
    properties:
      end:
        description: The ending date of the range
        type: string
        format: date-time
        x-nullable: false
      start:
        description: The starting date of the range
        type: string
        format: date-time
        x-nullable: false
    description: DateRange
    type: object
  UpdateInventoryScheduleRequest:
    title: UpdateInventoryScheduleRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      dateRange:
        $ref: '#/definitions/DateRange'
        description: The date range of the schedule
      inventoryStatus:
        description: The status of product inventory
        type: string
        enum:
          - InStock
          - OutOfStock
          - PreOrder
          - BackOrder
      scheduleId:
        description: The inventory schedule identifier used to find the right schedule to update
        type: string
        x-nullable: false
      sku:
        description: The associated product sku
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  CreateInventoryLocationRequest:
    title: CreateInventoryLocationRequest
    properties:
      associatedLocationId:
        description: the business id for the inventory location to retrieve
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  GetInventorySchedulesBySkuRequest:
    title: GetInventorySchedulesBySkuRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationId:
        description: the business id for the inventory location which schedules to retrieve
        type: string
      sku:
        description: the sku for the product which schedules to retrieve
        type: string
    description: Inventory locations are places which manage inventory.
    type: object
  GetInventoryScheduleByIdRequest:
    title: GetInventoryScheduleByIdRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationId:
        description: the business id for the inventory location which schedules to retrieve
        type: string
      scheduleId:
        description: the id of the schedule to retrieve
        type: string
        x-nullable: false
    description: Inventory locations are places which manage inventory.
    type: object
  DeleteInventoryScheduleRequest:
    title: DeleteInventoryScheduleRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationId:
        description: The inventory location identifier used to identify the right schedule to update
        type: string
      scheduleId:
        description: The inventory schedule identifier used to find the right schedule to update
        type: string
        x-nullable: false
    description: Inventory locations are places which manage inventory.
    type: object
  GetInventoryItemBySkuAndLocationRequest:
    title: GetInventoryItemBySkuAndLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      date:
        description: 'The date for which the status will be computed. If is default, DateTime.Now will be used.'
        type: string
        format: date-time
        x-nullable: false
      inventoryLocationId:
        description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
        type: string
      sku:
        description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItem
        type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  FindInventoryItemStatusByLocationAndSkusRequest:
    title: FindInventoryItemStatusByLocationAndSkusRequest
    required:
      - date
    properties:
      date:
        description: The date for which to retrieve InventoryItemStatus
        type: string
        format: date-time
        x-nullable: false
      skus:
        description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItemStatus
        type: array
        items:
          type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  GetInventoryProvidersRequest:
    title: GetInventoryProvidersRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language that data will be returned
        type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  FindInventoryItemsRequest:
    title: FindInventoryItemsRequest
    properties:
      inventoryItemIdentifiers:
        description: the associations between business id for the inventory location and Sku
        type: array
        items:
          $ref: '#/definitions/InventoryItemIdentifier'
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  InventoryItemIdentifier:
    title: InventoryItemIdentifier
    properties:
      inventoryLocationId:
        description: The InventoryLocation identifier
        type: string
      sku:
        description: The Sku (product identifier)
        type: string
    description: InventoryItemIdentifier
    type: object
  GetInventoryItemsByScopeAndSkusRequest:
    title: GetInventoryItemsByScopeAndSkusRequest
    properties:
      date:
        description: 'The date which will be used to compute the status. If is not set, DateTime.Now will be used.'
        type: string
        format: date-time
        x-nullable: false
      includeChildScopes:
        description: Whether inventory locations from child scopes should also be included in the results.
        type: boolean
        x-nullable: false
      maximumItems:
        description: The maximum items returned by the search query
        type: integer
        format: int32
        x-nullable: false
      skus:
        description: SKUs which will be associated to the InventoryLocationId to retrieve inventory items
        type: array
        items:
          type: string
      sortDirection:
        description: The sort direction. (Ascending or descending)
        type: string
        enum:
          - Ascending
          - Descending
      sortOrderField:
        description: the sort order field.
        type: string
        enum:
          - FulfillmentLocationNumber
          - Status
          - Quantity
          - ReservedQuantity
          - AvailableToPromiseQuantity
      startingIndex:
        description: The starting index
        type: integer
        format: int32
        x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  ReserveInventoryItemsRequest:
    title: ReserveInventoryItemsRequest
    properties:
      allowPartialAvailabilityReservation:
        description: The value that allows or not a partial availability reservation
        type: boolean
        x-nullable: false
      effectiveDate:
        description: The effective date of the reservation
        type: string
        format: date-time
      inventoryItemReservationRequests:
        description: The inventory item reservation requests
        type: array
        items:
          $ref: '#/definitions/InventoryItemReservationRequest'
      inventoryLocationId:
        description: The inventory location identifier
        type: string
      ownerType:
        description: The owner type
        type: string
        enum:
          - Order
          - Cart
          - OrderDraft
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  InventoryItemReservationRequest:
    title: InventoryItemReservationRequest
    properties:
      lineItemId:
        description: The line item identifier
        type: string
        x-nullable: false
      lineItemSku:
        description: The line item sku
        type: string
      quantity:
        description: The reserved quantity
        type: number
        format: double
        x-nullable: false
    description: InventoryItemReservationRequest
    type: object
  GetInventoryReservedItemsRequest:
    title: GetInventoryReservedItemsRequest
    properties:
      ownerId:
        description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
        type: string
        x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  GetInventoryItemsByScopeAndSkuRequest:
    title: GetInventoryItemsByScopeAndSkuRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      date:
        description: 'The date which will be used to compute the status. If is not set, DateTime.Now will be used.'
        type: string
        format: date-time
        x-nullable: false
      includeChildScopes:
        description: Whether inventory locations from child scopes should also be included in the results.
        type: boolean
        x-nullable: false
      maximumItems:
        description: 'The maximum items returned by the search query, default to 50'
        type: integer
        format: int32
        x-nullable: false
      sku:
        description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItem
        type: string
      sortDirection:
        description: The sort direction. (Ascending or descending)
        type: string
        enum:
          - Ascending
          - Descending
      sortOrderField:
        description: the sort order field.
        type: string
        enum:
          - FulfillmentLocationNumber
          - Status
          - Quantity
          - ReservedQuantity
          - AvailableToPromiseQuantity
      startingIndex:
        description: The starting index
        type: integer
        format: int32
        x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  GetInventoryItemsByLocationRequest:
    title: GetInventoryItemsByLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationId:
        description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
        type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  FindInventoryItemsStatusByScopeAndSkusRequest:
    title: FindInventoryItemsStatusByScopeAndSkusRequest
    required:
      - date
    properties:
      date:
        description: The date for which to retrieve InventoryItemStatus
        type: string
        format: date-time
        x-nullable: false
      includeChildScopes:
        description: Includes the availabilities for the child scopes.
        type: boolean
        x-nullable: false
      skus:
        description: Sku which will be associated to the InventoryLocationId to retrieve InventoryItemStatus
        type: array
        items:
          type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  CreateOrUpdateInventoryItemRequest:
    title: CreateOrUpdateInventoryItemRequest
    properties:
      quantity:
        $ref: '#/definitions/InventoryQuantity'
        description: The quantified information of this item
      schedules:
        description: The list of schedules
        type: array
        items:
          $ref: '#/definitions/InventorySchedule'
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  InventoryQuantity:
    title: InventoryQuantity
    properties:
      availableToPromiseQuantity:
        description: The computed available to promise quantity of this item
        type: number
        format: double
        x-nullable: false
      backOrderLimit:
        description: The maximum number of product that can be taken from the inventory in back order
        type: number
        format: double
      backOrderReservedQuantity:
        description: The reserved quantity for back order
        type: number
        format: double
      created:
        description: The creation date
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The username of the user who created
        type: string
      id:
        description: The inventory quantity identifier
        type: string
        x-nullable: false
      inventoryLocationId:
        description: The inventory location identifier
        type: string
      isBackOrderable:
        description: The value indicating whether this instance is back orderable
        type: boolean
        x-nullable: false
      isPreOrderable:
        description: The value indicating whether this instance is pre orderable
        type: boolean
        x-nullable: false
      lastModified:
        description: The last modification date
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The username of the user who last modified
        type: string
      lastRestocked:
        description: The date the item was last restocked
        type: string
        format: date-time
      lastRestockedBy:
        description: The username of the user who last restocked the item
        type: string
      preOrderLimit:
        description: The maximum number of product that can be taken from the inventory
        type: number
        format: double
      preOrderReservedQuantity:
        description: The reserved quantity for pre order
        type: number
        format: double
      quantity:
        description: The quantity of this item
        type: number
        format: double
        x-nullable: false
      reOrderPoint:
        description: The number of items which should trigger an alert to re-order the item
        type: number
        format: double
      reservedQuantity:
        description: The reserved quantity of this item
        type: number
        format: double
      safetyStock:
        description: The the safety stock quantity of this item
        type: number
        format: double
      sku:
        description: The sku of the product
        type: string
    description: InventoryQuantity
    type: object
  InventorySchedule:
    title: InventorySchedule
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      dateRange:
        $ref: '#/definitions/DateRange'
        description: The date range of the schedule
      inventoryLocationId:
        description: The inventory location identifier
        type: string
      inventoryStatus:
        description: The status of product inventory
        type: string
        enum:
          - InStock
          - OutOfStock
          - PreOrder
          - BackOrder
      lastModified:
        description: The last modified date time of product inventory
        type: string
        format: date-time
      lastModifiedBy:
        description: The identifier of the operator who last modified the entity
        type: string
      sku:
        description: The associated product sku
        type: string
    description: InventorySchedule
    type: object
  ConfirmInventoryReservedOrderItemsRequest:
    title: ConfirmInventoryReservedOrderItemsRequest
    properties:
      reservationIds:
        description: The inventory reservation identifiers
        type: array
        items:
          type: string
          x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  EvaluateInventoryAvailabilityRequest:
    title: EvaluateInventoryAvailabilityRequest
    properties:
      evaluationDate:
        description: The inventory availability evaluation date
        type: string
        format: date-time
      requests:
        description: The inventory item availability evaluation requests
        type: array
        items:
          $ref: '#/definitions/InventoryItemAvailabilityEvaluationRequest'
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  InventoryItemAvailabilityEvaluationRequest:
    title: InventoryItemAvailabilityEvaluationRequest
    properties:
      inventoryLocationIds:
        description: The inventory location ids
        type: array
        items:
          type: string
      lineItemId:
        description: The line item identifier
        type: string
        x-nullable: false
      lineItemSku:
        description: The line item sku
        type: string
      quantity:
        description: The quantity to evaluate
        type: number
        format: double
        x-nullable: false
    description: InventoryItemAvailabilityEvaluationRequest
    type: object
  CancelInventoryReservedItemsRequest:
    title: CancelInventoryReservedItemsRequest
    properties:
      reservationIds:
        description: The inventory reservation identifiers
        type: array
        items:
          type: string
          x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  CancelAllInventoryReservedItemsRequest:
    title: CancelAllInventoryReservedItemsRequest
    properties:
      inventoryLocationId:
        description: The inventory location identifier
        type: string
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  ChangeInventoryReservedItemsStockStatusRequest:
    title: ChangeInventoryReservedItemsStockStatusRequest
    properties:
      reservationIds:
        description: The inventory reservation identifiers
        type: array
        items:
          type: string
          x-nullable: false
      stockStatus:
        description: The new stock status reservation identifiers
        type: string
        enum:
          - InStock
          - PreOrder
          - BackOrder
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  FindInventoryItemStatusBySkuAndLocationRequest:
    title: FindInventoryItemStatusBySkuAndLocationRequest
    required:
      - date
    properties:
      date:
        description: The date to retrieve InventoryItemStatus
        type: string
        format: date-time
        x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  FindInventoryItemsStatusByScopeAndSkuRequest:
    title: FindInventoryItemsStatusByScopeAndSkuRequest
    required:
      - date
    properties:
      date:
        description: The date to retrieve InventoryItemStatus
        type: string
        format: date-time
        x-nullable: false
      includeChildScopes:
        description: Includes the availabilities for the child scopes.
        type: boolean
        x-nullable: false
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  IncreaseInventoryQuantityRequest:
    title: IncreaseInventoryQuantityRequest
    properties: {}
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  DecreaseInventoryQuantityRequest:
    title: DecreaseInventoryQuantityRequest
    properties: {}
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
    type: object
  UpdateProductRequest:
    title: UpdateProductRequest
    properties:
      addMediaModifications:
        description: Gets or sets the list of media that should be added to the media
        type: array
        items:
          $ref: '#/definitions/AddMediaModification'
      addVariantModifications:
        description: Gets or sets the list of variants that should be added to the product
        type: array
        items:
          $ref: '#/definitions/AddVariantModification'
      deleteMediaModifications:
        description: Gets or sets the list of delete modifications that the draft should apply to the media.
        type: array
        items:
          $ref: '#/definitions/DeleteMediaModification'
      deleteVariantModifications:
        description: Gets or sets the list of modifications that the draft should apply to the variants
        type: array
        items:
          $ref: '#/definitions/DeleteVariantModification'
      mediaPropertyModifications:
        description: Gets or sets the list of modifications that the draft should apply to the media
        type: array
        items:
          $ref: '#/definitions/MediaPropertyModification'
      parentCategoriesModification:
        $ref: '#/definitions/ParentCategoriesModification'
        description: Gets or sets an object representing the category to be associated to the product in draft
      primaryParentCategoryModification:
        $ref: '#/definitions/PrimaryParentCategoryModification'
        description: Gets or sets an object representing the category to be set as primary for the product in draft
      productPropertyModifications:
        description: Gets or sets the list of modifications that the draft should apply to the product
        type: array
        items:
          $ref: '#/definitions/ProductPropertyModification'
      variantPropertyModifications:
        description: Gets or sets the list of modifications that the draft should apply to the variants
        type: array
        items:
          $ref: '#/definitions/VariantPropertyModification'
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  AddMediaModification:
    title: AddMediaModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      attributesToMatch:
        $ref: '#/definitions/PropertyBag'
      cleanUpOnDelete:
        type: boolean
      description:
        $ref: '#/definitions/LocalizedString'
      id:
        type: string
        x-nullable: false
      isCover:
        type: boolean
      mediaType:
        type: string
      position:
        type: integer
        format: int32
      propertyBag:
        $ref: '#/definitions/PropertyBag'
      resizedInstances:
        type: array
        items:
          $ref: '#/definitions/ResizedMediaLink'
      tag:
        type: string
      title:
        $ref: '#/definitions/LocalizedString'
      url:
        type: string
      variantId:
        type: string
    description: AddMediaModification
    type: object
  ResizedMediaLink:
    title: ResizedMediaLink
    properties:
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      size:
        description: the Size of the media.
        type: string
      url:
        description: the Url of the media.
        type: string
    description: ResizedMediaLink
    type: object
  AddVariantModification:
    title: AddVariantModification
    properties:
      active:
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
      sku:
        type: string
      taxCategory:
        type: string
      variantId:
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
      scheduledActivation:
        type: string
        format: date-time
      scheduledDeactivation:
        type: string
        format: date-time
    description: AddVariantModification
    type: object
  DeleteMediaModification:
    title: DeleteMediaModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      id:
        type: string
        x-nullable: false
      isHardDelete:
        type: boolean
        x-nullable: false
    description: DeleteMediaModification
    type: object
  MediaPropertyModification:
    title: MediaPropertyModification
    properties:
      isLocalized:
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
        x-nullable: false
      currentValue:
        $ref: '#/definitions/Object'
      id:
        type: string
        x-nullable: false
      oldValue:
        $ref: '#/definitions/Object'
      propertyName:
        type: string
    description: MediaPropertyModification
    type: object
  DeleteUnusedMediaStorageRequest:
    title: DeleteUnusedMediaStorageRequest
    properties:
      url:
        description: the Url of the media.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductRequest:
    title: GetProductRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      includeImageUrl:
        description: ' Gets or sets a value indicating whether or not to include the image url.'
        type: boolean
        x-nullable: false
      productId:
        description: the business id for the product to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsByIdsRequest:
    title: GetProductsByIdsRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      includeVariants:
        description: whether or not to include the variants (if they exists) of the product.
        type: boolean
        x-nullable: false
      includeMedia:
        description: ' Gets or sets a value indicating whether or not to include the media of the product.'
        type: boolean
        x-nullable: false
      includePriceLists:
        description: whether or not to include the price lists of the product.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the product.'
        type: boolean
        x-nullable: false
      includeImageUrl:
        description: ' Gets or sets a value indicating whether or not to include the image url.'
        type: boolean
        x-nullable: false
      productIds:
        description: the business ids for the products to retrieve
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsStatisticsRequest:
    title: GetProductsStatisticsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateProductPublicationStatusRequest:
    title: UpdateProductPublicationStatusRequest
    required:
      - productIds
      - publicationStatus
    properties:
      productIds:
        description: Ids of the products that are going to be processed
        type: array
        items:
          type: string
      publicationStatus:
        description: 'The publication status that should be set for the products. Supported values are: ''InProgress'', ''PendingApproval'', ''ReadyToCompose'', ''Rejected'' and ''Published''.'
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  RevertProductChangesRequest:
    title: RevertProductChangesRequest
    required:
      - productIds
    properties:
      productIds:
        description: Ids of the products that should be updated.
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPropertiesWithNotificationRequest:
    title: GetProductsPropertiesWithNotificationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture in which the data will be returned
        type: string
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertiesNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
        enum:
          - DisplayName
          - ProductId
          - Price
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPropertiesFlagAsNewRequest:
    title: GetProductsPropertiesFlagAsNewRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture in which the data will be returned
        type: string
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertiesNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
        enum:
          - DisplayName
          - ProductId
          - Price
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsByPublicationStatusRequest:
    title: GetProductsByPublicationStatusRequest
    required:
      - cultureName
    properties:
      cultureName:
        description: The culture in which the data will be returned
        type: string
      includePrice:
        description: The flag to include product's default price
        type: boolean
        x-nullable: false
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertyNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      publicationStatus:
        description: The publication status to filter the products by
        type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      categories:
        description: The list of category ids
        type: array
        items:
          type: string
      continuationToken:
        description: The continuation token used for pagination
        type: string
      includeCount:
        description: The flag to include product count
        type: boolean
        x-nullable: false
      uncategorized:
        description: The flag to filter results to un-categorized products
        type: boolean
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPropertiesByDraftStateAndCategoriesRequest:
    title: GetProductsPropertiesByDraftStateAndCategoriesRequest
    required:
      - cultureName
    properties:
      cultureName:
        description: The culture in which the data will be returned
        type: string
      draftState:
        description: The draft state used to filter the products
        type: string
      maximumItems:
        description: 'The maximum number of results to return. Default value : 10'
        type: integer
        format: int32
        x-nullable: false
      propertiesNames:
        description: the list of properties to return
        type: array
        items:
          type: string
      sortBy:
        description: The name of the property to be sorted
        type: string
        enum:
          - DisplayName
          - ProductId
          - Price
      sortDirection:
        description: The sorting direction
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: the starting index in the results to start getting the products (used for paging purpose)
        type: integer
        format: int32
        x-nullable: false
      categories:
        description: The list of category ids
        type: array
        items:
          type: string
      hasNotification:
        description: The flag to filter results to products with change notifications
        type: boolean
      includeCount:
        description: The flag to include product count
        type: boolean
        x-nullable: false
      isNew:
        description: The flag to filter results to new products only
        type: boolean
      uncategorized:
        description: The flag to filter results to uncategorized products
        type: boolean
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetPriceListsRequest:
    title: GetPriceListsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  FindProductPricesRequest:
    title: FindProductPricesRequest
    properties:
      effectiveDate:
        description: The date which the price is effective.
        type: string
        format: date-time
        x-nullable: false
      includeVariants:
        description: Whether or not to include the variants product price of the product
        type: boolean
        x-nullable: false
      productIds:
        description: The ids of the product use to retrieve ProductPrice
        type: array
        items:
          type: string
      userId:
        description: The UserId for the request.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  CalculatePricesofProductsRequest:
    title: CalculatePricesofProductsRequest
    properties:
      includeVariants:
        description: whether or not to include the variants (if they exist) of the product.
        type: boolean
        x-nullable: false
      productIds:
        description: the business id for the product to retrieve
        type: array
        items:
          type: string
      time:
        description: the price when the date must be computed.
        type: string
        format: date-time
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsPriceEntriesRequest:
    title: GetProductsPriceEntriesRequest
    properties:
      effectiveDate:
        description: The date which the price is effective.
        type: string
        format: date-time
        x-nullable: false
      includeVariant:
        description: Whether or not to include the variant prices of the product
        type: boolean
        x-nullable: false
      productIds:
        description: the business ids for the products to retrieve
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  AddOrUpdatePriceListRequest:
    title: AddOrUpdatePriceListRequest
    properties:
      priceLists:
        description: List of PriceList to import in a specific scope.
        type: array
        items:
          $ref: '#/definitions/PriceList'
      rebuildSearchIndex:
        description: Whether or not the product prices search index will be built following the import. The default value is False.
        type: boolean
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  PriceList:
    title: PriceList
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: The date the price list was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The user who created the price list
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the PriceList'
      endDate:
        description: The end date of the PriceList
        type: string
        format: date-time
      lastModified:
        description: The date the price list was last modified
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The user who last modified the price list
        type: string
      sequenceNumber:
        description: The number used for ordering the PriceList.An integer that allows the ordering of the price lists when they are presented in a list. This number has to be unique.
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: The start date of the PriceList
        type: string
        format: date-time
      type:
        description: The type of the PriceList.
        type: string
      category:
        description: The category of the PriceList.
        type: string
    description: PriceList
    type: object
  AddFromGlobalRequest:
    title: AddFromGlobalRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      cultureNames:
        description: The names of the cultures for which localized data should be preserved.
        type: array
        items:
          type: string
      overwriteIsActiveWith:
        description: Indicates whether to set IsActive property of the pushed products to 'true'.
        type: boolean
      parentCategoryIds:
        description: The categories id values of the categories for which to take the products from.
        type: array
        items:
          type: string
      productIds:
        description: The id values of the products to be pushed to a sales scope.
        type: array
        items:
          type: string
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeleteProductsRequest:
    title: DeleteProductsRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      filterByPublicationStatus:
        description: The publication status to filter the products by. The filtering isn't applied for explicitly passed Product Ids.
        type: string
      includeUncategorized:
        description: 'When set to true, will indicate that all of the uncategorized products should be deleted.'
        type: boolean
        x-nullable: false
      parentCategoryIds:
        description: The categories id values of the categories from which products will be deleted.
        type: array
        items:
          type: string
      productIds:
        description: The id values of the products to be deleted.
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  BulkAssignProductCategoriesRequest:
    title: BulkAssignProductCategoriesRequest
    properties:
      categoryIdsToAssign:
        description: 'When specified, the products will have those categories assigned.'
        type: array
        items:
          type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      filterByPublicationStatus:
        description: The publication status to filter the products by. The filtering isn't applied for explicitly explicitly passed Product Ids.
        type: string
      includeUncategorized:
        description: 'When set to true, will indicate that all of the uncategorized products should be updated.'
        type: boolean
        x-nullable: false
      moveProducts:
        description: 'When set to true, the products will be disassociated form the previously assigned categories.'
        type: boolean
        x-nullable: false
      parentCategoryIds:
        description: 'The id-s of the categories, products of which should be updated.'
        type: array
        items:
          type: string
      productIds:
        description: The id values of the products to be updated.
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  BulkUpdatePublicationStatusRequest:
    title: BulkUpdatePublicationStatusRequest
    required:
      - publicationStatus
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      filterByPublicationStatus:
        description: The publication status to filter the products by. The filtering isn't applied for explicitly explicitly passed Product Ids.
        type: string
      includeUncategorized:
        description: 'When set to true, will indicate that all of the uncategorized products should be updated.'
        type: boolean
        x-nullable: false
      parentCategoryIds:
        description: 'The id-s of the categories, products of which should be updated.'
        type: array
        items:
          type: string
      productIds:
        description: The id values of the products to be updated.
        type: array
        items:
          type: string
      publicationStatus:
        description: 'The publication status that should be set for the products. Supported values are: ''InProgress'', ''PendingApproval'', ''ReadyToCompose'', ''Rejected'' and ''Published''.'
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  BulkRevertProductChangesRequest:
    title: BulkRevertProductChangesRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      filterByPublicationStatus:
        description: The publication status to filter the products by. The filtering isn't applied for explicitly explicitly passed Product Ids.
        type: string
      includeUncategorized:
        description: 'When set to true, will indicate that all of the uncategorized products should be updated.'
        type: boolean
        x-nullable: false
      parentCategoryIds:
        description: 'The id-s of the categories, products of which should be updated.'
        type: array
        items:
          type: string
      productIds:
        description: The id values of the products to be updated.
        type: array
        items:
          type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetMediaSettingsRequest:
    title: GetMediaSettingsRequest
    properties: {}
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateMediaSettingsRequest:
    title: UpdateMediaSettingsRequest
    properties:
      mediaAcceptedFileTypes:
        description: accepted file types
        type: string
      mediaCoverImageSize:
        description: this value is used for choosing the size of the of the image when returning ImageUrl for a product cover image
        type: string
      mediaFallbackImageName:
        description: a fallback image name
        type: string
      mediaProductFileNameConvention:
        description: a product filename convention
        type: string
      mediaProductKeyVariantFileNameConvention:
        description: a product variant file name convention
        type: string
      mediaProductVariantFileNameConvention:
        description: ' a product variant file name convention'
        type: string
      mediaResizeUploadedImagesServerSide:
        description: a value indicating whether resize uploaded images server-side
        type: boolean
      mediaServerUrl:
        description: media server url
        type: string
      mediaSizes:
        $ref: '#/definitions/Dictionary_String_String_'
        description: dimensions for different image sizes (f.e. S|M|L|XL)
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  DeleteProductSettingsEntryRequest:
    title: DeleteProductSettingsEntryRequest
    properties:
      entry:
        description: the product settings entry to delete
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductDefinitionRequest:
    title: GetProductDefinitionRequest
    required:
      - name
    properties:
      cultureName:
        description: The culture name in which language the data will be returned
        type: string
      name:
        description: The id to retrieve the related entity definition
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetMediaRequest:
    title: GetMediaRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      mediaId:
        description: a media id
        type: string
        x-nullable: false
      productId:
        description: the business id for the product to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UploadMediaRequest:
    title: UploadMediaRequest
    properties:
      attributesToMatch:
        $ref: '#/definitions/PropertyBag'
        description: the attribute values for which we want to upload media
      description:
        $ref: '#/definitions/LocalizedString'
        description: a general description of the Media
      mediaType:
        description: the MediaType of the media
        type: string
      tag:
        description: a tag of the Media
        type: string
      title:
        $ref: '#/definitions/LocalizedString'
        description: the title of the Media
      url:
        description: the Url instead upload image
        type: string
      variantId:
        description: the id of the variant for which we want to upload media
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  CopyProductRequest:
    title: CopyProductRequest
    properties: {}
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductsBySkuV2Request:
    title: GetProductsBySkuV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      includePriceLists:
        description: whether or not to include the price lists of the products.
        type: boolean
        x-nullable: false
      includeRelationships:
        description: ' Gets or sets a value indicating whether or not to include the relationships of the products.'
        type: boolean
        x-nullable: false
      searchVariantSkus:
        description: 'Gets or sets a value indicating whether or not to search for variant SKU-s, in addition to searching in product SKU-s.'
        type: boolean
        x-nullable: false
      sku:
        description: the stock keeping unit code (SKU) for the products to retrieve
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetMediaBySkuRequest:
    title: GetMediaBySkuRequest
    properties:
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      mediaType:
        description: the MediaType of the media
        type: string
      tag:
        description: a tag of the Media
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateVariantsPriceListEntryRequest:
    title: UpdateVariantsPriceListEntryRequest
    properties:
      priceListEntries:
        description: The list of prices
        type: array
        items:
          $ref: '#/definitions/PriceListEntry'
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  PriceListEntry:
    title: PriceListEntry
    properties:
      isIgnored:
        description: 'Gets or sets a value indicating whether the price should be ignored, default is false. If set to true, the price entry will override the parent but will be ignored at the scope level, thus fallbacking to the next available price entry in the current scope'
        type: boolean
        x-nullable: false
      price:
        description: The price
        type: number
        format: double
        x-nullable: false
      priceListId:
        description: The id of the price List
        type: string
      productId:
        description: The id of the product
        type: string
      variantId:
        description: The id of the variant
        type: string
    description: PriceListEntry
    type: object
  DeletePriceListEntryRequest:
    title: DeletePriceListEntryRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      priceListId:
        description: The id of the price list for which we want to delete a price list entry
        type: string
      productId:
        description: The id of the product for which we want to delete a price list entry
        type: string
      variantId:
        description: The id of the variant for which we want to delete a price list entry
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateMediaResizedInstancesRequest:
    title: UpdateMediaResizedInstancesRequest
    properties:
      resizedInstances:
        description: resized instances
        type: array
        items:
          $ref: '#/definitions/ResizedMediaLink'
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  CreateProductRequest:
    title: CreateProductRequest
    properties:
      active:
        description: A value indicating whether the Product is active or not.
        type: boolean
        x-nullable: false
      brand:
        description: The brand of the product.
        type: string
      definitionName:
        description: The name (business key) of the definition to use for the product.
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The general description of the product.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: ' A UI friendly name for the product. Can be multilingual.'
      includeInSearch:
        description: Indicates whether or not the product should be included in the front-end search result.
        type: boolean
      itemFormat:
        description: The item format of the product.
        type: number
        format: double
      listPrice:
        description: The default price for the product.
        type: number
        format: double
      newProductDate:
        description: The date until which the product is flagged as a new product introduction.
        type: string
        format: date-time
      parentCategory:
        description: The category to use as parent for the product.
        type: string
      productId:
        description: The ID (business key) to use for the product to create.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the product information that will be saved.
      publicationStatus:
        description: The publication status of the added product.
        type: string
      sellingMethod:
        description: The selling method of the product.
        type: string
      sku:
        description: The stock keeping unit code (SKU) of the product.
        type: string
      taxCategory:
        description: The tax category of the product.
        type: string
      unitOfMeasure:
        description: The unit of measure of the product.
        type: string
      weight:
        description: The weight of the product.
        type: number
        format: double
      weightUOM:
        description: The unit of measure of the weight of the product.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductSettingsRequest:
    title: GetProductSettingsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  UpdateProductSettingsRequest:
    title: UpdateProductSettingsRequest
    properties:
      allowTranslationFromSalesToGlobal:
        description: whether or not the changes to multilingual attributes in a sales scope should be copied over to the Global scope.
        type: boolean
      availableInventoryStatuses:
        description: the list of inventory statuses available to search.
        type: string
      defaultProductImportStatus:
        description: Specify what will be the Active value for the products imported.
        type: string
      enableExtendedProductWorkflow:
        description: a value indicating whether the product workflow is simple (false) or with composer (true).
        type: boolean
      isInventoryEnabled:
        description: Determine if the inventory is enabled
        type: boolean
      isPricingAuditEnabled:
        description: the changes made to an price will be audited
        type: boolean
        x-nullable: false
      maxNumberOfMediaItems:
        description: the maximum number of media items
        type: integer
        format: int32
      maxNumberOfProductAttributes:
        description: the maximum number of product attributes
        type: integer
        format: int32
      maxNumberOfRelationships:
        description: the maximum number of relations
        type: integer
        format: int32
      maxNumberOfVariantAttributes:
        description: the maximum number of variant attributes.
        type: integer
        format: int32
      maxNumberOfVariants:
        description: the maximum number of variants
        type: integer
        format: int32
      newProductDays:
        description: the number of days the product stays in the New count.
        type: integer
        format: int32
      notifySameScopeOtherLanguages:
        description: Whether or not to create notifications (for changes in system culture)  to all other languages of the same scope as the changes.
        type: boolean
      overrideGreaterThanZeroPricingConstraint:
        description: System setting to allow overriding the default behavior of not allowing any product with regular prices to be saved at 0 pricing.
        type: boolean
      productExportMaxNumberOfItemPerFile:
        description: the maximum number of product in a file for the product export.
        type: integer
        format: int32
      propertyBag:
        $ref: '#/definitions/Dictionary_String_String_'
        description: the custom settings
      skuUniquenessLevel:
        description: Specifies the product and variant sku uniqueness level.
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetQuickLinksCountDetailsRequest:
    title: GetQuickLinksCountDetailsRequest
    required:
      - catalogName
      - cultureName
    properties:
      catalogName:
        description: The catalog name to be used for quick links count
        type: string
      cultureName:
        description: The culture name that should be used to retrieve data
        type: string
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductAttributesRequest:
    title: GetProductAttributesRequest
    properties: {}
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  GetProductDefinitionsRequest:
    title: GetProductDefinitionsRequest
    required:
      - productType
    properties:
      cultureName:
        description: The culture name in which language tha data will be returned
        type: string
      productType:
        description: 'The type of definition, either Product or Category are the possible values'
        type: string
        enum:
          - Product
          - Category
    description: Products are entities which represents a buyable item managed in a catalog.
    type: object
  ExportProductPricesRequest:
    title: ExportProductPricesRequest
    properties:
      priceLists:
        description: The names of the price lists to include in the request. (Default price list is always exported)
        type: array
        items:
          type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProductsPricesRequest:
    title: ImportProductsPricesRequest
    properties:
      allowPricesDeleting:
        description: Whether or not the import have to delete prices which are not specified in the import file.
        type: boolean
        x-nullable: false
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      maximumErrors:
        description: The maximum number of validation errors that can be encountered.
        type: integer
        format: int32
        x-nullable: false
      path:
        description: The path of the file(s) to import.
        type: string
      rebuildSearchIndex:
        description: Indicates whether or not the search indexes are rebuilt after the import. The default value is True (when not set)
        type: boolean
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  CreateRelationshipsRequest:
    title: CreateRelationshipsRequest
    properties:
      entities:
        description: Indicates the entities to which the related entities are to be applied
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      entitiesType:
        description: Indicates the type of the entities
        type: string
        enum:
          - Category
          - Product
      merchandiseType:
        description: The MerchandiseType of the relationships. The type is based on the MerchandiseType Lookup. Contains the value of the lookup
        type: string
      mutual:
        description: Indicates whether the relationships to create should be mutual between the entities and the related entities
        type: boolean
        x-nullable: false
      relatedEntities:
        description: Indicates the related entities which are to be applied to the entities
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      relatedEntitiesType:
        description: Indicates the type of the related entities
        type: string
        enum:
          - Category
          - Product
    description: The API used to handle Relationships between entities.
    type: object
  RelationshipEntity:
    title: RelationshipEntity
    properties:
      entityId:
        description: Entity identifier
        type: string
      parentId:
        description: Parent identifier
        type: string
    description: RelationshipEntity
    type: object
  DeleteRelationshipsRequest:
    title: DeleteRelationshipsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      ids:
        description: Ids of the relationships to delete
        type: array
        items:
          type: integer
          format: int32
          x-nullable: false
    description: The API used to handle Relationships between entities.
    type: object
  CreateSelfReferencingRelationshipsRequest:
    title: CreateSelfReferencingRelationshipsRequest
    properties:
      entities:
        description: Indicates the entities to which the relationships are to be applied
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      entitiesType:
        description: Indicates the type of the entities
        type: string
        enum:
          - Category
          - Product
      merchandiseType:
        description: The MerchandiseType of the relationships. The type is based on the MerchandiseType Lookup. Contains the value of the lookup
        type: string
    description: The API used to handle Relationships between entities.
    type: object
  CreateRelationshipsV2Request:
    title: CreateRelationshipsV2Request
    properties:
      count:
        description: 'A quantity for the Relationship. For example, X has 7 items of the relation Y.'
        type: integer
        format: int32
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A general description of the Relationship. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      entities:
        description: Indicates the entities to which the related entities are to be applied
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      entitiesType:
        description: Indicates the type of the entities
        type: string
        enum:
          - Category
          - Product
      merchandiseType:
        description: The MerchandiseType of the relationships. The type is based on the MerchandiseType Lookup. Contains the value of the lookup
        type: string
      mutual:
        description: Indicates whether the relationships to create should be mutual between the entities and the related entities
        type: boolean
        x-nullable: false
      qualifier:
        description: A qualifier for the Relationship. Flexible property that allows the consumer to enter custom information about the relationship
        type: string
      relatedEntities:
        description: Indicates the related entities which are to be applied to the entities
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      relatedEntitiesType:
        description: Indicates the type of the related entities
        type: string
        enum:
          - Category
          - Product
    description: The API used to handle Relationships between entities.
    type: object
  DeleteRelationshipsV2Request:
    title: DeleteRelationshipsV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      ids:
        description: Ids of the relationships to delete
        type: array
        items:
          type: string
    description: The API used to handle Relationships between entities.
    type: object
  ClearRelationshipsRequest:
    title: ClearRelationshipsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      entityId:
        description: the entity identifier
        type: string
      entityType:
        description: the type of the entity
        type: string
        enum:
          - Category
          - Product
      parentId:
        description: the parent identifier
        type: string
    description: The API used to handle Relationships between entities.
    type: object
  CreateSelfReferencingRelationshipsV2Request:
    title: CreateSelfReferencingRelationshipsV2Request
    properties:
      count:
        description: 'A quantity for the Relationship. For example, X has 7 items of the relation Y.'
        type: integer
        format: int32
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A general description of the Relationship. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      entities:
        description: Indicates the entities to which the relationships are to be applied
        type: array
        items:
          $ref: '#/definitions/RelationshipEntity'
      entitiesType:
        description: Indicates the type of the entities
        type: string
        enum:
          - Category
          - Product
      merchandiseType:
        description: The MerchandiseType of the relationships. The type is based on the MerchandiseType Lookup. Contains the value of the lookup
        type: string
      qualifier:
        description: A qualifier for the Relationship. Flexible property that allows the consumer to enter custom information about the relationship
        type: string
    description: The API used to handle Relationships between entities.
    type: object
  ClearRelationshipsV2Request:
    title: ClearRelationshipsV2Request
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      entityId:
        description: the entity identifier
        type: string
      entityType:
        description: 'The type of the entity whose relationship should be deleted. For deleting relationships of a product variant, ''Product'' should be specified and ParentId should be set to Product Id.'
        type: string
        enum:
          - Category
          - Product
      parentId:
        description: This parameter should be specified when deleting a product variant. In this case this field will contain product's Id.
        type: string
    description: The API used to handle Relationships between entities.
    type: object
  ProductInformationExportRequest:
    title: ProductInformationExportRequest
    properties:
      breakInheritance:
        description: Indicates to break or not inheritance for Products.
        type: boolean
        x-nullable: false
      category:
        description: The category to export.
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      cultures:
        description: The languages to include in the export.
        type: array
        items:
          type: string
      fileFormat:
        description: 'The file format of the export, JSON, XML or Excel.'
        type: string
      filePath:
        description: The File path in the blob storage.
        type: string
      includeCategories:
        description: Indicates to include or not the categories.
        type: boolean
        x-nullable: false
      includePrices:
        description: Indicates to include or not the prices.
        type: boolean
        x-nullable: false
      includeProducts:
        description: Indicates to include or not the products.
        type: boolean
        x-nullable: false
      includeSchema:
        description: Indicates to include or not the schema.
        type: boolean
        x-nullable: false
      taskId:
        description: The task id.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ProductInformationImportRequest:
    title: ProductInformationImportRequest
    properties:
      allowPricesDeleting:
        description: Whether or not the import have to delete prices which are not specified in the import file.
        type: boolean
        x-nullable: false
      containerName:
        description: The name of container which import file exists
        type: string
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      extendedOptions:
        $ref: '#/definitions/ImportProductExtendedOptions'
        description: The extended options applied during the import process.
      fileFormat:
        description: 'The file format of the import, Zip, JSON, XML or Excel.'
        type: string
      maximumErrors:
        description: The maximum number of validation errors that can be encountered. 0 means infinite number.
        type: integer
        format: int32
        x-nullable: false
      path:
        description: The path of the file(s) to import.
        type: string
      rebuildSearchIndex:
        description: Indicates whether or not the search indexes are rebuilt after the import. The default value is True (when not set).
        type: boolean
      reIndex:
        description: Whether or not the indexes are built after the import. The default value is True (when not set).
        type: boolean
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ExportProductPriceRequest:
    title: ExportProductPriceRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      culture:
        description: The language to include in the export.
        type: string
      fileFormat:
        description: 'The file format of the export, Excel.'
        type: string
      filePath:
        description: The File path in the blob storage.
        type: string
      priceListId:
        description: The priceList id.
        type: string
      products:
        description: The list of products to export.
        type: array
        items:
          type: string
      taskId:
        description: The task id.
        type: string
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  ImportProductPriceRequest:
    title: ImportProductPriceRequest
    properties:
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      fileFormat:
        description: 'The file format of the export, Excel.'
        type: string
      maximumErrors:
        description: The maximum number of validation errors that can be encountered. 0 means infinite number.
        type: integer
        format: int32
        x-nullable: false
      path:
        description: The path of the file(s) to import.
        type: string
      priceListId:
        description: The priceList Id.
        type: string
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
    type: object
  GetFulfillmentCarrierQuotesRequest:
    title: GetFulfillmentCarrierQuotesRequest
    properties:
      addressBilling:
        $ref: '#/definitions/FulfillmentCarrierAddress'
        description: The billing address for the package.
      addressFrom:
        $ref: '#/definitions/FulfillmentCarrierAddress'
        description: The address where the package originates.
      addressTo:
        $ref: '#/definitions/FulfillmentCarrierAddress'
        description: The destination address of the package.
      cultureName:
        description: The culture (language) in which the quote is being processed.
        type: string
      isReturn:
        description: A value indicating whether the quote is for a return shipment.
        type: boolean
        x-nullable: false
      orderLocation:
        $ref: '#/definitions/FulfillmentCarrierOrderLocation'
        description: The order location used to generate quotes.
      package:
        $ref: '#/definitions/FulfillmentCarrierPackage'
        description: The package used to generate quotes.
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentCarrierAddress:
    title: FulfillmentCarrierAddress
    properties:
      addressName:
        type: string
      city:
        type: string
      countryCode:
        type: string
      regionCode:
        type: string
      line1:
        type: string
      line2:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
      phoneExtension:
        type: string
      postalCode:
        type: string
      email:
        type: string
      isResidential:
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
    description: FulfillmentCarrierAddress
    type: object
  FulfillmentCarrierOrderLocation:
    title: FulfillmentCarrierOrderLocation
    properties:
      id:
        type: string
        x-nullable: false
      name:
        type: string
      number:
        type: string
      email:
        type: string
      timeZone:
        type: string
    description: FulfillmentCarrierOrderLocation
    type: object
  FulfillmentCarrierPackage:
    title: FulfillmentCarrierPackage
    properties:
      packageId:
        type: string
        x-nullable: false
      packageType:
        type: string
      weightUOM:
        type: string
      weight:
        type: number
        format: double
        x-nullable: false
      distanceUOM:
        type: string
      length:
        type: number
        format: double
        x-nullable: false
      height:
        type: number
        format: double
        x-nullable: false
      width:
        type: number
        format: double
        x-nullable: false
      items:
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierPackageItem'
    description: FulfillmentCarrierPackage
    type: object
  FulfillmentCarrierPackageItem:
    title: FulfillmentCarrierPackageItem
    properties:
      name:
        type: string
      sku:
        type: string
      quantity:
        type: number
        format: double
        x-nullable: false
      unitOfMeasure:
        type: string
      weightUOM:
        type: string
      weight:
        type: number
        format: double
        x-nullable: false
      valueAmount:
        type: number
        format: double
        x-nullable: false
      valueCurrency:
        type: string
      countryCodeOfOrigin:
        type: string
    description: FulfillmentCarrierPackageItem
    type: object
  CreateFulfillmentCarrierManifestRequest:
    title: CreateFulfillmentCarrierManifestRequest
    properties:
      carrierAccountId:
        description: The optional carrier account id used for the package.
        type: string
      carrierAccountName:
        description: The optional carrier account name used for the package.
        type: string
      carrierName:
        description: The optional carrier name used for the package.
        type: string
      carrierServiceLevel:
        description: The optional carrier sevice level used for the package.
        type: string
      cultureName:
        description: The name of the culture (language) to use to render any messages.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
        x-nullable: false
      packageIds:
        description: The package's ids to create a manifest for. An empty list will do all unmanifested packages for this carrier.
        type: array
        items:
          type: string
          x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  AddFulfillmentCompetitionLocationsRequest:
    title: AddFulfillmentCompetitionLocationsRequest
    properties:
      fulfillmentLocationIds:
        description: The list of fulfillment locations to add into the specified fulfillment competition.
        type: array
        items:
          type: string
          x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  ChangeFulfillmentCompetitionStatusRequest:
    title: ChangeFulfillmentCompetitionStatusRequest
    properties:
      status:
        description: The new status of the fulfillment competition.
        type: string
        enum:
          - Pending
          - InProgress
          - Abandoned
          - Completed
          - Canceled
          - Expired
    description: API calls used during the fulfillment process.
    type: object
  RemoveFulfillmentCompetitionLocationsRequest:
    title: RemoveFulfillmentCompetitionLocationsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentCompetitionId:
        description: The identifier of the fulfillment competition from which the fulfillment competition locations are removed.
        type: string
        x-nullable: false
      fulfillmentLocationIds:
        description: The list of the fulfillment location identifiers which will be removed from the fulfillment competition.
        type: array
        items:
          type: string
          x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  GetFulfillmentExceptionsRequest:
    title: GetFulfillmentExceptionsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
        x-nullable: false
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  DeleteFulfillmentPackageForShipmentRequest:
    title: DeleteFulfillmentPackageForShipmentRequest
    properties:
      scopeId:
        description: The scope identifier.
        type: string
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  ConfirmFulfillmentCarrierQuotesRequest:
    title: ConfirmFulfillmentCarrierQuotesRequest
    properties:
      quotes:
        description: The quotes to confirm.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierQuoteToConfirm'
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentCarrierQuoteToConfirm:
    title: FulfillmentCarrierQuoteToConfirm
    properties:
      quoteId:
        type: string
      package:
        $ref: '#/definitions/FulfillmentCarrierPackage'
      addressFrom:
        $ref: '#/definitions/FulfillmentCarrierAddress'
      addressTo:
        $ref: '#/definitions/FulfillmentCarrierAddress'
      addressBilling:
        $ref: '#/definitions/FulfillmentCarrierAddress'
      isReturn:
        type: boolean
        x-nullable: false
    description: FulfillmentCarrierQuoteToConfirm
    type: object
  RefundFulfillmentCarrierQuotesRequest:
    title: RefundFulfillmentCarrierQuotesRequest
    properties:
      quotes:
        description: The quotes to refund.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierQuoteToRefund'
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentCarrierQuoteToRefund:
    title: FulfillmentCarrierQuoteToRefund
    properties:
      confirmationId:
        type: string
      quoteId:
        type: string
    description: FulfillmentCarrierQuoteToRefund
    type: object
  GetFulfillmentCarrierDocumentsRequest:
    title: GetFulfillmentCarrierDocumentsRequest
    properties:
      documentsToRetrieve:
        description: The documents to retrieve.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierDocumentToRetrieve'
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentCarrierDocumentToRetrieve:
    title: FulfillmentCarrierDocumentToRetrieve
    properties:
      confirmationId:
        type: string
      quoteId:
        type: string
    description: FulfillmentCarrierDocumentToRetrieve
    type: object
  ChangeFulfillmentCompetitionLocationStatusRequest:
    title: ChangeFulfillmentCompetitionLocationStatusRequest
    properties:
      status:
        description: The new status of the fulfillment competition location.
        type: string
        enum:
          - Participant
          - Winner
          - OptedOut
    description: API calls used during the fulfillment process.
    type: object
  CreateOrUpdateFulfillmentExceptionRequest:
    title: CreateOrUpdateFulfillmentExceptionRequest
    properties:
      note:
        description: The note.
        type: string
      reasonLookupValue:
        description: The reason lookup value.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  DeleteFulfillmentExceptionRequest:
    title: DeleteFulfillmentExceptionRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
        x-nullable: false
      lineItemId:
        description: The identifier of the line item.
        type: string
        x-nullable: false
      orderId:
        description: The identifier of the order.
        type: string
        x-nullable: false
      shipmentId:
        description: The identifier of the shipment.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  CreateFulfillmentCompetitionRequest:
    title: CreateFulfillmentCompetitionRequest
    properties:
      fulfillmentLocationIds:
        description: the list of the fulfillment locations who are participating in the newly created competition.
        type: array
        items:
          type: string
          x-nullable: false
      id:
        description: The fulfillment competition's identifier which can be specified when creating the competition. Otherwise it is generated automatically.
        type: string
        x-nullable: false
      orderId:
        description: The identifier of the order whose shipment's fulfillment is subject of the competition.
        type: string
        x-nullable: false
      shipmentId:
        description: The identifier of the shipment whose fulfillment is subject of the competition.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  CreateFulfillmentPackageRequest:
    title: CreateFulfillmentPackageRequest
    properties:
      carrierAccountIdOutbound:
        description: The carrier account id used for the package for outbound.
        type: string
      carrierAccountNameOutbound:
        description: The carrier account name used for the package for outbound.
        type: string
      carrierManifestRequirement:
        description: The carrier manifest requirement.
        type: string
        enum:
          - Unknown
          - Required
          - NotRequired
          - Excluded
      carrierManifestStatus:
        description: The carrier manifest status.
        type: string
        enum:
          - None
          - Pending
          - Manifested
          - Error
      carrierNameOutbound:
        description: The carrier name used for the package for outbound.
        type: string
      carrierServiceLevelOutbound:
        description: The carrier service level used for the package for outbound.
        type: string
      fulfillmentPackageItems:
        description: The fulfillment package items.
        type: array
        items:
          $ref: '#/definitions/FulfillmentPackageItem'
      fulfillmentPackageTypeId:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      id:
        description: The fulfillment package identifier.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes
      returnTrackingNumber:
        description: The return tracking number.
        type: string
      returnTrackingReferenceId:
        description: The return tracking reference id.
        type: string
      returnTrackingUrl:
        description: The return tracking url.
        type: string
      trackingNumber:
        description: The tracking number.
        type: string
      trackingReferenceId:
        description: The tracking reference id.
        type: string
      trackingUrl:
        description: The tracking url.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentPackageItem:
    title: FulfillmentPackageItem
    properties:
      id:
        description: The fulfillment package item identifier.
        type: string
        x-nullable: false
      lineItemId:
        description: The line item identifier.
        type: string
        x-nullable: false
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
      pickingMissionItemId:
        description: The picking mission item identifier.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this package.
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
    description: FulfillmentPackageItem
    type: object
  CreateFulfillmentPackageTypeRequest:
    title: CreateFulfillmentPackageTypeRequest
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type description.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type display name.
      distanceUOM:
        description: The Distance UOM.
        type: string
      height:
        description: The UOM Height.
        type: number
        format: double
        x-nullable: false
      id:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      isActive:
        description: A value indicating whether the fulfillment package type is active or not.
        type: boolean
        x-nullable: false
      length:
        description: The UOM Length.
        type: number
        format: double
        x-nullable: false
      shortDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type short display name.
      width:
        description: The UOM Width.
        type: number
        format: double
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  CreateFulfillmentSLARequest:
    title: CreateFulfillmentSLARequest
    properties:
      defaultDelayInMinutesWhenSLADateExceedsMaxDate:
        description: The default delay in minutes when the SLA time exceeded the max days (Default is 5).
        type: integer
        format: int32
      delayInMinutes:
        description: The delay before the sla will expire.
        type: integer
        format: int32
        x-nullable: false
      expiryDate:
        description: The expiry date and time to use if passed in to the request.
        type: string
        format: date-time
      expiryWarningTimeInMinutes:
        description: The warning time before the sla will expire.
        type: integer
        format: int32
        x-nullable: false
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
      id:
        description: The fulfillment sla id.
        type: string
        x-nullable: false
      name:
        description: The name.
        type: string
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
      scheduleType:
        description: The schedule type to use.
        type: string
        enum:
          - OpeningHours
          - Delivery
          - Pickup
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
      slaCreationMaxDays:
        description: The number of days the SLA can extend into the future (Default is 30).
        type: integer
        format: int32
    description: API calls used during the fulfillment process.
    type: object
  DisableFulfillmentSLARequest:
    title: DisableFulfillmentSLARequest
    properties:
      id:
        description: The fulfillment SLA id.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  DeleteFulfillmentCompetitionRequest:
    title: DeleteFulfillmentCompetitionRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentCompetitionId:
        description: The identifier of the fulfillment competition to be removed.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentCompetitionsRequest:
    title: FindFulfillmentCompetitionsRequest
    properties:
      fulfillmentCompetitionLocationStatuses:
        description: The list of fulfillment competition location statuses.
        type: array
        items:
          type: string
          x-nullable: false
      fulfillmentCompetitionStatuses:
        description: The list of fulfillment competition statuses.
        type: array
        items:
          type: string
          x-nullable: false
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
      orderId:
        description: The order identifier.
        type: string
      shipmentId:
        description: The shipment identifier.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  GetFulfillmentCompetitionRequest:
    title: GetFulfillmentCompetitionRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentCompetitionId:
        description: The fulfillment competition identifier.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentCompetitionsCountRequest:
    title: FindFulfillmentCompetitionsCountRequest
    properties:
      fulfillmentCompetitionLocationStatuses:
        description: The list of fulfillment competition location statuses.
        type: array
        items:
          type: string
          x-nullable: false
      fulfillmentCompetitionStatuses:
        description: The list of fulfillment competition statuses.
        type: array
        items:
          type: string
          x-nullable: false
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
      orderId:
        description: The order identifier.
        type: string
      shipmentId:
        description: The shipment identifier.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentOrdersRequest:
    title: FindFulfillmentOrdersRequest
    properties:
      fulfillmentLocationId:
        description: The fulfillment location id orders' shipment need to be associated to.
        type: string
        x-nullable: false
      fulfillmentShipmentStatuses:
        description: The list of fulfillment shipment statuses orders' shipment need to be associated to.
        type: array
        items:
          $ref: '#/definitions/FulfillmentShipmentStatus'
      maximumItems:
        description: 'The maximum number of results to return. Default value : 50'
        type: integer
        format: int32
      minimumLimitDate:
        description: a date in the past defining the limit to get orders based on its creation date. It is ignored when 'SearchTerms' has a value.
        type: string
        format: date-time
      orderIds:
        description: A list of specific order ids needed to be fetched.
        type: array
        items:
          type: string
          x-nullable: false
      searchTerms:
        description: A series of terms that will be used in the search for shipments.
        type: string
      sortDirection:
        description: Whether it should use ascending order (using order creation date) or descending order (using order last modified date).
        type: string
        enum:
          - Ascending
          - Descending
      startingIndex:
        description: The starting index in the results to start getting the orders.
        type: integer
        format: int32
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentShipmentStatus:
    title: FulfillmentShipmentStatus
    properties:
      aggregatedStatus:
        description: The aggregated status for the location we fetch fulfillment shipments for.
        type: string
      isForPickUpLocation:
        description: A value indicating whether the shipment status needs to apply to a pick location.
        type: boolean
        x-nullable: false
      shipmentStatus:
        description: A shipment status we want fulfillment shipments for.
        type: string
    description: FulfillmentShipmentStatus
    type: object
  TransferFulfillmentPackageItemsRequest:
    title: TransferFulfillmentPackageItemsRequest
    properties:
      destinationFulfillmentPackageId:
        description: The fulfillment package identifier to transfer items to. Set to null to create a new fulfillment package using default package type.
        type: string
      fulfillmentPackageItemTransferInfos:
        description: A list containing information about fulfillment package items that needs to be transfer from one package to another.
        type: array
        items:
          $ref: '#/definitions/FulfillmentPackageItemTransferInfo'
      sourceFulfillmentPackageId:
        description: The fulfillment package identifier to transfer items from.
        type: string
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  FulfillmentPackageItemTransferInfo:
    title: FulfillmentPackageItemTransferInfo
    properties:
      id:
        description: The fulfillment package item identifier.
        type: string
        x-nullable: false
    description: FulfillmentPackageItemTransferInfo
    type: object
  GetFulfillmentPackageRequest:
    title: GetFulfillmentPackageRequest
    properties:
      cultureName:
        description: The culture name in which language the data for the fulfillment package type will be returned
        type: string
      id:
        description: The fulfillment package identifier.
        type: string
        x-nullable: false
      includeFulfillmentPackageType:
        description: A value indicating whether the fulfillment package type should be returns along the fulfillment package.
        type: boolean
        x-nullable: false
      scopeId:
        description: The scope id.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentPackagesRequest:
    title: FindFulfillmentPackagesRequest
    properties:
      cultureName:
        description: The culture name in which language the data for the fulfillment package type will be returned
        type: string
      includeFulfillmentPackageType:
        description: A value indicating whether the fulfillment package type should be returns along each fulfillment package.
        type: boolean
        x-nullable: false
      orderId:
        description: The order identifier.
        type: string
      scopeId:
        description: The scope identifier.
        type: string
      shipmentIds:
        description: A list of shipment identifier.
        type: array
        items:
          type: string
          x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentManifestPackagesRequest:
    title: FindFulfillmentManifestPackagesRequest
    properties:
      carrierAccountIdOutbound:
        description: The carrier account id for outbound.
        type: string
      carrierAccountNameOutbound:
        description: The carrier account name for outbound.
        type: string
      carrierManifestRequirement:
        description: The optional carrier manifest requirement to find.
        type: string
        enum:
          - Unknown
          - Required
          - NotRequired
          - Excluded
      carrierNameOutbound:
        description: The carrier name for outbound.
        type: string
      carrierServiceLevelOutbound:
        description: The carrier service level for outbound.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
        x-nullable: false
      fulfillmentStatus:
        description: The optional fulfillment status.
        type: string
      includePackageItems:
        description: A value indicating whether fulfillment package items are retrieved with each package.
        type: boolean
        x-nullable: false
      includePackagesWithManifest:
        description: A value indicating whether fulfillment packages with a manifest are returned.
        type: boolean
        x-nullable: false
      includePackagesWithoutManifest:
        description: A value indicating whether fulfillment packages without a manifest are returned.
        type: boolean
        x-nullable: false
      manifestedFrom:
        description: The optional manifested from date filter (utc).
        type: string
        format: date-time
      manifestedTo:
        description: The optional manifested from date filter (utc).
        type: string
        format: date-time
      manifestReferenceId:
        description: The optional manifest reference id.
        type: string
      scopeId:
        description: The scope identifier.
        type: string
      shippingProviderId:
        description: The optional shipping provider identifier.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  UpdateFulfillmentPackageRequest:
    title: UpdateFulfillmentPackageRequest
    properties:
      carrierAccountIdOutbound:
        description: The carrier account id for outbound.
        type: string
      carrierAccountNameOutbound:
        description: The carrier account name for outbound.
        type: string
      carrierManifestRequirement:
        description: The carrier manifest requirement.
        type: string
        enum:
          - Unknown
          - Required
          - NotRequired
          - Excluded
      carrierManifestStatus:
        description: The carrier manifest status.
        type: string
        enum:
          - None
          - Pending
          - Manifested
          - Error
      carrierNameOutbound:
        description: The carrier name for outbound.
        type: string
      carrierServiceLevelOutbound:
        description: The carrier service level for outbound.
        type: string
      fulfillmentPackageTypeId:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      manifestReferenceId:
        description: The manifest reference id.
        type: string
      manifestUrl:
        description: The manifest url.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes
      returnTrackingNumber:
        description: The return tracking number.
        type: string
      returnTrackingReferenceId:
        description: The return tracking reference id.
        type: string
      returnTrackingUrl:
        description: The return tracking url.
        type: string
      trackingNumber:
        description: The tracking number.
        type: string
      trackingReferenceId:
        description: The tracking reference id.
        type: string
      trackingUrl:
        description: The tracking url.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  DeleteFulfillmentPackageRequest:
    title: DeleteFulfillmentPackageRequest
    properties:
      id:
        description: The fulfillment package id.
        type: string
        x-nullable: false
      scopeId:
        description: The scope identifier.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  DeleteFulfillmentPackageTypeRequest:
    title: DeleteFulfillmentPackageTypeRequest
    properties:
      id:
        description: The fulfillment package type id.
        type: string
        x-nullable: false
      scopeId:
        description: The scope identifier.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  UpdateFulfillmentPackageTypeRequest:
    title: UpdateFulfillmentPackageTypeRequest
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type description.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type display name.
      distanceUOM:
        description: The Distance UOM.
        type: string
      height:
        description: The UOM Height.
        type: number
        format: double
        x-nullable: false
      isActive:
        description: A value indicating whether the fulfillment package type is active or not.
        type: boolean
        x-nullable: false
      length:
        description: The UOM Length.
        type: number
        format: double
        x-nullable: false
      shortDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type short display name.
      width:
        description: The UOM Width.
        type: number
        format: double
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  GetFulfillmentPackageTypeRequest:
    title: GetFulfillmentPackageTypeRequest
    properties:
      id:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      includeParentScopes:
        description: Determine if parent scopes should be considered when searching fulfillment package type.
        type: boolean
        x-nullable: false
      scopeId:
        description: The scope id.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentPackageTypesRequest:
    title: FindFulfillmentPackageTypesRequest
    properties:
      includeParentScopes:
        description: Determine if parent scope fulfillment package types are included or not
        type: boolean
        x-nullable: false
      onlyActive:
        description: Whether we should retrieve only the active fulfillment package types.
        type: boolean
        x-nullable: false
    description: API calls used during the fulfillment process.
    type: object
  GetFulfillmentSLARequest:
    title: GetFulfillmentSLARequest
    properties:
      id:
        description: The fulfillment SLA identifier.
        type: string
        x-nullable: false
      scopeId:
        description: The scope id.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  FindFulfillmentSLARequest:
    title: FindFulfillmentSLARequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      fulfillmentLocationId:
        description: The fulfillment location id.
        type: string
      onlyActive:
        description: Whether we should retrieve only the active fulfillment SLA.
        type: boolean
        x-nullable: false
      onlyNearExpiryOrExpired:
        description: Whether we should retrieve only the fulfillment SLA near expiry or expired.
        type: boolean
        x-nullable: false
      orderId:
        description: The order id.
        type: string
      shipmentId:
        description: The shipment id.
        type: string
    description: API calls used during the fulfillment process.
    type: object
  GetFulfillmentLocationsByScopeRequest:
    title: GetFulfillmentLocationsByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to load addresses of the fulfillment location.
        type: boolean
        x-nullable: false
      includeChildScopes:
        description: Includes the results for the child scopes.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the fulfillment location.
        type: boolean
        x-nullable: false
      onlyActive:
        description: Filter the results to return only active.
        type: boolean
        x-nullable: false
      onlyInventoryEnabled:
        description: Filter the results to return only inventory enabled.
        type: boolean
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  FindFulfillmentLocationsRequest:
    title: FindFulfillmentLocationsRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      includeChildScopes:
        description: Includes the results for the child scopes.
        type: boolean
        x-nullable: false
      searchTerms:
        description: The phrases to search for in a text field containing all the information of the fulfillment location
        type: string
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationByIdRequest:
    title: GetFulfillmentLocationByIdRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationsByInventoryLocationIdsRequest:
    title: GetFulfillmentLocationsByInventoryLocationIdsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      inventoryLocationIds:
        description: the unique identifiers of the inventory locations.
        type: array
        items:
          type: string
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetDeliveryFulfillmentLocationsByScopeRequest:
    title: GetDeliveryFulfillmentLocationsByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to load addresses of the fulfillment location.
        type: boolean
        x-nullable: false
      includeChildScopes:
        description: Includes the results for the child scopes.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the fulfillment location.
        type: boolean
        x-nullable: false
      onlyActive:
        description: Filter the results to return only active.
        type: boolean
        x-nullable: false
      onlyInventoryEnabled:
        description: Filter the results to return only inventory enabled.
        type: boolean
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetPickupFulfillmentLocationsByScopeRequest:
    title: GetPickupFulfillmentLocationsByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to load addresses of the fulfillment location.
        type: boolean
        x-nullable: false
      includeChildScopes:
        description: Includes the results for the child scopes.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the fulfillment location.
        type: boolean
        x-nullable: false
      onlyActive:
        description: Filter the results to return only active.
        type: boolean
        x-nullable: false
      onlyInventoryEnabled:
        description: Filter the results to return only inventory enabled.
        type: boolean
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetShippingFulfillmentLocationsByScopeRequest:
    title: GetShippingFulfillmentLocationsByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeAddresses:
        description: Specifies whether or not to load addresses of the fulfillment location.
        type: boolean
        x-nullable: false
      includeChildScopes:
        description: Includes the results for the child scopes.
        type: boolean
        x-nullable: false
      includeSchedules:
        description: Specifies whether or not to load schedules of the fulfillment location.
        type: boolean
        x-nullable: false
      onlyActive:
        description: Filter the results to return only active.
        type: boolean
        x-nullable: false
      onlyInventoryEnabled:
        description: Filter the results to return only inventory enabled.
        type: boolean
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentAvailabilityRequest:
    title: GetFulfillmentAvailabilityRequest
    required:
      - datetime
      - fulfillmentLocationId
      - fulfillmentMethodType
    properties:
      datetime:
        description: The datetime to test.
        type: string
        format: date-time
        x-nullable: false
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: The FulfillmentMethodType to test.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  CalculateFulfillmentLocationsDelayRequest:
    title: CalculateFulfillmentLocationsDelayRequest
    required:
      - defaultDelayInMinutesWhenSLADateExceedsMaxDate
      - delayInMinutes
      - fulfillmentLocationIds
      - slaCreationMaxDays
    properties:
      defaultDelayInMinutesWhenSLADateExceedsMaxDate:
        description: The default delay in minutes when the SLA time exceeds the max days (Default is 5).
        type: integer
        format: int32
        x-nullable: false
      delayInMinutes:
        description: The delay to be used in the calculation.
        type: integer
        format: int32
        x-nullable: false
      fromDateTime:
        description: 'The UTC date time the expiry delay would be calculated from. If null, UTC now will be used.'
        type: string
        format: date-time
      fulfillmentLocationIds:
        description: the unique identifier of the Fulfillment locations to calculate.
        type: array
        items:
          type: string
          x-nullable: false
      scheduleType:
        description: The schedule type to use.
        type: string
        enum:
          - OpeningHours
          - Delivery
          - Pickup
      slaCreationMaxDays:
        description: The number of days the SLA can extend into the future (Default is 30).
        type: integer
        format: int32
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  CalculateScheduleAvailabilitySlotsRequest:
    title: CalculateScheduleAvailabilitySlotsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      calculateReservationSummary:
        description: A value indicating whether the reservatiom summary will be calculated.
        type: boolean
        x-nullable: false
      dayOfWeekFilter:
        description: The day of week to filter (default is all days). Valid entries are Sunday through Saturday.
        type: array
        items:
          type: string
      endDate:
        description: The date of the last day to calculate for (time should not be included).
        type: string
        format: date-time
        x-nullable: false
      endTime:
        description: The end time of the period to consider the availability.
        type: string
      excludeTimeSlotsOutsideTimeRange:
        description: A value indicating whether timeslots are returned if they are outside the time range.
        type: boolean
        x-nullable: false
      orderId:
        description: the unique identifier of the Order.
        type: string
        x-nullable: false
      overridenLeadTime:
        description: 'the optional override lead time, if set, the lead time for the store operating status will not be used.'
        type: string
      shipmentId:
        description: the unique identifier of the Shipment.
        type: string
        x-nullable: false
      startDate:
        description: The date of the first day to calculate for (time should not be included).
        type: string
        format: date-time
        x-nullable: false
      startTime:
        description: The start time of the period to consider the availability.
        type: string
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  ReserveAvailabilitySlotRequest:
    title: ReserveAvailabilitySlotRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      endDate:
        description: the Date and Time of the desired slot. The calendar date on which the slot should be checked and the time at which the slot ends
        type: string
        format: date-time
        x-nullable: false
      fulfillmentType:
        description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      orderId:
        description: the unique identifier of the Order.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: a property bag for any additional properties.
      shipmentId:
        description: the unique identifier of the Shipment.
        type: string
        x-nullable: false
      startDate:
        description: the Date and Time of the desired slot. The calendar date on which the slot should be checked and the time at which the slot starts
        type: string
        format: date-time
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentMethodTypesByScopeRequest:
    title: GetFulfillmentMethodTypesByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: The different types that a fulfillment can use.
    type: object
  GetFulfillmentMethodTypesByFulfillmentLocationRequest:
    title: GetFulfillmentMethodTypesByFulfillmentLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
    description: The different types that a fulfillment can use.
    type: object
  GetFulfillmentLocationTimeSlotsRequest:
    title: GetFulfillmentLocationTimeSlotsRequest
    required:
      - fulfillmentLocationId
      - fulfillmentMethodType
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationTimeSlotReservationsRequest:
    title: GetFulfillmentLocationTimeSlotReservationsRequest
    required:
      - fulfillmentLocationId
      - reservationDate
      - slotId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      reservationDate:
        description: The reservation date.
        type: string
        format: date-time
        x-nullable: false
      slotId:
        description: 'The unique identifier of the time slot to be found (if not set, all timeslot ids are retrieved).'
        type: string
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  AddFulfillmentLocationTimeSlotRequest:
    title: AddFulfillmentLocationTimeSlotRequest
    required:
      - day
      - slotBeginTime
      - slotEndTime
    properties:
      slotId:
        description: the unique identifier of the time slot.
        type: string
        x-nullable: false
      comment:
        description: The comment of the time slot.
        type: string
      day:
        description: The day of the time slot. Default is Sunday
        type: string
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      quota:
        description: The quota of the time slot. Default is 0
        type: integer
        format: int32
      slotBeginTime:
        description: 'The start time of the time slot. Default is 00:00:00'
        type: string
        x-nullable: false
      slotEndTime:
        description: 'The end time of the time slot. Default is 00:00:00.'
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  AddFulfillmentLocationTimeSlotReservationRequest:
    title: AddFulfillmentLocationTimeSlotReservationRequest
    required:
      - reservationStatus
      - cartCustomerId
      - cartName
      - cartScopeId
      - maxNumberOfRenewals
      - reservationDate
    properties:
      slotReservationId:
        description: the unique identifier of the time slot reservation.
        type: string
        x-nullable: false
      comment:
        description: The comment of the time slot reservation.
        type: string
      expiryTime:
        description: The expiry time for this reservation. Required only for Tentative status.
        type: string
      expiryWarningTime:
        description: The expiry time for this reservation. Required only for Tentative status.
        type: string
      orderId:
        description: The reservation order id associated with the reservation.
        type: string
      orderNumber:
        description: The reservation order number associated with the reservation.
        type: string
      reservationStatus:
        description: 'The reservation status. Options are Tentative, Confirmed, Expired and Void.'
        type: string
        enum:
          - Tentative
          - Confirmed
          - Expired
          - Voided
      shipmentId:
        description: The reservation shipment id associated with the reservation.
        type: string
      cartCustomerId:
        description: The cart customer id associated with the reservation.
        type: string
        x-nullable: false
      cartName:
        description: The cart name associated with the reservation.
        type: string
      cartScopeId:
        description: The cart scope id associated with the reservation.
        type: string
      maxNumberOfRenewals:
        description: The maximum number of renewals for allowed for this reservation.
        type: integer
        format: int32
      reservationDate:
        description: The reservation date.
        type: string
        format: date-time
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  UpdateFulfillmentLocationTimeSlotReservationRequest:
    title: UpdateFulfillmentLocationTimeSlotReservationRequest
    required:
      - reservationStatus
    properties:
      slotId:
        description: The unique identifier of the time slot. An empty guid will not update the time slot.
        type: string
      comment:
        description: The comment of the time slot reservation.
        type: string
      expiryTime:
        description: The expiry time for this reservation. Required only for Tentative status.
        type: string
      expiryWarningTime:
        description: The expiry time for this reservation. Required only for Tentative status.
        type: string
      orderId:
        description: The reservation order id associated with the reservation.
        type: string
      orderNumber:
        description: The reservation order number associated with the reservation.
        type: string
      reservationStatus:
        description: 'The reservation status. Options are Tentative, Confirmed, Expired and Void.'
        type: string
        enum:
          - Tentative
          - Confirmed
          - Expired
          - Voided
      shipmentId:
        description: The reservation shipment id associated with the reservation.
        type: string
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  DeleteFulfillmentLocationTimeSlotsRequest:
    title: DeleteFulfillmentLocationTimeSlotsRequest
    required:
      - fulfillmentLocationId
      - fulfillmentMethodType
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationTimeSlotByIdRequest:
    title: GetFulfillmentLocationTimeSlotByIdRequest
    required:
      - fulfillmentLocationId
      - fulfillmentMethodType
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      slotId:
        description: the unique identifier of the time slot.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  GetFulfillmentLocationTimeSlotReservationByIdRequest:
    title: GetFulfillmentLocationTimeSlotReservationByIdRequest
    required:
      - fulfillmentLocationId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      slotId:
        description: The unique identifier of the time slot.
        type: string
        x-nullable: false
      slotReservationId:
        description: the unique identifier of the time slot reservation.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  AddFulfillmentLocationTimeSlotsRequest:
    title: AddFulfillmentLocationTimeSlotsRequest
    properties:
      timeSlots:
        description: the time slots to add
        type: array
        items:
          $ref: '#/definitions/TimeSlot'
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  TimeSlot:
    title: TimeSlot
    required:
      - day
      - fulfillmentLocationlId
      - id
      - quota
      - slotBeginTime
      - slotEndTime
      - type
    properties:
      comment:
        description: The comment of the time slot.
        type: string
      day:
        description: The day of the time slot.
        type: string
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      fulfillmentLocationlId:
        description: The unique identifier of a fulfillment location.
        type: string
        x-nullable: false
      id:
        description: The unique identifier of the time slot.
        type: string
        x-nullable: false
      quota:
        description: The quota of the time slot.
        type: integer
        format: int32
      slotBeginTime:
        description: The start time of the time slot.
        type: string
        x-nullable: false
      slotEndTime:
        description: The end time of the time slot.
        type: string
        x-nullable: false
      type:
        description: The fulfillment location type.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: TimeSlot
    type: object
  UpdateFulfillmentLocationTimeSlotRequest:
    title: UpdateFulfillmentLocationTimeSlotRequest
    required:
      - day
      - slotBeginTime
      - slotEndTime
    properties:
      comment:
        description: The comment of the time slot.
        type: string
      day:
        description: The day of the time slot. Default is Sunday
        type: string
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      quota:
        description: The quota of the time slot. Default is 0
        type: integer
        format: int32
      slotBeginTime:
        description: 'The start time of the time slot. Default is 00:00:00'
        type: string
        x-nullable: false
      slotEndTime:
        description: 'The end time of the time slot. Default is 00:00:00.'
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  DeleteFulfillmentLocationTimeSlotRequest:
    title: DeleteFulfillmentLocationTimeSlotRequest
    required:
      - fulfillmentLocationId
      - fulfillmentMethodType
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: 'the type of the fulfillment, valid options are [Pickup, Delivery and Shipping].'
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      slotId:
        description: the unique identifier of the time slot.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  DeleteFulfillmentLocationTimeSlotReservationRequest:
    title: DeleteFulfillmentLocationTimeSlotReservationRequest
    required:
      - fulfillmentLocationId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: the unique identifier of the Fulfillment location.
        type: string
        x-nullable: false
      slotId:
        description: The unique identifier of the time slot.
        type: string
        x-nullable: false
      slotReservationId:
        description: the unique identifier of the time slot reservation.
        type: string
        x-nullable: false
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  ResetFulfillmentLocationTimeSlotsRequest:
    title: ResetFulfillmentLocationTimeSlotsRequest
    properties:
      timeSlots:
        description: the time slots to add
        type: array
        items:
          $ref: '#/definitions/TimeSlot'
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
    type: object
  FindCartPaymentMethodsRequest:
    title: FindCartPaymentMethodsRequest
    properties:
      parameters:
        $ref: '#/definitions/PropertyBag'
        description: custom parameters for the provider.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetCartSummaryRequest:
    title: GetCartSummaryRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      executeWorkflow:
        description: Whether or not to execute the specified workflow before returning the cart.
        type: boolean
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  ClearCartRequest:
    title: ClearCartRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetLineItemsInCartRequest:
    title: GetLineItemsInCartRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddLineItemRequest:
    title: AddLineItemRequest
    required:
      - productId
      - quantity
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      giftMessage:
        description: 'if the product is to be gift-wrapped, a message to be written on it.'
        type: string
      giftWrap:
        description: whether or not the item will wrapped in a gift presentation.
        type: boolean
        x-nullable: false
      id:
        description: The unique identifier of the LineItem to create.
        type: string
        x-nullable: false
      placedPrice:
        description: 'The price of the LineItem, at the moment that the Product is added to the cart.'
        type: number
        format: double
      productId:
        description: The unique identifier of the product.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended/custom properties for this request.
      quantity:
        description: The number of items bought for this Product.
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: the name of the recurring order program frequency.
        type: string
      recurringOrderProgramName:
        description: the name of the recurring order program.
        type: string
      variantId:
        description: 'The unique identifier of the product variant, if there is one.'
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddOrUpdateLineItemsRequest:
    title: AddOrUpdateLineItemsRequest
    required:
      - lineItems
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      lineItems:
        description: The list of line items to add or update
        type: array
        items:
          $ref: '#/definitions/LineItemInfo'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  LineItemInfo:
    title: LineItemInfo
    required:
      - id
      - productId
      - quantity
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      giftMessage:
        description: 'if the product is to be gift-wrapped, a message to be written on it.'
        type: string
      giftWrap:
        description: whether or not the item will wrapped in a gift presentation.
        type: boolean
        x-nullable: false
      placedPrice:
        description: Gets or sets the placed price of the line item at the moment the cart was submitted either on order creation or order modification. This value is set automatically by the system.
        type: number
        format: double
      productId:
        description: The unique identifier of the product.
        type: string
      quantity:
        description: The number of items bought for this Product.
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: the name of the recurring order program frequency.
        type: string
      recurringOrderProgramName:
        description: the name of the recurring order program.
        type: string
      variantId:
        description: 'The unique identifier of the product variant, if there is one.'
        type: string
    description: LineItemInfo
    type: object
  UpdateLineItemRequest:
    title: UpdateLineItemRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      giftMessage:
        description: 'if the product is to be wrapped as a gift, a message to be written on that.'
        type: string
      giftWrap:
        description: whether or not the item will wrapped in a gift presentation.
        type: boolean
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
      quantity:
        description: The number of times this item is bought for this LineItem.
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: the name of the recurring order program frequency.
        type: string
      recurringOrderProgramName:
        description: the name of the recurring order program.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveLineItemRequest:
    title: RemoveLineItemRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      id:
        description: The unique identifier of the LineItem to be removed.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveLineItemsRequest:
    title: RemoveLineItemsRequest
    required:
      - cartName
      - customerId
      - lineItemIds
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      lineItemIds:
        description: The unique identifier of the LineItems to be removed.
        type: array
        items:
          type: string
          x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveAllLineItemsRequest:
    title: RemoveAllLineItemsRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetLineItemRequest:
    title: GetLineItemRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      id:
        description: The unique identifier of the LineItem to retreive
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddShipmentRequest:
    title: AddShipmentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      fulfillmentMethodCarrierName:
        description: The carrier name  for the fulfillment method.
        type: string
      fulfillmentMethodCarrierOptionDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly carrier option display name for the fulfillment method.
      fulfillmentMethodCarrierServiceLevel:
        description: The carrier service level for this fulfillment method.
        type: string
      fulfillmentMethodDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name for this fulfillment method.
      fulfillmentMethodName:
        description: The unique identifier of the Shipment.FulfillmentMethod.
        type: string
      fulfillmentScheduledTimeBeginDate:
        description: the requested schedule begin date and time.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: the requested schedule end date and time.
        type: string
        format: date-time
      fulfillmentScheduleMode:
        description: The fulfillment schedule mode.
        type: string
        enum:
          - Asap
          - Specified
      id:
        description: The unique identifier of the Shipment to create.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
      shippingAddress:
        $ref: '#/definitions/Address'
        description: The Shipment.ShippingAddress to create.
      shippingProviderId:
        description: The unique identifier of the shipping provider.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdateShipmentRequest:
    title: UpdateShipmentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentMethodCarrierName:
        description: The fulfillment method carrier name  for the fulfillment method.
        type: string
      fulfillmentMethodCarrierOptionDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly carrier option display name for the fulfillment method.
      fulfillmentMethodCarrierServiceLevel:
        description: The fulfillment method carrier service level for this fulfillment method.
        type: string
      fulfillmentMethodDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name for this fulfillment method.
      fulfillmentMethodName:
        description: The unique identifier of the Shipment.FulfillmentMethod.
        type: string
      fulfillmentScheduledTimeBeginDate:
        description: the requested schedule begin date and time.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: the requested schedule end date and time.
        type: string
        format: date-time
      fulfillmentScheduleMode:
        description: The fulfillment schedule mode.
        type: string
        enum:
          - Asap
          - Specified
      pickUpLocationId:
        description: Gets or sets the pick-up location identifier required when the selected shipping method type is ship to store; any value will be ignored otherwise.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this shipment.
      shippingAddress:
        $ref: '#/definitions/Address'
        description: The Shipment.ShippingAddress to update.
      shippingProviderId:
        description: The unique identifier of the shipping provider.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveShipmentRequest:
    title: RemoveShipmentRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      id:
        description: The unique identifier of the Shipment to be removed.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetShipmentRequest:
    title: GetShipmentRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      id:
        description: The unique identifier of the Shipment to retreive
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetPaymentsInCartRequest:
    title: GetPaymentsInCartRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddPaymentRequest:
    title: AddPaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      amount:
        description: The amount of the Payment to create.
        type: number
        format: double
      billingAddress:
        $ref: '#/definitions/Address'
        description: The Payment.BillingAddress to create.
      id:
        description: The unique identifier of the Payment to create.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdatePaymentRequest:
    title: UpdatePaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      amount:
        description: The amount of the Payment to update.
        type: number
        format: double
      billingAddress:
        $ref: '#/definitions/Address'
        description: The Payment.BillingAddress to update.
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemovePaymentRequest:
    title: RemovePaymentRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      id:
        description: The unique identifier of the Payment to be removed.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetPaymentRequest:
    title: GetPaymentRequest
    required:
      - cartName
      - customerId
      - id
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      id:
        description: The unique identifier of the Payment to retreive
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddCouponRequest:
    title: AddCouponRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveCouponRequest:
    title: RemoveCouponRequest
    required:
      - cartName
      - customerId
      - couponCode
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      couponCode:
        description: The unique identifier of the Coupon to be removed.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  CompleteCheckoutRequest:
    title: CompleteCheckoutRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this request.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdateCustomerSummaryRequest:
    title: UpdateCustomerSummaryRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      email:
        description: The email address of the customer owning this cart.
        type: string
      firstName:
        description: The first name of the customer owning this cart.
        type: string
      lastName:
        description: The last name of the customer owning this cart
        type: string
      middleName:
        description: The middle name of the customer owning this cart
        type: string
      phone:
        description: The phone number of the customer owning this cart.
        type: string
      type:
        description: The type of the customer owning this cart.
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
    description: Carts are entities used for assembling an order before submitting.
    type: object
  CopyCartToCustomerRequest:
    title: CopyCartToCustomerRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      keepOldCart:
        description: Value indicating whether to keep old customer cart.
        type: boolean
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetCartStatesRequest:
    title: GetCartStatesRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddLineItemInShipmentRequest:
    title: AddLineItemInShipmentRequest
    required:
      - productId
      - quantity
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      giftMessage:
        description: 'if the product is to be wrapped as a gift, a message to be written on the wrapping.'
        type: string
      giftWrap:
        description: whether or not the item will be wrapped in a gift presentation.
        type: boolean
        x-nullable: false
      lineItemId:
        description: The unique identifier of the LineItem to create.
        type: string
        x-nullable: false
      placedPrice:
        description: 'The price of the line item, at the moment that the item is added to the cart.'
        type: number
        format: double
      productId:
        description: The unique identifier of the product.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
      quantity:
        description: The number of times this item is bought for this LineItem.
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: the name of the recurring order program frequency.
        type: string
      recurringOrderProgramName:
        description: the name of the recurring order program.
        type: string
      variantId:
        description: The unique identifier of the product variant if it is one.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetLineItemsInShipmentRequest:
    title: GetLineItemsInShipmentRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      shipmentId:
        description: The unique identifier of the Shipment to consider.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RemoveLineItemsInShipmentRequest:
    title: RemoveLineItemsInShipmentRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      shipmentId:
        description: The unique identifier of the Shipment to consider.
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  ReserveTimeSlotRequest:
    title: ReserveTimeSlotRequest
    required:
      - expiryTime
      - expiryWarningTime
      - reservationDate
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      comment:
        description: The comment for the reservation.
        type: string
      expiryTime:
        description: The expiry time for the reservation.
        type: string
        x-nullable: false
      expiryWarningTime:
        description: The expiry warning time for the reservation.
        type: string
        x-nullable: false
      maxNumberOfRenewals:
        description: The maximum number of renewals allowed for this reservation.
        type: integer
        format: int32
      reservationDate:
        description: The date of the timeslot reservation.
        type: string
        format: date-time
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdatePaymentAmountRequest:
    title: UpdatePaymentAmountRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      amount:
        description: The amount of the Payment to update.
        type: number
        format: double
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdateBillingAddressRequest:
    title: UpdateBillingAddressRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      billingAddress:
        $ref: '#/definitions/Address'
        description: The Payment.BillingAddress to update.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdatePaymentMethodRequest:
    title: UpdatePaymentMethodRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      executeWorkflow:
        description: Whether or not to execute the specified workflow before returning the cart.
        type: boolean
      paymentMethodId:
        description: The payment method identifier
        type: string
        x-nullable: false
      paymentProviderName:
        description: The name of the payment provider
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  InitializePaymentRequest:
    title: InitializePaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      additionalData:
        $ref: '#/definitions/PropertyBag'
        description: The additonnal data to set when initializing the payment.
      options:
        $ref: '#/definitions/PropertyBag'
        description: The payment provider options to override when initializing the payment.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  RefreshPaymentRequest:
    title: RefreshPaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AuthorizePaymentRequest:
    title: AuthorizePaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  SettlePaymentRequest:
    title: SettlePaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  VoidPaymentRequest:
    title: VoidPaymentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  SetAdjustmentRequest:
    title: SetAdjustmentRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      amount:
        description: The amount of the adjustment
        type: number
        format: double
      note:
        description: Note for adjustment
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  CreateOrderRequest:
    title: CreateOrderRequest
    properties:
      cart:
        $ref: '#/definitions/Cart'
        description: the cart that will be used as basis to create an order.
    description: Orders are entities which represent an order of a customer.
    type: object
  PostProcessOrderRequest:
    title: PostProcessOrderRequest
    properties:
      finishedStatusesToIgnore:
        description: Gets or sets a list of statuses that are not considered as finished.
        type: array
        items:
          type: string
      restartFulfillmentProcess:
        description: Gets or sets a value indicating whether if the fulfillment process for this order needs to be restarted.
        type: boolean
        x-nullable: false
      shipmentIds:
        description: The optional list of shipment ids to filter for reprocessing the order
        type: array
        items:
          type: string
          x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  CopyCartFromOrderRequest:
    title: CopyCartFromOrderRequest
    properties:
      cartName:
        description: The name of cart to be copied.
        type: string
      keepExistingLineItems:
        description: Indicator to keep existing cart line items or not.
        type: boolean
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  CopyOrderRequest:
    title: CopyOrderRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  GetOrderByNumberRequest:
    title: GetOrderByNumberRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The customer identifier for the request
        type: string
        x-nullable: false
      includeLineItems:
        description: a value indicating whether include line items or not.
        type: boolean
        x-nullable: false
      includePayment:
        description: a value indicating whether include payments or not.
        type: boolean
        x-nullable: false
      includeShipment:
        description: a value indicating whether include shipment or not.
        type: boolean
        x-nullable: false
      orderNumber:
        description: The order number for the request.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetCustomerLastOrderRequest:
    title: GetCustomerLastOrderRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      customerId:
        description: The unique identifier of the Customer to retrieve last order from.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  GetOrderNotesRequest:
    title: GetOrderNotesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      orderId:
        description: The unique identifier of the Order.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  AddOrderNoteRequest:
    title: AddOrderNoteRequest
    properties:
      content:
        description: The content of the note.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetOrderFulfillmentStateRequest:
    title: GetOrderFulfillmentStateRequest
    properties:
      orderId:
        description: The unique system identifier for the Order
        type: string
        x-nullable: false
      scopeId:
        description: The identifier of the sales or dependant scope in which the order is processed
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  ChangeOrderStatusRequest:
    title: ChangeOrderStatusRequest
    properties:
      notes:
        description: An additional description or comment about the status change request. This information is automatically appended to the order notes.
        type: string
      reason:
        description: 'The defined reason, if any, why the change is requested.'
        type: string
      requestedStatus:
        description: The status the shipments should be transitioned to. This value needs to be part of the ShipmentFulfillmentState.AllowedStatusChanges otherwise will fail.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  ResumeOrderRequest:
    title: ResumeOrderRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  GetPrintableOrderUriRequest:
    title: GetPrintableOrderUriRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      orderId:
        description: The order id for the request.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  GetRmasByOrderRequest:
    title: GetRmasByOrderRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      orderNumber:
        description: the order number
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  SaveOrderRequest:
    title: SaveOrderRequest
    properties:
      order:
        $ref: '#/definitions/Order'
        description: The Order that will be updated with all it's content as is.
    description: Orders are entities which represent an order of a customer.
    type: object
  Order:
    title: Order
    properties:
      cart:
        $ref: '#/definitions/Cart'
        description: the cart to be used to create this order.
      created:
        description: the date when the order as created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the user id of the user that created the order.
        type: string
      customerId:
        description: the customer id who made the order.
        type: string
      customerName:
        description: the complete name of the customer who made the order.
        type: string
      id:
        description: the id of the order.
        type: string
      itemCount:
        description: the line item count.
        type: integer
        format: int32
        x-nullable: false
      lastModified:
        description: the date when the order was last modified.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the user id of the user that last modified the order.
        type: string
      orderNumber:
        description: the order number.
        type: string
      orderStatus:
        description: the order status.
        type: string
      scopeId:
        description: the scope id.
        type: string
      source:
        description: the source of the order.
        type: string
      transactionOrderNumber:
        description: the transaction order number.
        type: integer
        format: int32
        x-nullable: false
    description: Order
    type: object
  GetOrderByIdRequest:
    title: GetOrderByIdRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      includeLineItems:
        description: a value indicating whether include line items or not.
        type: boolean
        x-nullable: false
      includePayment:
        description: a value indicating whether include payments or not.
        type: boolean
        x-nullable: false
      includeShipment:
        description: a value indicating whether include shipment or not.
        type: boolean
        x-nullable: false
      orderId:
        description: The order id for the request.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  FindOrdersRequest:
    title: FindOrdersRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      createdDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for created date.
      customerId:
        description: Customer id
        type: string
        x-nullable: false
      filterNeedingAttentionOnly:
        description: Whether results are filtered by needing attention only.
        type: boolean
        x-nullable: false
      fulfillmentDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for the fulfillment date.
      fulfillmentLocationId:
        description: the fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: the fulfillment method thype.
        type: string
      includeActiveFulfillmentSLAs:
        description: Whether we should retrieve the active fulfillment SLAs or not.
        type: boolean
        x-nullable: false
      includeFulfillmentStates:
        description: Whether we should retrieve the fulfillmentStates or not.
        type: boolean
        x-nullable: false
      lastModifiedDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for last modified date.
      orderStatus:
        description: the order status.
        type: array
        items:
          type: string
      paymentStatus:
        description: the list of payment status.
        type: array
        items:
          type: string
      searchFulltextFields:
        description: Whether the search term is used on full-text indexed fields or not
        type: boolean
        x-nullable: false
      searchTerms:
        description: A series of terms that will be used in the search for orders.
        type: string
      shipmentStatus:
        description: the list of shipment status.
        type: array
        items:
          type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  FindOrdersCountRequest:
    title: FindOrdersCountRequest
    required:
      - cultureName
    properties:
      configurationName:
        description: The name of the configuration to use to process this request
        type: string
      cultureName:
        description: The culture (language) to use to process the request (en-US)
        type: string
      query:
        $ref: '#/definitions/Query'
        description: The query that will be executed by the handler
      createdDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for created date.
      customerId:
        description: Customer id
        type: string
        x-nullable: false
      filterNeedingAttentionOnly:
        description: Whether results are filtered by needing attention only.
        type: boolean
        x-nullable: false
      fulfillmentDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for the fulfillment date.
      fulfillmentLocationId:
        description: the fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: the fulfillment method thype.
        type: string
      lastModifiedDateRange:
        $ref: '#/definitions/Range_DateTime_'
        description: the date range for last modified date.
      orderStatus:
        description: the order status.
        type: array
        items:
          type: string
      paymentStatus:
        description: the list of payment status.
        type: array
        items:
          type: string
      searchFulltextFields:
        description: Whether the search term is used on full-text indexed fields or not
        type: boolean
        x-nullable: false
      searchTerms:
        description: A series of terms that will be used in the search for orders.
        type: string
      shipmentStatus:
        description: the list of shipment status.
        type: array
        items:
          type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetOrderHistoryRequest:
    title: GetOrderHistoryRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier to be used to filter items from the order (optional).
        type: string
      orderNumber:
        description: The identifier of the order to be used for retrieving items.
        type: string
      shipmentId:
        description: The shipment identifier to be used to filter items from the order (optional).
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  AddOrderHistoryRequest:
    title: AddOrderHistoryRequest
    properties:
      category:
        description: The category of this history item.
        type: string
      comment:
        description: Comment for this history item.
        type: string
      customData:
        $ref: '#/definitions/PropertyBag'
        description: Custom data for added specifications about this history item.
      entityId:
        description: The entity id related to the new order history item.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location id related to the new order history item.
        type: string
      newValue:
        description: New value for modified entity.
        type: string
      oldValue:
        description: Old value for modified entity.
        type: string
      orderNumber:
        description: The identifier of the order related to this item.
        type: string
      reason:
        description: Reason related to entity modification.
        type: string
      shipmentId:
        description: The shipment id related to the new order history item.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetPrintableOrdersUriRequest:
    title: GetPrintableOrdersUriRequest
    properties:
      orderIds:
        description: The list of order id for the request.
        type: array
        items:
          type: string
          x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  GetAvailableFulfillmentMethodsByScopeRequest:
    title: GetAvailableFulfillmentMethodsByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Fulfillment methods are entities used to select how a shipment will be delivered.
    type: object
  FindCalculatedFulfillmentMethodsRequest:
    title: FindCalculatedFulfillmentMethodsRequest
    properties:
      shipmentId:
        description: the unique identifier of the shipment. The id of the shipment on which the retrieved FulfillmentMethod will be used.
        type: string
        x-nullable: false
    description: Fulfillment methods are entities used to select how a shipment will be delivered.
    type: object
  GetOrderSettingsRequest:
    title: GetOrderSettingsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetTaxCategoriesRequest:
    title: GetTaxCategoriesRequest
    properties:
      getOnlySupportedCategories:
        description: a value indicating whether include only supported categories or not.
        type: boolean
        x-nullable: false
      getSystemCategories:
        description: a value indicating whether include system categories or not.
        type: boolean
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  GetTaxProviderByScopeRequest:
    title: GetTaxProviderByScopeRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cultureName:
        description: The culture name in which language that data will be returned
        type: string
      name:
        description: The name of the provider
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetAvailableTaxProvidersRequest:
    title: GetAvailableTaxProvidersRequest
    properties:
      cultureName:
        description: The culture name in which language that data will be returned
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  SetAdjustmentOrderRequest:
    title: SetAdjustmentOrderRequest
    properties:
      amount:
        description: The amount of the adjustment
        type: number
        format: double
      note:
        description: Note for adjustment
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  AddShipmentNoteRequest:
    title: AddShipmentNoteRequest
    properties:
      content:
        description: Note to add to the shipment.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  FindShipmentDocumentsSummariesRequest:
    title: FindShipmentDocumentsSummariesRequest
    properties:
      documentTypes:
        description: The list of document types for filtering the request.
        type: array
        items:
          type: string
      names:
        description: The list of names of the document for filtering the request.
        type: array
        items:
          type: string
      orderIds:
        description: The list of order ids for filtering the request.
        type: array
        items:
          type: string
          x-nullable: false
      shipmentIds:
        description: The list of shipment ids for filtering the request.
        type: array
        items:
          type: string
          x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  ShipmentSplitRequest:
    title: ShipmentSplitRequest
    properties:
      copyFulfillmentLocationId:
        description: A value indicating whether the fulfillment location id should be copied from the original shipment.
        type: boolean
        x-nullable: false
      extraParams:
        $ref: '#/definitions/PropertyBag'
        description: The attributes to be inserted in the new shipment's property bag.
      shipmentSplitItems:
        description: The list of shipment split items.
        type: array
        items:
          $ref: '#/definitions/ShipmentSplitItem'
    description: Orders are entities which represent an order of a customer.
    type: object
  ShipmentSplitItem:
    title: ShipmentSplitItem
    properties:
      lineItemId:
        description: The line item identifier.
        type: string
        x-nullable: false
      quantity:
        description: The quantity to split.
        type: number
        format: double
        x-nullable: false
    description: ShipmentSplitItem
    type: object
  ChangeShipmentStatusRequest:
    title: ChangeShipmentStatusRequest
    properties:
      notes:
        description: An additional description or comment provided for the status change request. This information will be automatically appended to the shipment notes.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes
      reason:
        description: 'The defined reason, if any, why the change is requested.'
        type: string
      requestedStatus:
        description: The status the shipment should be transitioned to. This value needs to be part of the ShipmentFulfillmentState.AllowedStatusChanges otherwise will fail.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  UpdateShipmentFulfillmentStateRequest:
    title: UpdateShipmentFulfillmentStateRequest
    properties:
      allowedManualTransitions:
        description: a list of allowed manual transitions from the shipment current status.
        type: array
        items:
          type: string
      allowedStatusChanges:
        description: a list of allowed status changes that can be requested.  Requesting any other changes will fail.
        type: array
        items:
          type: string
      allowsShipmentChangesProcessing:
        description: whether the saving an order in the current state should resume a processing the order within the fulfillment process.
        type: boolean
        x-nullable: false
      clearFulfillmentFailureMessages:
        description: whether clear state failure messages.
        type: boolean
        x-nullable: false
      fulfillmentScheduledTimeBeginDate:
        description: the scheduled time at which fulfillment will begin.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: the scheduled time at which fulfillment will end.
        type: string
        format: date-time
      isFinished:
        description: 'a flag indicating that fulfillment is complete for this shipment. '
        type: boolean
        x-nullable: false
      nextStatuses:
        description: a list of the potential statuses the shipment could transition to from its current status.
        type: array
        items:
          type: string
      renewFulfillmentTaskLockExpirationOnProcess:
        description: the whether the fulfillment task lock should be extended for another defined amount of time.
        type: string
      status:
        description: the current status of the shipment.
        type: string
      taskId:
        description: the task Id responsible for fulfilling the shipment
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  UpdateShipmentFulfillmentWorkflowXamlPathRequest:
    title: UpdateShipmentFulfillmentWorkflowXamlPathRequest
    properties:
      workflowXamlPath:
        description: the path of the fulfillment workflow.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  RenderOrderShipmentTemplateRequest:
    title: RenderOrderShipmentTemplateRequest
    required:
      - cultureName
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      contentName:
        description: The name of the content to render.
        type: string
      cultureName:
        description: The name of the culture (language) to use to render the template.
        type: string
      orderId:
        description: The orderId related to the shipment.
        type: string
        x-nullable: false
      shipmentId:
        description: The shipment id.
        type: string
        x-nullable: false
      templateName:
        description: The name of the template to render.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  CreateRmaRegisteredRequest:
    title: CreateRmaRegisteredRequest
    properties:
      id:
        description: the unique identifier of the RMA
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: 'Custom information about the request and customer, if applicable'
      rmaExternalNumber:
        description: the external number for RMA
        type: string
      rmaItems:
        description: RMA item details
        type: array
        items:
          $ref: '#/definitions/RmaItem'
    description: Orders are entities which represent an order of a customer.
    type: object
  RmaItem:
    title: RmaItem
    required:
      - productId
      - sku
      - variantId
    properties:
      amountRefunded:
        description: 'Total Amount of refund item, if applicable'
        type: number
        format: double
      created:
        description: The creation date.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identity of the user who created the payment.
        type: string
      id:
        description: Unique Identifier of the RMA item
        type: string
        x-nullable: false
      itemStatus:
        description: the process status of the RMA Item
        type: string
      lastModified:
        description: The last modification date.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identity of the user who modified the payment.
        type: string
      productId:
        description: The unique identifier of the product.
        type: string
      quantity:
        description: the quantity of the product
        type: number
        format: double
        x-nullable: false
      resolution:
        description: 'Resolution : Refund, Exchange, etc.'
        type: string
      rmaId:
        description: The RMA id
        type: string
        x-nullable: false
      sku:
        description: The unique identifier of the product.
        type: string
      variantId:
        description: The unique identifier of the variant.
        type: string
      reason:
        description: 'the reason why the item is returned. example: size, change of mind, etc'
        type: string
      propertyBag:
        $ref: '#/definitions/Dictionary_String_Object_'
        description: 'Custom information about RMA, if applicable'
    description: RmaItem
    type: object
  Dictionary_String_Object_:
    title: 'Dictionary<String,Object>'
    additionalProperties:
      $ref: '#/definitions/Object'
    description: 'Dictionary<String,Object>'
    type: object
  RefreshPaymentOrderRequest:
    title: RefreshPaymentOrderRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  SettlePaymentOrderRequest:
    title: SettlePaymentOrderRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  RefundPaymentRequest:
    title: RefundPaymentRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  GetShipmentNotesRequest:
    title: GetShipmentNotesRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      shipmentId:
        description: The unique identifier of the Shipment.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  FindShipmentDocumentsRequest:
    title: FindShipmentDocumentsRequest
    properties:
      documentTypes:
        description: The list of document types for filtering the request.
        type: array
        items:
          type: string
      names:
        description: The list of names of the document for filtering the request.
        type: array
        items:
          type: string
      orderIds:
        description: The list of order ids for filtering the request.
        type: array
        items:
          type: string
          x-nullable: false
      shipmentIds:
        description: The list of shipment ids for filtering the request.
        type: array
        items:
          type: string
          x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  CreateRmaGuestRequest:
    title: CreateRmaGuestRequest
    properties:
      id:
        description: the unique identifier of the RMA
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: 'Custom information about the request and customer, if applicable'
      rmaExternalNumber:
        description: the external number for RMA
        type: string
      rmaItems:
        description: RMA item details
        type: array
        items:
          $ref: '#/definitions/RmaItem'
      email:
        description: the email address of the customer
        type: string
      lastName:
        description: Gets or set the last name of the customer
        type: string
      postalCode:
        description: Gets or sets the Postal code of the customer billing address
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  UpdateRmaRequest:
    title: UpdateRmaRequest
    properties:
      isFinished:
        description: whether the RMA is finished.
        type: boolean
        x-nullable: false
      rmaExternalNumber:
        description: the RMA external Number
        type: string
      rmaItems:
        description: RMA item details
        type: array
        items:
          $ref: '#/definitions/RmaItem'
      status:
        description: the process status of the RMA
        type: string
      totalAmountRefunded:
        description: 'Total amount of refunded items, if applicable'
        type: number
        format: double
    description: Orders are entities which represent an order of a customer.
    type: object
  GetRmaRequest:
    title: GetRmaRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      orderNumber:
        description: the order number
        type: string
      rmaNumber:
        description: the RMA number
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetShipmentFulfillmentInfosRequest:
    title: GetShipmentFulfillmentInfosRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      dateRangeFilter:
        description: the date range filter
        type: string
        enum:
          - FulfillmentBeginDate
          - OrderCreatedDate
          - FulfillmentLastAssignedDate
      endDate:
        description: 'the EndDate, ISO-8601 format'
        type: string
        format: date-time
      excludeShipmentInFinalState:
        description: value indicating whether or not shipments in final state of the workflow will be returned
        type: boolean
        x-nullable: false
      flaggedOnly:
        description: true if you just want to get flagged Shipments
        type: boolean
        x-nullable: false
      fulfillmentLocationId:
        description: the FulfillmentLocationId
        type: string
        x-nullable: false
      orderId:
        description: the order id
        type: string
      pageNumber:
        description: the PageNumber
        type: integer
        format: int32
      pageSize:
        description: the PageSize
        type: integer
        format: int32
      pickUpLocationId:
        description: the PickUpLocationId
        type: string
      requiredFields:
        description: The fields from ShipmentFulfillmentInfo that are absolutely required. Default is all.
        type: array
        items:
          type: string
      searchText:
        description: the SearchText
        type: string
      sort:
        description: 'the sorted fields, seperated by commas, use ''-'' before field name for descending'
        type: string
      startDate:
        description: 'the StartDate, ISO-8601 format'
        type: string
        format: date-time
      statuses:
        description: the Statuses
        type: array
        items:
          type: string
      type:
        description: the FulfillmentMethodType
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
    type: object
  GetNumberOfShipmentsForFulfillmentLocationRequest:
    title: GetNumberOfShipmentsForFulfillmentLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      FulfillmentLocationId:
        description: the FulfillmentLocationId
        type: string
        x-nullable: false
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
    type: object
  GetPrintableShipmentUriRequest:
    title: GetPrintableShipmentUriRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      shipmentId:
        description: The shipment id for the request.
        type: string
        x-nullable: false
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
    type: object
  GetCountShipmentFulfillmentInfosRequest:
    title: GetCountShipmentFulfillmentInfosRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      dateRangeFilter:
        description: the date Range filter
        type: string
        enum:
          - FulfillmentBeginDate
          - OrderCreatedDate
          - FulfillmentLastAssignedDate
      endDate:
        description: 'the EndDate, ISO-8601 format'
        type: string
        format: date-time
      excludeShipmentInFinalState:
        description: value indicating whether or not shipments in final state of the workflow will be returned
        type: boolean
        x-nullable: false
      flaggedOnly:
        description: true if you just want to get flagged Shipments
        type: boolean
        x-nullable: false
      fulfillmentLocationId:
        description: the FulfillmentLocationId
        type: string
        x-nullable: false
      orderId:
        description: the order id
        type: string
      pickUpLocationId:
        description: the PickUpLocationId
        type: string
      searchText:
        description: the SearchText
        type: string
      startDate:
        description: 'the StartDate, ISO-8601 format'
        type: string
        format: date-time
      statuses:
        description: the Statuses
        type: array
        items:
          type: string
      type:
        description: the FulfillmentMethodType
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
    type: object
  GetPrintableShipmentsUriRequest:
    title: GetPrintableShipmentsUriRequest
    properties:
      shipmentIds:
        description: The list of shipment id for the request.
        type: array
        items:
          type: string
          x-nullable: false
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
    type: object
  CreateShipmentDocumentRequest:
    title: CreateShipmentDocumentRequest
    properties:
      additionalNotes:
        description: Additional notes relative to the shipment pickup confirmation.
        type: string
      contentType:
        description: The content type of the blob object.
        type: string
      document:
        description: The base64 string representation of the document.
        type: string
      documentType:
        description: The document type.
        type: string
      imageHeight:
        description: The image height.
        type: number
        format: double
        x-nullable: false
      imageWidth:
        description: The image width.
        type: number
        format: double
        x-nullable: false
      proofOfIdentity:
        description: The type of document used to identifty the recipient.
        type: string
      recipient:
        description: The name of the recipient.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  UpdateShipmentDocumentRequest:
    title: UpdateShipmentDocumentRequest
    properties:
      additionalNotes:
        description: Additional notes related to the confirmation
        type: string
      contentType:
        description: The content type of the blob object.
        type: string
      document:
        description: The base64 string representation of the document
        type: string
      documentType:
        description: The document type.
        type: string
      imageHeight:
        description: The height of the image
        type: number
        format: double
        x-nullable: false
      imageWidth:
        description: The width of the image
        type: number
        format: double
        x-nullable: false
      proofOfIdentity:
        description: The type of document used to identifty the recipient.
        type: string
      recipient:
        description: The name of the recipient.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  DeleteShipmentDocumentRequest:
    title: DeleteShipmentDocumentRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: The shipment document name.
        type: string
      orderId:
        description: The order id.
        type: string
        x-nullable: false
      shipmentId:
        description: The shipment id.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  GetShipmentDocumentRequest:
    title: GetShipmentDocumentRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      name:
        description: The name of the document.
        type: string
      orderId:
        description: The order id for the request.
        type: string
        x-nullable: false
      shipmentId:
        description: The shipment id for the request.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  AddShipmentFulfillmentMessagesRequest:
    title: AddShipmentFulfillmentMessagesRequest
    properties:
      executionMessages:
        description: The list of ExecutionMessage to add
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      validationResults:
        description: The list of ValidationResult to add
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
    description: Orders are entities which represent an order of a customer.
    type: object
  ExecutionMessage:
    title: ExecutionMessage
    properties:
      description:
        $ref: '#/definitions/LocalizedString'
        description: The message description. Used for describing the message with more information.
      messageId:
        description: The id of the message.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The contextual data of the message
      severity:
        description: The severity of the message.
        type: string
        enum:
          - Unspecified
          - Info
          - Warning
          - Error
          - Failure
    description: ExecutionMessage
    type: object
  ValidationResult:
    title: ValidationResult
    properties:
      category:
        description: A category that applies to the validation results
        type: string
      errorMinimumSeverity:
        description: The minimum severity to consider as error
        type: string
        enum:
          - Information
          - Warning
          - Error
          - Critical
      errors:
        description: 'If applicable, a list of all validation failures associated with the result'
        type: array
        items:
          $ref: '#/definitions/ValidationFailure'
      isValid:
        description: Returns true if all errors are lesser than ErrorMinimumSeverity
        type: boolean
        x-nullable: false
    description: ValidationResult
    type: object
  ValidationFailure:
    title: ValidationFailure
    properties:
      attemptedValue:
        $ref: '#/definitions/Object'
        description: The attempted value (ValueType or string) that caused the failure or its id.
      context:
        $ref: '#/definitions/PropertyBag'
        description: Any additional contextual information related to the validation failure.
      descriptor:
        $ref: '#/definitions/ValidationFailureDescriptor'
        description: The descriptor detailing the application error code and message describing the issue
      entityId:
        description: The unique entity identifier for which there was an error
        type: string
      entityType:
        description: The entity type name that was validated
        type: string
      fullyQualifiedPropertyName:
        description: 'The complete contextual property name given it''s position in the entity hierarchy. Example: [ContextClass].[ContextCollection][IndexInCollection].[PropertyName]'
        type: string
      propertyName:
        description: The name of the property to which the validation failure applied
        type: string
      severity:
        description: The severity level of the failure
        type: string
        enum:
          - Information
          - Warning
          - Error
          - Critical
    description: ValidationFailure
    type: object
  ValidationFailureDescriptor:
    title: ValidationFailureDescriptor
    properties:
      errorCode:
        description: The neutral application unique error code of the validation failure
        type: string
      errorMessage:
        description: The detailed error message of the validation failure
        type: string
    description: ValidationFailureDescriptor
    type: object
  ReportShipmentFulfillmentFailureRequest:
    title: ReportShipmentFulfillmentFailureRequest
    properties:
      failureDate:
        description: The date and time at which the failure occured
        type: string
        format: date-time
      failureSource:
        description: The name of the source of the failure
        type: string
      isResumable:
        description: a value indicating whether the workflow is resumable.
        type: boolean
        x-nullable: false
      stackTrace:
        description: The stack trace
        type: string
      transitioningState:
        description: the attempting state transition.
        type: string
      workflowInError:
        description: a value indicating whether the workflow is in error.
        type: boolean
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  RestartShipmentFulfillmentProcessingRequest:
    title: RestartShipmentFulfillmentProcessingRequest
    properties: {}
    description: Orders are entities which represent an order of a customer.
    type: object
  StartNewShipmentFulfillmentWorkflowRequest:
    title: StartNewShipmentFulfillmentWorkflowRequest
    properties:
      workflowXamlPath:
        description: the path of the fulfillment workflow.
        type: string
    description: Orders are entities which represent an order of a customer.
    type: object
  GetOrderDraftPaymentRequest:
    title: GetOrderDraftPaymentRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      draftId:
        description: The id of the draft order for the request.
        type: string
        x-nullable: false
      paymentId:
        description: The of payment associate to the cart.
        type: string
        x-nullable: false
    description: Orders are entities which represent an order of a customer.
    type: object
  UpdateOrderDraftPaymentRequest:
    title: UpdateOrderDraftPaymentRequest
    properties:
      paymentMethod:
        $ref: '#/definitions/PaymentMethod'
        description: The payment method.
      paymentStatus:
        description: The paymant status.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this request.
    description: Orders are entities which represent an order of a customer.
    type: object
  GetPickingMissionRequest:
    title: GetPickingMissionRequest
    properties:
      id:
        description: the picking mission identifier.
        type: string
        x-nullable: false
      scopeId:
        description: the scope id.
        type: string
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  UpdatePickingMissionRequest:
    title: UpdatePickingMissionRequest
    properties:
      missionItems:
        description: the picking mission items.
        type: array
        items:
          $ref: '#/definitions/MissionItem'
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  MissionItem:
    title: MissionItem
    properties:
      catalogId:
        description: the catalog identifier.
        type: string
      id:
        description: the picking mission item identifier.
        type: string
        x-nullable: false
      lineItemId:
        description: the line item identifier.
        type: string
        x-nullable: false
      orderId:
        description: the order identifier.
        type: string
        x-nullable: false
      pickedQuantity:
        description: the picked quantity.
        type: number
        format: double
        x-nullable: false
      pickingCondition:
        description: the mission item picking condition.
        type: string
        enum:
          - AllToBePicked
          - AllowPartiallyPicked
          - AllowAllOrNothingToBePicked
      productId:
        description: the product identifier.
        type: string
      requestedQuantity:
        description: the requested quantity.
        type: number
        format: double
        x-nullable: false
      shipmentId:
        description: the shipment identifier.
        type: string
        x-nullable: false
      sku:
        description: the sku.
        type: string
      status:
        description: the mission item status
        type: string
        enum:
          - NonePicked
          - AllPicked
          - PartiallyPicked
      variantId:
        description: the variant identifier.
        type: string
    description: MissionItem
    type: object
  GetFulfillmentLocationPickingMissionsRequest:
    title: GetFulfillmentLocationPickingMissionsRequest
    properties:
      fulfillmentLocationId:
        description: the fulfillment location identifier.
        type: string
        x-nullable: false
      scopeId:
        description: the scope id.
        type: string
      status:
        description: the picking mission status.
        type: string
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  GetOrderPickingMissionsRequest:
    title: GetOrderPickingMissionsRequest
    properties:
      fulfillmentLocationId:
        description: the fulfillment location identifier.
        type: string
      orderId:
        description: the order identifier.
        type: string
        x-nullable: false
      scopeId:
        description: the scope id.
        type: string
      status:
        description: the picking mission status.
        type: string
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  GetShipmentPickingMissionsRequest:
    title: GetShipmentPickingMissionsRequest
    properties:
      fulfillmentLocationId:
        description: the fulfillment location identifier.
        type: string
      scopeId:
        description: the scope id.
        type: string
      shipmentId:
        description: the shipment identifier.
        type: string
        x-nullable: false
      status:
        description: the picking mission status.
        type: string
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  AssignPickerToPickingMissionRequest:
    title: AssignPickerToPickingMissionRequest
    properties:
      picker:
        description: the picker.
        type: string
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  UnassignPickerFromPickingMissionRequest:
    title: UnassignPickerFromPickingMissionRequest
    properties: {}
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  StartPickingMissionAssemblyRequest:
    title: StartPickingMissionAssemblyRequest
    properties: {}
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  SavePickingMissionAssemblyProgressRequest:
    title: SavePickingMissionAssemblyProgressRequest
    properties:
      missionItemPickedQuantities:
        description: the mission item picked quantities.
        type: array
        items:
          $ref: '#/definitions/MissionItemPickedQuantity'
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  MissionItemPickedQuantity:
    title: MissionItemPickedQuantity
    properties:
      id:
        description: the picking mission item identifier.
        type: string
        x-nullable: false
      pickedQuantity:
        description: the picked quantity.
        type: number
        format: double
        x-nullable: false
    description: MissionItemPickedQuantity
    type: object
  CompletePickingMissionAssemblyRequest:
    title: CompletePickingMissionAssemblyRequest
    properties:
      missionItemPickedQuantities:
        description: the mission item picked quantities.
        type: array
        items:
          $ref: '#/definitions/MissionItemPickedQuantity'
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  CancelPickingMissionAssemblyRequest:
    title: CancelPickingMissionAssemblyRequest
    properties: {}
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  CancelPickingMissionRequest:
    title: CancelPickingMissionRequest
    properties: {}
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  CreatePickingMissionRequest:
    title: CreatePickingMissionRequest
    properties:
      fulfillmentLocationId:
        description: the fulfillment location identifier.
        type: string
        x-nullable: false
      id:
        description: the picking mission id.
        type: string
        x-nullable: false
      missionItems:
        description: the picking mission items.
        type: array
        items:
          $ref: '#/definitions/MissionItem'
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
    type: object
  SaveProcessedOrderRequest:
    title: SaveProcessedOrderRequest
    required:
      - processedOrder
      - shipmentId
    properties:
      processedOrder:
        $ref: '#/definitions/OrderProcessingResult'
        description: The Order that will be updated with all it's content as is.
      saveProcessingResult:
        description: The value indicating whether to save the ProcessingResult
        type: boolean
        x-nullable: false
      shipmentId:
        description: The Order that will be updated with all it's content as is.
        type: string
        x-nullable: false
    description: Processed orders.
    type: object
  OrderProcessingResult:
    title: OrderProcessingResult
    properties:
      arguments:
        $ref: '#/definitions/Dictionary_String_Object_'
        description: a collection of worflow arguments (In and Out).
      executionResult:
        description: the result of the execution.
        type: string
        enum:
          - Success
          - Ignored
          - Interruption
          - Failure
      messages:
        description: the collection of messages collected during the workflow execution.
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      processingExceptions:
        description: the list of unhandled exceptions that occurred during the workflow execution.
        type: array
        items:
          $ref: '#/definitions/Exception'
      resultingOrder:
        $ref: '#/definitions/Order'
        description: the resulting order.
      shipmentFulfillmentReadinessInfos:
        description: a collection of Shipment Fulfillment Readiness Information.
        type: array
        items:
          $ref: '#/definitions/ShipmentFulfillmentReadinessInfo'
      validationResults:
        description: a collection of validation results that were applied.
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
    description: OrderProcessingResult
    type: object
  Exception:
    title: Exception
    properties: {}
    description: Exception
    type: object
  ShipmentFulfillmentReadinessInfo:
    title: ShipmentFulfillmentReadinessInfo
    properties:
      readyToBeginFulfillmentOn:
        description: the date indicating when the shipment is ready to be processed.
        type: string
        format: date-time
      shipmentId:
        description: the unique system shipment identifier.
        type: string
        x-nullable: false
    description: ShipmentFulfillmentReadinessInfo
    type: object
  TryAcquireOrderLockForShipmentRequest:
    title: TryAcquireOrderLockForShipmentRequest
    required:
      - shipmentId
    properties:
      shipmentId:
        description: The shipment requesting a lock on the order.
        type: string
        x-nullable: false
      timeout:
        description: The timeout(in seconds) after which the lock will expire. Optional.
        type: number
        format: double
        x-nullable: false
    description: Processed orders.
    type: object
  ReleaseOrderLockForShipmentRequest:
    title: ReleaseOrderLockForShipmentRequest
    required:
      - shipmentId
    properties:
      shipmentId:
        description: The shipment requesting a lock on the order.
        type: string
        x-nullable: false
      timeout:
        description: The timeout(in seconds) after which the lock will expire. Optional.
        type: number
        format: double
        x-nullable: false
    description: Processed orders.
    type: object
  GetCartRequest:
    title: GetCartRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      executeWorkflow:
        description: Whether or not to execute the specified workflow before returning the cart.
        type: boolean
    description: Carts are entities used for assembling an order before submitting.
    type: object
  UpdateCartRequest:
    title: UpdateCartRequest
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      billingCurrency:
        description: the currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      cartType:
        description: 'the cart type, according to the CartType lookup.'
        type: string
      coupons:
        description: the collection of coupon codes included in the order.
        type: array
        items:
          $ref: '#/definitions/Coupon'
      customer:
        $ref: '#/definitions/CustomerSummary'
        description: the customer information.
      executeWorkflow:
        description: Whether or not to execute the specified workflow before returning the cart.
        type: boolean
      orderLocation:
        $ref: '#/definitions/OrderLocationSummary'
        description: the order location information.
      payments:
        description: The collection of payments to use for this order.
        type: array
        items:
          $ref: '#/definitions/Payment'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      shipments:
        description: the collection of shipments associated to this order.
        type: array
        items:
          $ref: '#/definitions/Shipment'
      source:
        description: the cart source.
        type: string
      status:
        description: the status of the cart.
        type: string
    description: Carts are entities used for assembling an order before submitting.
    type: object
  DeleteCartRequest:
    title: DeleteCartRequest
    required:
      - cartName
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartName:
        description: The name associated to the requested cart
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  GetCartsByCustomerIdRequest:
    title: GetCartsByCustomerIdRequest
    required:
      - customerId
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      cartType:
        description: The optional cart type. Only the carts of this specific type will be returned.
        type: string
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      customerId:
        description: The unique identifier of the Customer owning the cart
        type: string
        x-nullable: false
      includeChildScopes:
        description: a value indicating whether to include carts found in child scopes.
        type: boolean
        x-nullable: false
    description: Carts are entities used for assembling an order before submitting.
    type: object
  AddOrUpdateLineItemsInShipmentRequest:
    title: AddOrUpdateLineItemsInShipmentRequest
    required:
      - lineItems
    properties:
      cultureName:
        description: The culture name in which language the data will be returned.
        type: string
      workflowToExecute:
        description: The name of the workflow that should be executed.
        type: string
      lineItems:
        description: The list of line items to add or update
        type: array
        items:
          $ref: '#/definitions/LineItemInfo'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
    description: Carts are entities used for assembling an order before submitting.
    type: object
  ScheduleTaskActivityRequest:
    title: ScheduleTaskActivityRequest
    required:
      - cronTriggers
      - activityTypeFullName
    properties:
      cronTriggers:
        description: The list of triggers that will fired the execution of the task activity.
        type: array
        items:
          $ref: '#/definitions/CronTrigger'
      inputs:
        $ref: '#/definitions/PropertyBag'
        description: The task input properties.
      activityTypeFullName:
        description: The task activity type AssemblyQualifiedName.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  CronTrigger:
    title: CronTrigger
    properties:
      cronExpression:
        description: the cron expression string.
        type: string
      description:
        description: the trigger description.
        type: string
      group:
        description: the trigger affinity group.
        type: string
      name:
        description: the trigger name.
        type: string
      timeZone:
        description: the cron expression time zone.
        type: string
    description: CronTrigger
    type: object
  ScheduleTaskWorkflowRequest:
    title: ScheduleTaskWorkflowRequest
    required:
      - cronTriggers
      - workflowXamlRelativePath
    properties:
      cronTriggers:
        description: The list of triggers that will fired the execution of the task activity.
        type: array
        items:
          $ref: '#/definitions/CronTrigger'
      inputs:
        $ref: '#/definitions/PropertyBag'
        description: The task input properties.
      workflowXamlRelativePath:
        description: The task activity type AssemblyQualifiedName.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  GetScheduledTaskRequest:
    title: GetScheduledTaskRequest
    properties:
      group:
        description: the affinity group of the scheduled job.
        type: string
      name:
        description: the name of the scheduled job.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  DeleteScheduledTaskRequest:
    title: DeleteScheduledTaskRequest
    properties:
      group:
        description: the affinity group of the scheduled job.
        type: string
      name:
        description: the name of the scheduled job.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  AddOrUpdateScheduledTaskTrigger:
    title: AddOrUpdateScheduledTaskTrigger
    properties:
      triggerCronExpression:
        description: the cron expression string.
        type: string
      triggerDescription:
        description: the trigger description.
        type: string
      triggerTimeZone:
        description: the cron expression time zone.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  RemoveScheduledTaskTriggerRequest:
    title: RemoveScheduledTaskTriggerRequest
    properties:
      taskGroup:
        description: the affinity group of the scheduled job.
        type: string
      taskName:
        description: the name of the scheduled job.
        type: string
      triggerGroup:
        description: the trigger affinity group.
        type: string
      triggerName:
        description: the trigger name.
        type: string
    description: Long running tasks perform batch processing.
    type: object
  CreateRecurringOrderProgramRequest:
    title: CreateRecurringOrderProgramRequest
    required:
      - recurringOrderProgramName
    properties:
      frequencies:
        description: The frequencies of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderFrequency'
      localizations:
        description: The localized name of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderProgramLocalize'
      recurringOrderProgramName:
        description: The name and unique identifier of the recurring order program
        type: string
      scopeIds:
        description: The scope ids which are associated to the recurring order program
        type: array
        items:
          type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  RecurringOrderFrequency:
    title: RecurringOrderFrequency
    required:
      - localizations
      - numberOfDays
      - recurringOrderFrequencyName
      - sequenceNumber
    properties:
      localizations:
        description: The localized name of the recurring order frequencies
        type: array
        items:
          $ref: '#/definitions/RecurringOrderFrequencyLocalize'
      numberOfDays:
        description: The number of days for the recurring order frequency
        type: integer
        format: int32
        x-nullable: false
      recurringOrderFrequencyName:
        description: The recurring order frequency name
        type: string
      sequenceNumber:
        description: The sequence number used to order the frequencies
        type: integer
        format: int32
        x-nullable: false
    description: RecurringOrderFrequency
    type: object
  RecurringOrderFrequencyLocalize:
    title: RecurringOrderFrequencyLocalize
    required:
      - cultureIso
      - displayName
    properties:
      cultureIso:
        description: The culture
        type: string
      displayName:
        description: The display name
        type: string
    description: RecurringOrderFrequencyLocalize
    type: object
  RecurringOrderProgramLocalize:
    title: RecurringOrderProgramLocalize
    required:
      - cultureIso
      - displayName
    properties:
      cultureIso:
        description: The culture
        type: string
      displayName:
        description: The display name
        type: string
    description: RecurringOrderProgramLocalize
    type: object
  DeleteRecurringOrderProgramRequest:
    title: DeleteRecurringOrderProgramRequest
    required:
      - recurringOrderProgramName
    properties:
      recurringOrderProgramName:
        description: The unique identifier of the recurring order program to delete
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  GetRecurringOrderProgramRequest:
    title: GetRecurringOrderProgramRequest
    required:
      - recurringOrderProgramName
    properties:
      recurringOrderProgramName:
        description: The unique identifier of the recurring order program to get
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  UpdateRecurringOrderProgramRequest:
    title: UpdateRecurringOrderProgramRequest
    properties:
      frequencies:
        description: The frequencies of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderFrequency'
      localizations:
        description: The localized name of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderProgramLocalize'
      scopeIds:
        description: The scope ids which are associated to the recurring order program
        type: array
        items:
          type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  DeleteRecurringOrderLineItemsRequest:
    title: DeleteRecurringOrderLineItemsRequest
    required:
      - customerId
      - recurringOrderLineItemIds
      - scopeId
    properties:
      customerId:
        description: The customer id of the recurring order line items to delete
        type: string
        x-nullable: false
      recurringOrderLineItemIds:
        description: The list of recurring order line item ids to delete
        type: array
        items:
          type: string
          x-nullable: false
      scopeId:
        description: The scope of the RecurringOrderLineItems to delete
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  GetRecurringOrderProgramsByScopeIdRequest:
    title: GetRecurringOrderProgramsByScopeIdRequest
    required:
      - scopeId
    properties:
      scopeId:
        description: The scope of the recurring order programs to get
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  GetRecurringOrderLineItemRequest:
    title: GetRecurringOrderLineItemRequest
    required:
      - recurringOrderLineItemId
      - scopeId
    properties:
      recurringOrderLineItemId:
        description: The recurring order line item id
        type: string
        x-nullable: false
      scopeId:
        description: The scope of the RecurringOrderLineItem to get
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  GetRecurringOrderLineItemsForCustomerRequest:
    title: GetRecurringOrderLineItemsForCustomerRequest
    required:
      - customerId
      - scopeId
    properties:
      customerId:
        description: The customer id of the RecurringOrderLineItems to get
        type: string
        x-nullable: false
      scopeId:
        description: The scope of the RecurringOrderLineItems to get
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  AddOrUpdateRecurringOrderLineItemsRequest:
    title: AddOrUpdateRecurringOrderLineItemsRequest
    required:
      - lineItems
      - mustApplyUpdatesToRecurringCart
    properties:
      lineItems:
        description: The list of line items to update
        type: array
        items:
          $ref: '#/definitions/RecurringOrderLineItem'
      mustApplyUpdatesToRecurringCart:
        description: A value indicating whether the values from the RecurringOrderLineItem will be applied to the recurring carts as well.  New values will always be added to a recurring cart.
        type: boolean
        x-nullable: false
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  RecurringOrderLineItem:
    title: RecurringOrderLineItem
    required:
      - created
      - createdBy
      - lastModified
      - lastModifiedBy
      - billingAddressId
      - customerId
      - fulfillmentMethodName
      - nextOccurence
      - paymentMethodId
      - paymentProviderName
      - productDisplayName
      - productId
      - quantity
      - recurringOrderFrequencyName
      - recurringOrderLineItemId
      - recurringOrderProgramName
      - scopeId
      - shippingAddressId
      - shippingProviderId
      - sku
    properties:
      created:
        description: The date of the creation of the entity
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The id of the person who created the entity
        type: string
      lastModified:
        description: The date of the last modification
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The id of the last person who modified the entity
        type: string
      billingAddressId:
        description: The billing address id of the recurring order line item
        type: string
        x-nullable: false
      customerId:
        description: The customer id of the recurring order line item
        type: string
        x-nullable: false
      fulfillmentMethodName:
        description: The fulfillment method name of the recurring order line item
        type: string
      nextOccurence:
        description: The next occurence of the recurring order line item
        type: string
        format: date-time
        x-nullable: false
      paymentMethodId:
        description: The payment method id of the recurring order line item
        type: string
        x-nullable: false
      paymentProviderName:
        description: The payment method provider name of the recurring order line item
        type: string
      previousOccurence:
        description: The previous occurence of the recurring order line item
        type: string
        format: date-time
      productDisplayName:
        description: The product display name of the recurring order line item
        type: string
      productId:
        description: The product name of the recurring order line item
        type: string
      quantity:
        description: The quantity of the recurring order line item
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        description: The name of the recurring order frequency of the recurring order line item
        type: string
      recurringOrderLineItemId:
        description: The recurring order line item id
        type: string
        x-nullable: false
      recurringOrderProgramName:
        description: The name of the recurring order program of the recurring order line item
        type: string
      scopeId:
        description: The scope of the recurring order line item
        type: string
      shippingAddressId:
        description: The shipping address id of the recurring order line item
        type: string
        x-nullable: false
      shippingProviderId:
        description: The shipping provider id of the recurring order line item
        type: string
        x-nullable: false
      sku:
        description: The sku of the recurring order line item
        type: string
      tag:
        description: The tag of the recurring order line item
        type: string
      variantId:
        description: The variant name of the recurring order line item
        type: string
    description: RecurringOrderLineItem
    type: object
  DeleteRecurringCartLineItemsRequest:
    title: DeleteRecurringCartLineItemsRequest
    required:
      - customerId
      - lineItemIds
      - scopeId
    properties:
      customerId:
        description: The customer id of the recurring order line items
        type: string
        x-nullable: false
      lineItemIds:
        description: The list of line item ids to delete
        type: array
        items:
          type: string
          x-nullable: false
      scopeId:
        description: The scope of the RecurringOrderLineItems to delete
        type: string
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  RescheduleRecurringCartRequest:
    title: RescheduleRecurringCartRequest
    required:
      - customerId
      - nextOccurence
    properties:
      customerId:
        description: The customer id of the recurring order line items
        type: string
        x-nullable: false
      nextOccurence:
        description: The date when the order will be created
        type: string
        format: date-time
        x-nullable: false
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
    type: object
  IndexProductsRequest:
    title: IndexProductsRequest
    properties:
      ignoreSequenceQuota:
        description: Value indicating whether the task sequence quota should be ingored. Default value is TRUE
        type: boolean
      indexingType:
        description: 'The possible indexing types are ''partial'', ''full'' or ''clean''. The ''clean'' indexing will clean the index and re-index all documents (default: ''partial'').'
        type: string
        enum:
          - Partial
          - Full
          - Clean
      taskName:
        description: The name that will be given to task executing the indexing.
        type: string
      catalogIds:
        description: 'Optional. The list of catalogs to index. If not specified, all catalogs will be indexed.'
        type: array
        items:
          type: string
      cultureNames:
        description: 'Optional. The list of cultures to index. If not specified, all cultures will be indexed.'
        type: array
        items:
          type: string
      targetIndex:
        description: Optional. The indexes targetted by the rebuild. All by default.
        type: integer
        format: int32
        enum:
          - All
          - Details
          - Categories
          - Prices
    description: The API used to query the search engine.
    type: object
  IndexInventoriesRequest:
    title: IndexInventoriesRequest
    properties:
      ignoreSequenceQuota:
        description: Value indicating whether the task sequence quota should be ingored. Default value is TRUE
        type: boolean
      indexingType:
        description: 'The possible indexing types are ''partial'', ''full'' or ''clean''. The ''clean'' indexing will clean the index and re-index all documents (default: ''partial'').'
        type: string
        enum:
          - Partial
          - Full
          - Clean
      taskName:
        description: The name that will be given to task executing the indexing.
        type: string
      inventoryLocationIds:
        description: 'Optional. The list of inventory locations to index. If not specified, all inventory locations will be indexed.'
        type: array
        items:
          type: string
    description: The API used to query the search engine.
    type: object
  IndexCustomersRequest:
    title: IndexCustomersRequest
    properties:
      ignoreSequenceQuota:
        description: Value indicating whether the task sequence quota should be ingored. Default value is TRUE
        type: boolean
      indexingType:
        description: 'The possible indexing types are ''partial'', ''full'' or ''clean''. The ''clean'' indexing will clean the index and re-index all documents (default: ''partial'').'
        type: string
        enum:
          - Partial
          - Full
          - Clean
      taskName:
        description: The name that will be given to task executing the indexing.
        type: string
    description: The API used to query the search engine.
    type: object
  IndexStoresRequest:
    title: IndexStoresRequest
    properties:
      ignoreSequenceQuota:
        description: Value indicating whether the task sequence quota should be ingored. Default value is TRUE
        type: boolean
      indexingType:
        description: 'The possible indexing types are ''partial'', ''full'' or ''clean''. The ''clean'' indexing will clean the index and re-index all documents (default: ''partial'').'
        type: string
        enum:
          - Partial
          - Full
          - Clean
      taskName:
        description: The name that will be given to task executing the indexing.
        type: string
    description: The API used to query the search engine.
    type: object
  GetClinicInfoRequest:
    title: GetClinicInfoRequest
    properties:
      clinicId:
        description: The clinic identifier
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  CDMVCreateCustomerRequest:
    title: CDMVCreateCustomerRequest
    properties:
      emailAddress:
        description: Customer email address.
        type: string
      fileNumber:
        description: Customer file numer.
        type: string
      firstName:
        description: Customer first name.
        type: string
      lastName:
        description: Customer last name.
        type: string
      password:
        description: Customer password.
        type: string
      productIdAuthorizations:
        description: Customer product id authorization.
        type: array
        items:
          $ref: '#/definitions/ProductIdAuthorization'
      b2CAccountCreationType:
        description: The customer's B2C site profile account type.
        type: string
        enum:
          - Invite
          - SelfService
      language:
        description: Customer preferred language
        type: string
      newsletterOptIn:
        description: Whether the customer is subscribed to receive email newsletters
        type: boolean
        x-nullable: false
      originalId:
        description: The customer's original ID. Defaults to the customer's email address if no value is provided.
        type: string
      invitationEmailAddress:
        description: Customer email address used for the invitation to create his account.
        type: string
      excludeFromWelcomePromo:
        description: True if the customer is not eligible for the Welcome promotion.
        type: boolean
        x-nullable: false
      phoneNumber:
        description: Customer phone number
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  ProductIdAuthorization:
    title: ProductIdAuthorization
    properties:
      productID:
        description: The ID of the product the authorization is about
        type: string
      status:
        description: The status of the product authorization
        type: string
      expiryDate:
        description: The date an Authorized product authorization expires
        type: string
        format: date-time
    description: ProductIdAuthorization
    type: object
  GetClinicInfoForCustomerRequest:
    title: GetClinicInfoForCustomerRequest
    properties:
      customerId:
        description: The customer's unique identifier
        type: string
        x-nullable: false
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetB2CSiteProfileRequest:
    title: GetB2CSiteProfileRequest
    properties:
      customerId:
        description: The customer's unique identifier
        type: string
        x-nullable: false
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetCustomersKpiRequest:
    title: GetCustomersKpiRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  DocumentsRequest:
    title: DocumentsRequest
    properties:
      requestStream:
        $ref: '#/definitions/Stream'
        description: The raw request memory stream
    description: cdmv
    type: object
  Stream:
    title: Stream
    properties: {}
    description: Stream
    type: object
  GetFeatureFlagsRequest:
    title: GetFeatureFlagsRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetProductAuthorizationsRequest:
    title: GetProductAuthorizationsRequest
    properties:
      customerId:
        description: The customer's unique identifier
        type: string
        x-nullable: false
      includeProductDetails:
        description: Whether to include the details of the products
        type: boolean
        x-nullable: false
      includeVariants:
        description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
        type: boolean
        x-nullable: false
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
      phoneNumber:
        description: The customer's phone number
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  AddOrUpdateProductAuthorizationsRequest:
    title: AddOrUpdateProductAuthorizationsRequest
    properties:
      productAuthorizations:
        description: Product authorization(s) to be added or updated.
        type: array
        items:
          $ref: '#/definitions/ProductIdAuthorization'
      includeProductDetails:
        description: Whether to include the details of the products
        type: boolean
        x-nullable: false
      includeVariants:
        description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
        type: boolean
        x-nullable: false
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  RemoveProductAuthorizationsRequest:
    title: RemoveProductAuthorizationsRequest
    properties:
      customerId:
        description: The customer's unique identifier
        type: string
        x-nullable: false
      productIds:
        description: List of product ids matching product authorizations to be removed.
        type: array
        items:
          type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  ValidateCustomerTokenRequest:
    title: ValidateCustomerTokenRequest
    required:
      - authToken
    properties:
      authToken:
        description: The auth token to validate
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  UpdateShipmentTrackingRequest:
    title: UpdateShipmentTrackingRequest
    properties:
      orderNumber:
        description: The order number the shipments belong to
        type: string
      shipments:
        description: 'The list of shipments to confirm, all within a single order'
        type: array
        items:
          $ref: '#/definitions/Shipment'
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  ConfirmShipmentRequest:
    title: ConfirmShipmentRequest
    properties:
      orderNumber:
        description: The order number the shipments belong to
        type: string
      shipments:
        description: 'The list of shipments to confirm, all within a single order'
        type: array
        items:
          $ref: '#/definitions/Shipment'
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  InvoiceOrderToCDMVRequest:
    title: InvoiceOrderToCDMVRequest
    properties:
      orderNumber:
        description: The number of the order to confirm the payment for
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  CDMVSelfServiceAccountCreationRequest:
    title: CDMVSelfServiceAccountCreationRequest
    properties:
      emailAddress:
        description: Customer email address.
        type: string
      language:
        description: Customer preferred language
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  CDMVSelfServiceAccountCreationValidationRequest:
    title: CDMVSelfServiceAccountCreationValidationRequest
    properties:
      token:
        description: Encrypted Token
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetClinicInfoForCustomerByUsernameRequest:
    title: GetClinicInfoForCustomerByUsernameRequest
    properties:
      username:
        description: The customer's username.
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  InviteNewCustomerRequest:
    title: InviteNewCustomerRequest
    properties:
      firstName:
        description: The customer's first name.
        type: string
      lastName:
        description: The customer's last name.
        type: string
      fileNumber:
        description: The customer's medical file number.
        type: string
      emailAddress:
        description: The customer's email address
        type: string
      language:
        description: The customer's preferred language.
        type: string
      productIdAuthorizations:
        description: 'The list of product authorizations that will be added to his account. The status here is meaningless and its value will be ignored, as it will always default to Authorized when the customer creates his account'
        type: array
        items:
          $ref: '#/definitions/ProductIdAuthorization'
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetPendingApprovalAccountsRequest:
    title: GetPendingApprovalAccountsRequest
    properties:
      includePendingOrderCount:
        description: Whether to include the number of pending orders for each customer
        type: boolean
        x-nullable: false
      resultsPerPage:
        description: The maximum number of results that can be returned at once. Defaults to 50
        type: integer
        format: int32
      startingPage:
        description: 'If the results are returned on multiple pages, this indicates which page of results to return'
        type: integer
        format: int32
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetProductAuthorizationsByUsernameRequest:
    title: GetProductAuthorizationsByUsernameRequest
    properties:
      username:
        description: Customer's username
        type: string
      includeProductDetails:
        description: Whether to include the details of the products
        type: boolean
        x-nullable: false
      includeVariants:
        description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
        type: boolean
        x-nullable: false
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  AddOrUpdateProductAuthorizationsByUsernameRequest:
    title: AddOrUpdateProductAuthorizationsByUsernameRequest
    properties:
      username:
        description: Customer's username.
        type: string
      productAuthorizations:
        description: Product authorization(s) to be added or updated.
        type: array
        items:
          $ref: '#/definitions/ProductIdAuthorization'
      includeProductDetails:
        description: Whether to include the details of the products
        type: boolean
        x-nullable: false
      includeVariants:
        description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
        type: boolean
        x-nullable: false
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  RemoveProductAuthorizationsByUsernameRequest:
    title: RemoveProductAuthorizationsByUsernameRequest
    properties:
      username:
        description: Customer's username.
        type: string
      productIds:
        description: List of product ids matching product authorizations to be removed.
        type: array
        items:
          type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  UpdateProductAuthorizationRequest:
    title: UpdateProductAuthorizationRequest
    properties:
      status:
        description: The status to set on the product authorization
        type: string
      expiryDate:
        description: The date an Authorized product authorization expires. Only used if the status is Authorized
        type: string
        format: date-time
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  DeleteProductAuthorizationRequest:
    title: DeleteProductAuthorizationRequest
    properties:
      id:
        description: 'The id of the product authorization to delete (currently, this is the custom profile id of the product authorization)'
        type: string
        x-nullable: false
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetCustomerTokenRequest:
    title: GetCustomerTokenRequest
    required:
      - customerId
    properties:
      customerId:
        description: The unique customer Id
        type: string
        x-nullable: false
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetCustomerWalletRequest:
    title: GetCustomerWalletRequest
    properties:
      customerId:
        description: Customer Id
        type: string
        x-nullable: false
      paymentProviderName:
        description: Payment provider name
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  AddMonerisPaymentMethodRequest:
    title: AddMonerisPaymentMethodRequest
    properties:
      paymentProviderName:
        description: Payment provider name
        type: string
      tempVaultToken:
        description: Payment method temporary vault token
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  DeletePaymentMethodRequest:
    title: DeletePaymentMethodRequest
    properties:
      customerId:
        description: Customer Id
        type: string
        x-nullable: false
      paymentMethodId:
        description: Payment method Id
        type: string
        x-nullable: false
      paymentProviderName:
        description: Payment provider name
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  UpdatePendingApprovalAccountRequest:
    title: UpdatePendingApprovalAccountRequest
    properties:
      approvedBy:
        description: The email address of the admin who approved this customer account
        type: string
      fileNumber:
        description: Customer file number.
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  ClinicProductInformationImportRequest:
    title: ClinicProductInformationImportRequest
    properties:
      path:
        description: The path of the file(s) to import.
        type: string
      containerName:
        description: The name of container which import file exists
        type: string
      maximumErrors:
        description: The maximum number of validation errors that can be encountered. 0 means infinite number.
        type: integer
        format: int32
        x-nullable: false
      taskId:
        description: the task id. Use this to query the system for the state of the task.
        type: string
        x-nullable: false
      fileFormat:
        description: 'The file format of the import, Zip, JSON, XML or Excel.'
        type: string
      allowPricesDeleting:
        description: Whether or not the import have to delete prices which are not specified in the import file.
        type: boolean
        x-nullable: false
      reIndex:
        description: Whether or not the indexes are built after the import. The default value is True (when not set).
        type: boolean
      correlationId:
        description: The correlation id for the durable task.
        type: string
        x-nullable: false
      rebuildSearchIndex:
        description: Indicates whether or not the search indexes are rebuilt after the import. The default value is True (when not set).
        type: boolean
      extendedOptions:
        $ref: '#/definitions/ImportProductExtendedOptions'
        description: The extended options applied during the import process.
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  InviteNewOrganizationalCustomerRequest:
    title: InviteNewOrganizationalCustomerRequest
    properties:
      firstName:
        description: The customer's first name.
        type: string
      lastName:
        description: The customer's last name.
        type: string
      emailAddress:
        description: The customer's email address
        type: string
      language:
        description: The customer's preferred language.
        type: string
      productIdAuthorizations:
        description: 'The list of product authorizations that will be added to his account. The status here is meaningless and its value will be ignored, as it will always default to Authorized when the customer creates his account'
        type: array
        items:
          $ref: '#/definitions/ProductIdAuthorization'
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  FindProductAuthorizationsByStatusRequest:
    title: FindProductAuthorizationsByStatusRequest
    properties:
      status:
        description: The status to use for the search. Default value is Pending
        type: string
        enum:
          - Pending
          - Authorized
          - Refused
      includeProductDetails:
        description: Whether to include the details of the products
        type: boolean
        x-nullable: false
      includeVariants:
        description: Whether to include the variants of the authorized products. IncludeProductDetails must be set to true for this to be considered
        type: boolean
        x-nullable: false
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
      includeCustomerInfo:
        description: Whether to include the customer information for each of the product authorizations
        type: boolean
        x-nullable: false
      resultsPerPage:
        description: The maximum number of results that can be returned at once. Defaults to 50
        type: integer
        format: int32
      startingPage:
        description: 'If the results are returned on multiple pages, this indicates which page of results to return'
        type: integer
        format: int32
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  DeactivateProductRequest:
    title: DeactivateProductRequest
    properties: {}
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  RemoveActivationOverrideRequest:
    title: RemoveActivationOverrideRequest
    required:
      - productId
    properties:
      productId:
        description: The unique product Id
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  UpdateWalletCreditCardRequest:
    title: UpdateWalletCreditCardRequest
    properties:
      paymentProviderName:
        description: Payment provider name
        type: string
      customerId:
        description: Customer Id
        type: string
        x-nullable: false
      expiryDate:
        description: Expiry date
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  CustomerCreatedNotificationRequest:
    title: CustomerCreatedNotificationRequest
    properties:
      emailAddress:
        description: Customer email address
        type: string
    description: Regroupment of all CDMV messaging notifications
    type: object
  CustomerPasswordResetNotificationRequest:
    title: CustomerPasswordResetNotificationRequest
    properties:
      emailAddress:
        description: Customer email address
        type: string
    description: Regroupment of all CDMV messaging notifications
    type: object
  CustomerPasswordChangedNotificationRequest:
    title: CustomerPasswordChangedNotificationRequest
    properties:
      emailAddress:
        description: Customer email address
        type: string
    description: Regroupment of all CDMV messaging notifications
    type: object
  CustomerInvitationNotificationRequest:
    title: CustomerInvitationNotificationRequest
    properties:
      language:
        description: The customer's preferred language.
        type: string
      firstName:
        description: The customer's first name. Default is FirstName.
        type: string
      lastName:
        description: The customer's last name.Default is LastName.
        type: string
      fileNumber:
        description: The customer's medical file number.Default is a new guid.
        type: string
      emailAddress:
        description: The customer's email address.Default is a random email address @scopeId.cdmv.com
        type: string
      numberOfProductAuthorization:
        description: The customer's preferred language.
        type: integer
        format: int32
    description: Regroupment of all CDMV messaging notifications
    type: object
  InactiveProductsReportRequest:
    title: InactiveProductsReportRequest
    properties:
      cultureName:
        description: The culture name which dictates in which language localized values are returned in
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  UpdateWalletDefaultCreditCardRequest:
    title: UpdateWalletDefaultCreditCardRequest
    properties:
      paymentProviderName:
        description: Payment provider name
        type: string
      customerId:
        description: Customer Id
        type: string
        x-nullable: false
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetMonerisCaptureSettingsRequest:
    title: GetMonerisCaptureSettingsRequest
    properties:
      paymentProviderName:
        description: Payment provider name
        type: string
      scopeId:
        description: The id of the requested scope
        type: string
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
    type: object
  GetInventoryQuantitiesByLocationRequest:
    title: GetInventoryQuantitiesByLocationRequest
    properties:
      scopeId:
        description: The id of the requested scope
        type: string
      excludeItemsWithQuantityEqualToZero:
        description: Wheather or not inventory items having a quantity equal to zero should be excluded from the result
        type: boolean
        x-nullable: false
      inventoryLocationId:
        description: business id for the inventory location which will be associated to the Sku to retrieve InventoryItem
        type: string
      skip:
        description: The number of results to skip
        type: integer
        format: int32
        x-nullable: false
      take:
        description: The number of results to return
        type: integer
        format: int32
        x-nullable: false
    description: Inventory quantities.
    type: object
  CreateCartPaymentVaultProfileRequest:
    title: CreateCartPaymentVaultProfileRequest
    properties:
      cardHolderName:
        description: The name on the credit card
        type: string
      createPaymentProfile:
        description: A boolean to indicate to save the payment profile
        type: boolean
        x-nullable: false
      ip:
        description: The ip address issuing the request
        type: string
      temporaryToken:
        description: The tempory token returned by the payment provider
        type: string
    description: Vault profile are external credit card token management.
    type: object
  CreateOrderDraftPaymentVaultProfileRequest:
    title: CreateOrderDraftPaymentVaultProfileRequest
    required:
      - cardHolderName
      - customerId
      - temporaryToken
    properties:
      cardHolderName:
        description: The name on the credit card
        type: string
      createPaymentProfile:
        description: A boolean to indicate to save the payment profile
        type: boolean
        x-nullable: false
      customerId:
        description: The id of the customer associated with the draft order
        type: string
        x-nullable: false
      ip:
        description: The ip address issuing the request
        type: string
      temporaryToken:
        description: The tempory token returned by the payment provider
        type: string
    description: Vault profile are external credit card token management.
    type: object
  OvertureHostInfo:
    title: OvertureHostInfo
    properties:
      serverName:
        type: string
      environment:
        type: string
      hostname:
        type: string
      variation:
        type: string
      overtureVersion:
        type: string
      serviceStackVersion:
        type: string
      dbStatuses:
        type: array
        items:
          $ref: '#/definitions/DbStatus'
      blobStorageStatus:
        $ref: '#/definitions/BlobStorageStatus'
      overturePlugins:
        type: array
        items:
          $ref: '#/definitions/PluginInfo'
      serviceStackPlugins:
        type: array
        items:
          $ref: '#/definitions/PluginInfo'
    description: OvertureHostInfo
    type: object
  DbStatus:
    title: DbStatus
    properties:
      name:
        type: string
      connectionSucceed:
        type: boolean
        x-nullable: false
    description: DbStatus
    type: object
  BlobStorageStatus:
    title: BlobStorageStatus
    properties:
      providerName:
        type: string
      readWriteSucceed:
        type: boolean
        x-nullable: false
    description: BlobStorageStatus
    type: object
  PluginInfo:
    title: PluginInfo
    properties:
      typeName:
        type: string
      assemblyName:
        type: string
      version:
        type: string
    description: PluginInfo
    type: object
  Application:
    title: Application
    properties:
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name.
      iconUri:
        description: The icon uri.
        type: string
      id:
        description: The Application identifier.
        type: integer
        format: int32
        x-nullable: false
      isAbsoluteUrl:
        description: a value indicating whether or not an application url is absolute
        type: boolean
        x-nullable: false
      isVisible:
        description: a value indicating whether or not an application is visible
        type: boolean
        x-nullable: false
      name:
        description: The Name.
        type: string
      url:
        description: The url.
        type: string
    description: Application
    type: object
  List_Application_:
    title: List<Application>
    type: array
    items:
      $ref: '#/definitions/Application'
  Culture:
    title: Culture
    properties:
      cultureIso:
        description: 'the culture ISO name (ex: en-US)'
        type: string
      cultureName:
        description: 'the friendly name of the culture, in US english'
        type: string
      isDefault:
        description: A value indicating whether the culture is the default culture configured for Overture
        type: boolean
        x-nullable: false
      isSupported:
        description: a value indicating whether this culture is supported for this installation of Overture
        type: boolean
        x-nullable: false
      sortOrder:
        description: the sorting order
        type: integer
        format: int32
        x-nullable: false
    description: Culture
    type: object
  Scope:
    title: Scope
    required:
      - id
    properties:
      children:
        description: The children of the Scope
        type: array
        items:
          $ref: '#/definitions/Scope'
      childrenIds:
        description: The list of the childrend ids
        type: array
        items:
          type: string
      currency:
        $ref: '#/definitions/Currency'
        description: 'Currency for the scope. e.g.: CAD or USD'
      currencyIso:
        description: 'Currency iso code for the scope. e.g.: CAD or USD'
        type: string
      defaultCulture:
        description: 'Default culture for the scope. e.g.: en-US'
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The Description for the scope to help the consumer understand what the Scope is for.
      endDate:
        description: End date for the scope
        type: string
        format: date-time
      id:
        description: 'The unique identifier of the Scope. '
        type: string
      isActive:
        description: Whether or not the Scope is active
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the Scope that will be primarily used for Display purpose.
      parentScopeId:
        description: The parent scope id
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      sequenceNumber:
        description: The number used for ordering the Scope in a list
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: Start date for the scope
        type: string
        format: date-time
      type:
        description: The ScopeType of the Scope
        type: string
        enum:
          - Global
          - Sale
          - Dependant
          - Virtual
    description: Scope
    type: object
  Currency:
    title: Currency
    properties:
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: UI compatible display name of the currency.
      id:
        description: The unique identifier for the currency
        type: string
        x-nullable: false
      isoCode:
        description: The iso code of the currency
        type: string
      isSupported:
        description: Wheter the currency is supported by the system.
        type: boolean
        x-nullable: false
      precision:
        description: The number of decimals precision of the currency.
        type: integer
        format: int32
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      sortOrder:
        description: The sorting order of the currency.
        type: integer
        format: int32
        x-nullable: false
      symbol:
        description: 'The currency symbol '
        type: string
    description: Currency
    type: object
  Module:
    title: Module
    properties:
      createdBy:
        description: the Created by.
        type: string
      createdDate:
        description: the Created date.
        type: string
        format: date-time
        x-nullable: false
      isVisible:
        description: a value indicating whether or not an application is visible
        type: boolean
        x-nullable: false
      moduleId:
        description: the Module identifier.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: the Name.
        type: string
    description: Module
    type: object
  List_Module_:
    title: List<Module>
    type: array
    items:
      $ref: '#/definitions/Module'
  IHttpResult:
    title: IHttpResult
    properties: {}
    description: IHttpResult
    type: object
  AuthenticatedStatus:
    title: AuthenticatedStatus
    properties:
      status:
        description: The authentication status of the user
        type: boolean
        x-nullable: false
    description: AuthenticatedStatus
    type: object
  UserPermissions:
    title: UserPermissions
    properties:
      name:
        description: the name.
        type: string
      primarySId:
        description: the user primary Sid.
        type: string
      rolesClaimsValues:
        description: the roles claims.
        type: array
        items:
          type: string
      siDs:
        description: the SIDs.
        type: array
        items:
          type: string
      upn:
        description: the user principal name.
        type: string
    description: UserPermissions
    type: object
  AuthenticationConfiguration:
    title: AuthenticationConfiguration
    properties:
      federationConfiguration:
        $ref: '#/definitions/FederationConfiguration'
        description: The federation configuration used when the authentication information is carried within a cookie
    description: AuthenticationConfiguration
    type: object
  FederationConfiguration:
    title: FederationConfiguration
    properties:
      cookieName:
        description: Name of cookie carrying the authentication cookie.
        type: string
      encryptionCertificateThumprint:
        description: Thumbprint of the certificate that was used to encrypt the cookie
        type: string
    description: FederationConfiguration
    type: object
  Token:
    title: Token
    properties:
      expiryDate:
        description: the expiry date of the token.
        type: string
        format: date-time
        x-nullable: false
      value:
        description: the value of the token.
        type: string
    description: Token
    type: object
  CacheStatus:
    title: CacheStatus
    properties:
      canEnumerateKeys:
        description: True if the cache can enumerate its keys
        type: boolean
        x-nullable: false
      itemCount:
        description: Number of items in the cache
        type: integer
        format: int32
        x-nullable: false
      keys:
        description: Keys in the cache
        type: array
        items:
          type: string
      name:
        description: Name of the cache
        type: string
      type:
        description: Type of the cache
        type: string
    description: CacheStatus
    type: object
  List_CacheStatus_:
    title: List<CacheStatus>
    type: array
    items:
      $ref: '#/definitions/CacheStatus'
  BasicDiagnostic:
    title: BasicDiagnostic
    properties:
      compressionHeader:
        description: Content of the Accept-Encoding header of the request
        type: string
      serverDateTime:
        description: DateTime of the server when executing the request (UTC)
        type: string
        format: date-time
        x-nullable: false
    description: BasicDiagnostic
    type: object
  VersionInfo:
    title: VersionInfo
    properties:
      versionOCC:
        description: The version of the Orckestra Commerce Cloud platform
        type: string
      defaultHelpUrl:
        description: The default Help Url for the Orckestra Commerce Cloud platform
        type: string
      moduleHelpUrls:
        description: The list of Help URLs for Orckestra Commerce Cloud platform modules
        type: array
        items:
          $ref: '#/definitions/ModuleHelpUrl'
    description: VersionInfo
    type: object
  ModuleHelpUrl:
    title: ModuleHelpUrl
    properties:
      moduleName:
        description: The Orckestra Commerce Cloud platform module name.
        type: string
      helpUrl:
        description: The Help Url for the module specified in the property ModuleName.
        type: string
    description: ModuleHelpUrl
    type: object
  Group:
    title: Group
    properties:
      description:
        description: the description.
        type: string
      displayName:
        description: the display name.
        type: string
      groupId:
        description: the object identifier.
        type: string
      mailNickName:
        description: the MailNickName
        type: string
    description: Group
    type: object
  FindGroupsResult:
    title: FindGroupsResult
    properties:
      groups:
        description: The list of groups
        type: array
        items:
          $ref: '#/definitions/Group'
      totalResults:
        description: Shows the total number of query results which may differ with returned results if we use page them
        type: integer
        format: int32
        x-nullable: false
    description: FindGroupsResult
    type: object
  GetGroupMembersWithPagingResult:
    title: GetGroupMembersWithPagingResult
    properties:
      users:
        description: The list of user for this group
        type: array
        items:
          $ref: '#/definitions/User'
      usersTotal:
        description: The total of users
        type: integer
        format: int32
        x-nullable: false
    description: GetGroupMembersWithPagingResult
    type: object
  User:
    title: User
    properties:
      address:
        description: the address.
        type: string
      city:
        description: the city.
        type: string
      country:
        description: the country.
        type: string
      department:
        description: the department.
        type: string
      displayName:
        description: the display name.
        type: string
      enabled:
        description: a value indicating whether or not user is enabled.
        type: boolean
      firstName:
        description: the first name.
        type: string
      jobTitle:
        description: the job title.
        type: string
      lastName:
        description: the last name.
        type: string
      mobile:
        description: the mobile.
        type: string
      passwordProfile:
        $ref: '#/definitions/PasswordProfile'
        description: the password profile.
      phone:
        description: the phone.
        type: string
      postalCode:
        description: the postal code.
        type: string
      preferredLanguage:
        description: the preferred language.
        type: string
      state:
        description: the state.
        type: string
      userId:
        description: the user identifier.
        type: string
      userName:
        description: the name of the user.
        type: string
    description: User
    type: object
  Role:
    title: Role
    properties:
      childrenRoles:
        description: the children roles.
        type: array
        items:
          $ref: '#/definitions/Role'
      created:
        description: the created date
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the created by value.
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: the description.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name.
      id:
        description: the role identifier.
        type: integer
        format: int32
        x-nullable: false
      isActive:
        description: a value indicating whether or not role is active.
        type: boolean
        x-nullable: false
      isReadOnly:
        description: a value indicating whether or not role can be modified.
        type: boolean
        x-nullable: false
      lastModified:
        description: the last modified date.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the last modified by.
        type: string
      moduleId:
        description: the module identifier.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: the name.
        type: string
    description: Role
    type: object
  List_Role_:
    title: List<Role>
    type: array
    items:
      $ref: '#/definitions/Role'
  RoleChildAssociation:
    title: RoleChildAssociation
    properties:
      isChildOf:
        description: Determine if is child of the parent role id
        type: boolean
        x-nullable: false
      parentRoleId:
        description: The parent role identifier
        type: integer
        format: int32
        x-nullable: false
    description: RoleChildAssociation
    type: object
  List_RoleChildAssociation_:
    title: List<RoleChildAssociation>
    type: array
    items:
      $ref: '#/definitions/RoleChildAssociation'
  MembershipAuthorization:
    title: MembershipAuthorization
    properties:
      created:
        description: The date of creation.
        type: string
        format: date-time
        x-nullable: false
      isSystem:
        description: True if is system role
        type: boolean
        x-nullable: false
      moduleId:
        description: The module identifier.
        type: integer
        format: int32
        x-nullable: false
      moduleName:
        description: The module name.
        type: string
      objectType:
        description: The type of the object.
        type: string
      roleDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The localized role Display Name.
      roleId:
        description: The role identifier.
        type: integer
        format: int32
        x-nullable: false
      roleName:
        description: The role name.
        type: string
      scopeId:
        description: The scope identifier.
        type: string
    description: MembershipAuthorization
    type: object
  List_MembershipAuthorization_:
    title: List<MembershipAuthorization>
    type: array
    items:
      $ref: '#/definitions/MembershipAuthorization'
  MembershipSettings:
    title: MembershipSettings
    properties:
      userManagementEnabled:
        description: Determine if modification is user management is enabled.
        type: boolean
        x-nullable: false
    description: MembershipSettings
    type: object
  PaymentProviderInfos:
    title: PaymentProviderInfos
    properties:
      paymentProviders:
        description: the list of payment providers information.
        type: array
        items:
          $ref: '#/definitions/PaymentProviderInfo'
    description: PaymentProviderInfos
    type: object
  PaymentProviderInfo:
    title: PaymentProviderInfo
    properties:
      description:
        description: the description for this provider
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name for this provider
      id:
        description: the unique identifier for this provider
        type: string
        x-nullable: false
      implementationTypeName:
        description: the implementation type name of this provider
        type: string
      isActive:
        description: a value indicating whether this provider is currently enabled and can be used
        type: boolean
        x-nullable: false
      isDefaultPaymentMethodSupported:
        description: a value indicating whether default payment method is supported for the payment provider
        type: boolean
        x-nullable: false
      isRefreshOperationSupported:
        description: a value indicating whether refresh operation is supported
        type: boolean
        x-nullable: false
      name:
        description: the name for this provider
        type: string
      supportedCultureIds:
        description: the supported culture ids
        type: string
      supportedCurrencyIds:
        description: the supported currency ids
        type: string
      supportedPaymentMethodTypeIds:
        description: the supported PaymentMethodTypeIds
        type: string
    description: PaymentProviderInfo
    type: object
  FulfillmentProvidersMetadata:
    title: FulfillmentProvidersMetadata
    properties:
      entityDefinitions:
        description: the list of entity definitions.
        type: array
        items:
          $ref: '#/definitions/EntityDefinition'
    description: FulfillmentProvidersMetadata
    type: object
  EntityDefinition:
    title: EntityDefinition
    properties:
      attributes:
        description: The list of attributes for the EntityTypeDefinition.
        type: array
        items:
          $ref: '#/definitions/AttributeDefinition'
      description:
        description: The description for the EntityTypeDefinition.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name given for the EntityTypeDefinition
      entityTypeName:
        description: The unique Overture name for the EntityTypeDefinition.
        type: string
      isBuiltIn:
        description: Whether the EntityTypeDefinition is built-in.
        type: boolean
        x-nullable: false
      isSharedEntity:
        description: Whether the EntityTypeDefinition is a shared entity.
        type: boolean
        x-nullable: false
    description: EntityDefinition
    type: object
  FulfillmentProviderInfos:
    title: FulfillmentProviderInfos
    properties:
      fulfillmentProviders:
        description: the list of fulfillment providers information.
        type: array
        items:
          $ref: '#/definitions/FulfillmentProviderInfo'
    description: FulfillmentProviderInfos
    type: object
  FulfillmentProviderInfo:
    title: FulfillmentProviderInfo
    properties:
      availableFulfillmentMethodTypes:
        description: the available fulfillment method types for this provider
        type: array
        items:
          type: string
          x-nullable: false
      description:
        description: the description for this provider
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name for this provider
      id:
        description: the unique identifier for this provider
        type: string
        x-nullable: false
      implementationTypeName:
        description: the implementation type name of this provider
        type: string
      isActive:
        description: a value indicating whether this provider is currently enabled and can be used
        type: boolean
        x-nullable: false
      name:
        description: the name for this provider
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag for this provider
      scopeId:
        description: the scope for this provider
        type: string
      taxCategoryId:
        description: the tax category identifier for this provider
        type: string
    description: FulfillmentProviderInfo
    type: object
  FulfillmentCarrierProviderInfos:
    title: FulfillmentCarrierProviderInfos
    properties:
      fulfillmentCarrierProviders:
        description: The list of carrier providers information.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierProviderInfo'
    description: FulfillmentCarrierProviderInfos
    type: object
  FulfillmentCarrierProviderInfo:
    title: FulfillmentCarrierProviderInfo
    properties:
      description:
        description: the description for this provider
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name for this provider
      id:
        description: the unique identifier for this provider
        type: string
        x-nullable: false
      implementationTypeName:
        description: the implementation type name of this provider
        type: string
      isActive:
        description: a value indicating whether this provider is currently enabled and can be used
        type: boolean
        x-nullable: false
      name:
        description: the name for this provider
        type: string
      scopeId:
        description: the scope for this provider
        type: string
      values:
        $ref: '#/definitions/PropertyBag'
        description: the property bag for this provider
    description: FulfillmentCarrierProviderInfo
    type: object
  GetProvidersResponse:
    title: GetProvidersResponse
    properties:
      providers:
        description: the list of providers information.
        type: array
        items:
          $ref: '#/definitions/Provider'
    description: GetProvidersResponse
    type: object
  Provider:
    title: Provider
    properties:
      description:
        description: The description of this provider
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display names of this provider
      id:
        description: The unique identifier of this provider
        type: string
        x-nullable: false
      implementationTypeName:
        description: The implementation type name of this provider
        type: string
      isActive:
        description: A value indicating whether this provider is currently active
        type: boolean
        x-nullable: false
      name:
        description: The name of this provider
        type: string
      scopeId:
        description: The scopeId of this provider
        type: string
      type:
        description: The provider type of this provider
        type: string
        enum:
          - Undefined
          - StoreLocator
          - Geolocation
          - PrintOrder
          - PrintShipment
          - OrderProcessing
          - Shipping
          - Payment
          - Tax
          - Rounding
          - TargetingContext
          - OrderNumberGenerator
          - RmaNumberGenerator
          - DigitalAssetManagement
          - DirectoryProvider
          - MembershipProvider
          - Inventory
          - Audit
          - SlotInstance
          - PriceCalculator
          - SearchPriceCalculator
          - Search
          - BlobStorage
          - ShipmentProcessingDate
          - ProductImportParser
          - DataExchange
          - ProductDataExchangeImport
          - ProductDataExchangeExport
          - ProductPriceDataExchangeImport
          - ProductPriceDataExchangeExport
          - MailProvider
          - NotificationProvider
          - OrderImportParser
          - PromotionLineItemValidator
          - PickingMissionNumberGenerator
          - FulfillmentCarrier
          - FulfillmentRouting
      values:
        $ref: '#/definitions/PropertyBag'
        description: the provider-specific values
    description: Provider
    type: object
  List_ValidationResult_:
    title: List<ValidationResult>
    type: array
    items:
      $ref: '#/definitions/ValidationResult'
  Report:
    title: Report
    properties:
      category:
        description: The category of the report
        type: string
      description:
        description: The description of the report
        type: string
      displayName:
        description: The display name of the report
        type: string
      name:
        description: The name of the report
        type: string
      reportId:
        description: The unique identifier of the report
        type: string
      reportType:
        description: The type of the report
        type: string
    description: Report
    type: object
  IEnumerable_Report_:
    title: IEnumerable<Report>
    type: array
    items:
      $ref: '#/definitions/Report'
  ReportParameter:
    title: ReportParameter
    properties:
      causesParametersRefresh:
        description: value that informs the UI to refresh all the parameters when this parameter changes
        type: boolean
        x-nullable: false
      defaultValues:
        description: default value(s)
        type: array
        items:
          type: string
      displayName:
        description: text to be display to the user
        type: string
      multiValue:
        description: behavior of a list
        type: boolean
        x-nullable: false
      name:
        description: internal name of the parameter
        type: string
      parameterType:
        description: value that informs the UI about the type of this parameter
        type: string
        enum:
          - String
          - DateTime
          - Boolean
          - Integer
          - Float
          - List
          - ListTypeahead
          - Scope
      required:
        description: required state of the parameter
        type: boolean
        x-nullable: false
      validValues:
        description: availables values for a list
        type: array
        items:
          $ref: '#/definitions/ReportParameterValue'
    description: ReportParameter
    type: object
  IEnumerable_ReportParameter_:
    title: IEnumerable<ReportParameter>
    type: array
    items:
      $ref: '#/definitions/ReportParameter'
  ReportPreview:
    title: ReportPreview
    properties:
      content:
        description: The first page of the report in PNG format
        type: string
        format: binary
        x-nullable: false
    description: ReportPreview
    type: object
  TaskInfo:
    title: TaskInfo
    properties:
      correlationId:
        description: The correlation id.
        type: string
        x-nullable: false
      created:
        description: The date at which the task was created
        type: string
        format: date-time
        x-nullable: false
      faultedReason:
        description: 'The reason why the task faulted, if relevant.'
        type: string
      inputArguments:
        $ref: '#/definitions/PropertyBag'
        description: Gets the property bag containing input arguments for this task.
      isSequential:
        description: Value indicating whether a task must be run as part of the specific sequence that the tasks were queued rather than being run at the same time.
        type: boolean
        x-nullable: false
      lastModified:
        description: The date at which the task was modified
        type: string
        format: date-time
        x-nullable: false
      logEntriesCount:
        description: The number of log entries.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: The task name
        type: string
      outputArguments:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing output arguments for this task.
      requester:
        description: The user who requested the task
        type: string
      resultBlobUrl:
        description: The url to a a resource containing the result of the task execution
        type: string
      retryCount:
        description: Gets or sets the number of retries to execute the task or resuming a bookmark.
        type: integer
        format: int32
        x-nullable: false
      sequenceGroup:
        description: The name to identify the sequence that this task is part of. Tasks that must execute in sequence must share the same SequenceGroup
        type: string
      sequenceNumber:
        description: The number of the task in the sequence it is part of.
        type: integer
        format: int64
      sequenceQuota:
        description: Value indicating what is the expected maximum sequence count.
        type: integer
        format: int32
      status:
        description: The task current status
        type: string
        enum:
          - Created
          - WaitingToRun
          - Running
          - RanToCompletion
          - Canceled
          - Faulted
          - Idle
          - WaitingToCancel
          - Ignored
          - QueuedForSequence
          - IdleAfterErrorRecovery
          - WaitingToRetry
          - IdleAfterFault
      taskId:
        description: The unique Id for the task
        type: string
        x-nullable: false
      type:
        description: The type of the current task
        type: string
      workflowActivityType:
        description: Gets or sets the type of the workflow activity.
        type: string
      workflowXamlPath:
        description: Gets or sets the relative workflow xaml path.
        type: string
    description: TaskInfo
    type: object
  IEnumerable_ReportExportType_:
    title: IEnumerable<ReportExportType>
    type: array
    items:
      type: string
      x-nullable: false
  SearchQuery:
    title: SearchQuery
    properties:
      id:
        description: Id of the Search query
        type: string
        x-nullable: false
      scopeId:
        description: Scope of the Search query
        type: string
      name:
        description: Name of the search query
        type: string
      category:
        description: Category of the search query
        type: string
      queryType:
        description: The type of the search query
        type: string
        enum:
          - Category
          - Merchandising
          - ProductSet
      supportedCultures:
        description: 'List of all supported cultures of the search query. If the query is auto-localizable, contains the list of the catalog supported cultures'
        type: array
        items:
          type: string
      supportsAllCulturesInCatalog:
        description: True if the query supports all the cultures of the catalog
        type: boolean
        x-nullable: false
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      queryData:
        description: The data used to build a search request
        type: array
        items:
          $ref: '#/definitions/SearchQueryData'
    description: SearchQuery
    type: object
  FindSearchQueriesResult:
    title: FindSearchQueriesResult
    properties:
      searchQueries:
        description: List of Search Queries found
        type: array
        items:
          $ref: '#/definitions/SearchQuery'
      count:
        description: Amount of results found
        type: integer
        format: int32
        x-nullable: false
    description: FindSearchQueriesResult
    type: object
  TemplateVariable:
    title: TemplateVariable
    required:
      - id
      - scopeId
      - name
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      scopeId:
        description: The scope in which the entity is.
        type: string
      created:
        description: The date that this entity was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: A value indicating who created this entity.
        type: string
      description:
        description: The template variable's description.
        type: string
      lastModified:
        description: The date that this entity was last modified.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: A value indicating who last modified this entity.
        type: string
      name:
        description: The template variable's name.
        type: string
      value:
        $ref: '#/definitions/LocalizedString'
        description: The template variable's value.
    description: TemplateVariable
    type: object
  Template:
    title: Template
    required:
      - id
      - name
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      contents:
        description: The list of Template Content associated to the Template
        type: array
        items:
          $ref: '#/definitions/TemplateContent'
      created:
        description: The template creation date
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The template creator
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The template description
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The template display name
      isActive:
        description: The template active flag
        type: boolean
        x-nullable: false
      lastModified:
        description: The template latest modification date
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The template latest editor
        type: string
      name:
        description: The template name
        type: string
      scopeId:
        description: The template scope id
        type: string
      type:
        description: The template type
        type: string
        enum:
          - Unknown
          - Email
          - Shipment
    description: Template
    type: object
  List_TemplateVariable_:
    title: List<TemplateVariable>
    type: array
    items:
      $ref: '#/definitions/TemplateVariable'
  List_Template_:
    title: List<Template>
    type: array
    items:
      $ref: '#/definitions/Template'
  FindUsersByNameResult:
    title: FindUsersByNameResult
    properties:
      moreUsersAvailable:
        description: If there are more users available than the Users list
        type: boolean
        x-nullable: false
      totalResults:
        description: Shows the total number of users matching the provided name
        type: integer
        format: int32
        x-nullable: false
      users:
        description: The list of user
        type: array
        items:
          $ref: '#/definitions/User'
    description: FindUsersByNameResult
    type: object
  List_String_:
    title: List<String>
    type: array
    items:
      type: string
  ResetUserPasswordResult:
    title: ResetUserPasswordResult
    properties:
      resetUserPasswordMode:
        description: the ResetUserPasswordMode
        type: string
        enum:
          - WithoutTemporaryPassword
          - WithTemporaryPassword
      temporaryPassword:
        description: The list of user
        type: string
    description: ResetUserPasswordResult
    type: object
  List_Group_:
    title: List<Group>
    type: array
    items:
      $ref: '#/definitions/Group'
  ProductDefinition:
    title: ProductDefinition
    properties:
      allowPriceLists:
        description: Whether the entity can have list prices associated to it
        type: boolean
        x-nullable: false
      description:
        description: The description (non multilingual) of the entity definition
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: A UI friendly name for the definition. It is multilingual
      name:
        description: The name (business key) of the definition
        type: string
      productType:
        description: The type of entity for which the definition applies (Product or Category)
        type: string
        enum:
          - Product
          - Category
      properties:
        description: The non-grouped properties that are assigned to the definition
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinition'
      propertyGroups:
        description: The groups containing properties that are assigned to the definition
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinitionGroup'
      sequenceNumber:
        description: A number defining the order in which the definition appears in the list
        type: integer
        format: int32
        x-nullable: false
      variantProperties:
        description: 'The list of attributes assigned to the definition allowing Variant of a product. An empty collection means that variants are not allowedOnly available for a Product definition, not a Category'
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinition'
    description: ProductDefinition
    type: object
  ProductPropertyDefinition:
    title: ProductPropertyDefinition
    properties:
      dataType:
        description: The data type of the value saved in the attribute
        type: string
        enum:
          - Number
          - Boolean
          - Text
          - DateTime
          - Decimal
          - Currency
          - Lookup
          - RichText
      defaultValue:
        $ref: '#/definitions/Object'
        description: What is the default value given to the attribute
      description:
        description: A description explaining the purpose of the attribute. Not multilingual
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: A UI friendly name for the attribute. It is multilingual
      displayOrder:
        description: A number defining in what order the attribute will be sort in the list of attributes
        type: integer
        format: int32
        x-nullable: false
      groupName:
        description: The name (business key) of the group associated to the attribute
        type: string
      includeInAllCategoryDefinition:
        description: Whether to automatically include this attribute in every category definition
        type: boolean
        x-nullable: false
      includeInAllProductDefinition:
        description: Whether to automatically include this attribute in every product definitio
        type: boolean
        x-nullable: false
      includeInAllVariantDefinition:
        description: Whether to automatically include this attribute in every variant definition
        type: boolean
        x-nullable: false
      isFacettableAdmin:
        description: Whether the attribute is facettable when admin.
        type: boolean
        x-nullable: false
      isFacettableWeb:
        description: Whether the attribute is facettable when web.
        type: boolean
        x-nullable: false
      isHiddenInOrchestrator:
        description: Whether the attribute is hidden in the orchestrator
        type: boolean
        x-nullable: false
      isKeyVariant:
        description: Whether the attribute is a key for variant.
        type: boolean
        x-nullable: false
      isRequired:
        description: Whether a value for the attribute is required
        type: boolean
        x-nullable: false
      isSystem:
        description: Whether the attribute is a system defined attribute or custom user defined
        type: boolean
        x-nullable: false
      isVariant:
        description: Whether the attribute is a variant.
        type: boolean
        x-nullable: false
      isVariantGroup:
        description: Whether the attribute is a group for variant.
        type: boolean
        x-nullable: false
      keyVariantOrder:
        description: The Order of the Variant attribute key.
        type: integer
        format: int32
      localizable:
        description: 'Whether the attribute can have multiple values, one per culture'
        type: boolean
        x-nullable: false
      lookupDefinition:
        $ref: '#/definitions/ProductLookupDefinition'
        description: The lookup definition of the attribute
      maximumValue:
        $ref: '#/definitions/Object'
        description: A maximal value for the attribute. Serves as a restriction
      maxMultiplicity:
        description: Max multiplicity of the attribute.
        type: string
      minimumValue:
        $ref: '#/definitions/Object'
        description: A minimal value for the attribute. Serves as a restriction
      propertyName:
        description: 'The name (business key, un-editable) of the attribute'
        type: string
    description: ProductPropertyDefinition
    type: object
  ProductLookupDefinition:
    title: ProductLookupDefinition
    properties:
      allowMultipleSelection:
        description: The lookup definition of the attribute
        type: boolean
        x-nullable: false
      lookupName:
        description: The lookup definition of the attribute
        type: string
    description: ProductLookupDefinition
    type: object
  ProductPropertyDefinitionGroup:
    title: ProductPropertyDefinitionGroup
    properties:
      description:
        description: A description for the group. Not multilingual
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI friendly name of the group. It is multilingual
      displayOrder:
        description: A number representing the order in which the group will be displayed in the list of groups
        type: integer
        format: int32
        x-nullable: false
      isSystem:
        description: Whether the group is a system (un-editable) group
        type: boolean
        x-nullable: false
      name:
        description: The name (unchangeable) of the group (business key)
        type: string
      properties:
        description: The list of attributes associated with the group
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinition'
    description: ProductPropertyDefinitionGroup
    type: object
  Lookup:
    title: Lookup
    properties:
      description:
        description: The description of this lookup
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'The display name given for the Lookup.  It is kept as a multilingual representation, allowing the display of a language friendly version of the name.'
      isActive:
        description: If the lookup is active. Lookup can not be used after being deactivated but previous references are not deleted.
        type: boolean
        x-nullable: false
      isSystem:
        description: If the lookup value is part of the base system.
        type: boolean
        x-nullable: false
      lookupName:
        description: The name for the Lookup. This is the business key. Should be unique and not null.
        type: string
      values:
        description: The list of values available for the Lookup.
        type: array
        items:
          $ref: '#/definitions/LookupValue'
    description: Lookup
    type: object
  ProductPropertyDefinitionGroupQueryResult:
    title: ProductPropertyDefinitionGroupQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinitionGroup'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: ProductPropertyDefinitionGroupQueryResult
    type: object
  List_EntityDefinition_:
    title: List<EntityDefinition>
    type: array
    items:
      $ref: '#/definitions/EntityDefinition'
  List_Lookup_:
    title: List<Lookup>
    type: array
    items:
      $ref: '#/definitions/Lookup'
  Country:
    title: Country
    required:
      - id
      - isoCode
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      isoCode:
        description: Two letter code that identifies Country uniquely
        type: string
      isSupported:
        description: The indicator specifying if the Country is supported by the merchant
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The official political name given for the Country
      phoneRegex:
        description: The Country's telephone validation regular expression
        type: string
      postalCodeRegex:
        description: The Country's postal code validation regular expression
        type: string
      regions:
        description: The list of Region associated to the Country
        type: array
        items:
          $ref: '#/definitions/Region'
      sortOrder:
        description: The number used for ordering the Country in a list
        type: integer
        format: int32
        x-nullable: false
    description: Country
    type: object
  List_Country_:
    title: List<Country>
    type: array
    items:
      $ref: '#/definitions/Country'
  List_Region_:
    title: List<Region>
    type: array
    items:
      $ref: '#/definitions/Region'
  List_Culture_:
    title: List<Culture>
    type: array
    items:
      $ref: '#/definitions/Culture'
  CultureList:
    title: CultureList
    properties:
      cultures:
        description: The list of culture ISO codes
        type: array
        items:
          $ref: '#/definitions/Culture'
    description: CultureList
    type: object
  TimeZone:
    title: TimeZone
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      baseUtcOffset:
        description: The time difference between the current time zone's standard time and Coordinated Universal Time (UTC)
        type: number
        format: double
        x-nullable: false
      displayName:
        description: The general display name that represents the time zone
        type: string
      supportsDaylightSavingTime:
        description: Whether the time zone has any daylight saving time rules
        type: boolean
        x-nullable: false
    description: TimeZone
    type: object
  List_TimeZone_:
    title: List<TimeZone>
    type: array
    items:
      $ref: '#/definitions/TimeZone'
  UtcOffsetForTimeZone:
    title: UtcOffsetForTimeZone
    properties:
      offset:
        description: The offset of a timezone from UTC
        type: string
        x-nullable: false
    description: UtcOffsetForTimeZone
    type: object
  GetCurrenciesResponse:
    title: GetCurrenciesResponse
    properties:
      currencies:
        description: The list of the currencies.
        type: array
        items:
          $ref: '#/definitions/Currency'
    description: GetCurrenciesResponse
    type: object
  GetTargetingMetadataResponse:
    title: GetTargetingMetadataResponse
    properties:
      targetingItemsList:
        description: A list of TargetingItem.
        type: array
        items:
          $ref: '#/definitions/TargetingItem'
    description: GetTargetingMetadataResponse
    type: object
  TargetingItem:
    title: TargetingItem
    properties:
      displayName:
        description: The display name of the item.
        type: string
    description: TargetingItem
    type: object
  List_Scope_:
    title: List<Scope>
    type: array
    items:
      $ref: '#/definitions/Scope'
  VariantSearchConfiguration:
    title: VariantSearchConfiguration
    properties:
      groupingVariantAttributeId:
        description: the grouping attribute to be used with the specified search option.
        type: string
      productDefinitionName:
        description: the product definition name to apply this configuration.
        type: string
      scopeId:
        description: the scope for this configuration.
        type: string
      searchOption:
        description: the search option for the specified product definition.
        type: string
        enum:
          - SingleRecordPerProduct
          - GroupByKvaValue
          - SingleRecordPerVariant
          - GroupByCustomAttribute
    description: VariantSearchConfiguration
    type: object
  List_VariantSearchConfiguration_:
    title: List<VariantSearchConfiguration>
    type: array
    items:
      $ref: '#/definitions/VariantSearchConfiguration'
  SearchResult:
    title: SearchResult
    properties:
      correctedSearchTerms:
        description: the auto-corrected search terms used to return values.
        type: string
      documents:
        description: a list of Document matching the search request.
        type: array
        items:
          $ref: '#/definitions/Document'
      facets:
        description: a list of Facet corresponding to the search request.
        type: array
        items:
          $ref: '#/definitions/Facet'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      startIndex:
        description: the index of the first record in the list from which to start paging.
        type: integer
        format: int32
        x-nullable: false
      suggestions:
        description: a list of Suggestion that could return more meaningful results for the search term entered.
        type: array
        items:
          $ref: '#/definitions/Suggestion'
      totalCount:
        description: 'the total number of records matching the search request, irrespective of the page.'
        type: integer
        format: int64
        x-nullable: false
    description: SearchResult
    type: object
  Document:
    title: Document
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
    description: Document
    type: object
  Facet:
    title: Facet
    properties:
      count:
        description: Number of documents matching the facet value.
        type: integer
        format: int32
        x-nullable: false
      dataType:
        description: the type of the data used in the ranges.
        type: string
      endValue:
        description: the end value of all the ranges.
        type: string
      facetType:
        description: Gets the Facet Type.
        type: string
        enum:
          - Unspecified
          - Field
          - Range
          - Query
      fieldName:
        description: the name which is used to refer to this facet.
        type: string
      gapSize:
        description: the size of the gap of all the ranges.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      query:
        description: the query.
        type: string
      startValue:
        description: the start value of all the ranges.
        type: string
      title:
        description: the title.
        type: string
      values:
        description: the different values available for this facet.
        type: array
        items:
          $ref: '#/definitions/FacetValue'
    description: Facet
    type: object
  FacetValue:
    title: FacetValue
    properties:
      count:
        description: the number of documents matching this range facet value.
        type: integer
        format: int32
        x-nullable: false
      displayName:
        description: the facet display name.
        type: string
      maximumValue:
        description: the maximum value of the range facet value.
        type: string
      minimumValue:
        description: the minimum of the range facet value.
        type: string
      value:
        description: the facet value.
        type: string
    description: FacetValue
    type: object
  Suggestion:
    title: Suggestion
    properties:
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      title:
        description: the title of the suggestion.
        type: string
    description: Suggestion
    type: object
  ProductSearchResult:
    title: ProductSearchResult
    properties:
      correctedSearchTerms:
        description: the auto-corrected search terms used to return values.
        type: string
      documents:
        description: a list of Document matching the search request.
        type: array
        items:
          $ref: '#/definitions/ProductDocument'
      facets:
        description: a list of Facet corresponding to the search request.
        type: array
        items:
          $ref: '#/definitions/Facet'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      startIndex:
        description: the index of the first record in the list from which to start paging.
        type: integer
        format: int32
        x-nullable: false
      suggestions:
        description: a list of Suggestion that could return more meaningful results for the search term entered.
        type: array
        items:
          $ref: '#/definitions/Suggestion'
      totalCount:
        description: 'the total number of records matching the search request, irrespective of the page.'
        type: integer
        format: int64
        x-nullable: false
    description: ProductSearchResult
    type: object
  ProductDocument:
    title: ProductDocument
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      catalogId:
        description: the catalog identifier.
        type: string
      currentPrice:
        description: the current price according to the date sent in the request.
        type: number
        format: double
      defaultPrice:
        description: '[Obsolete] the default price.'
        type: number
        format: double
      entityPricing:
        $ref: '#/definitions/EntityPricing'
        description: 'the pricing for the document as a single entity. If the document represent a group of entities, this property is null'
      groupPricing:
        $ref: '#/definitions/GroupPricing'
        description: 'the pricing for the document as a group of entities. If the document represent a single entity, this property is null'
      inventoryLocationStatuses:
        description: the inventory statuses in each inventory location sent in the request.
        type: array
        items:
          $ref: '#/definitions/InventoryItemAvailability'
      listPrice:
        description: '[Obsolete] the list price (default price).'
        type: number
        format: double
      price:
        description: the current price according to the date sent in the request.
        type: number
        format: double
      productId:
        description: the product identifier.
        type: string
      regularPrice:
        description: 'The current regular price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      sku:
        description: the sku.
        type: string
    description: ProductDocument
    type: object
  EntityPricing:
    title: EntityPricing
    properties:
      currentPrice:
        description: the current price. This price is the one that will be applied in the cart
        type: number
        format: double
      currentPricePriceList:
        $ref: '#/definitions/PriceListSummary'
        description: the price list information for the current price
      regularPrice:
        description: the regular price. This price is the one from the Regular price list
        type: number
        format: double
    description: EntityPricing
    type: object
  PriceListSummary:
    title: PriceListSummary
    properties:
      priceListCategory:
        description: the price list category
        type: string
      priceListId:
        description: the price list name
        type: string
      priceListType:
        description: the type of the price list
        type: string
    description: PriceListSummary
    type: object
  GroupPricing:
    title: GroupPricing
    properties:
      currentPricePriceLists:
        description: the information about all the price lists found for the current price in this group
        type: array
        items:
          $ref: '#/definitions/PriceListSummary'
      fromCurrentPrice:
        description: the starting (minimum) current price of this group
        type: number
        format: double
      fromRegularPrice:
        description: the starting (minimum) regular price of this group
        type: number
        format: double
      toCurrentPrice:
        description: the highest (maximum) current price of this group
        type: number
        format: double
      toRegularPrice:
        description: the highest (maximum) regular price of this group
        type: number
        format: double
    description: GroupPricing
    type: object
  InventoryItemAvailability:
    title: InventoryItemAvailability
    properties:
      date:
        description: The date
        type: string
        format: date-time
        x-nullable: false
      identifier:
        $ref: '#/definitions/InventoryItemIdentifier'
        description: The inventory item identifier
      statuses:
        description: The statuses
        type: array
        items:
          $ref: '#/definitions/InventoryItemStatus'
    description: InventoryItemAvailability
    type: object
  InventoryItemStatus:
    title: InventoryItemStatus
    properties:
      quantity:
        description: The quantity
        type: number
        format: double
      status:
        description: The quantified information of this item
        type: string
        enum:
          - InStock
          - OutOfStock
          - PreOrder
          - BackOrder
    description: InventoryItemStatus
    type: object
  SearchQueryResult:
    title: SearchQueryResult
    properties:
      result:
        $ref: '#/definitions/SearchResult'
        description: The result generated by the search request
      selectedFacets:
        description: The selected facets generated by the SearchQuery
        type: array
        items:
          $ref: '#/definitions/SelectedFacet'
    description: SearchQueryResult
    type: object
  SelectedFacet:
    title: SelectedFacet
    properties:
      facetName:
        description: Name of the facet
        type: string
      values:
        description: Selected values for the facet
        type: array
        items:
          type: string
    description: SelectedFacet
    type: object
  SearchAvailableProductsByCategoryResponse:
    title: SearchAvailableProductsByCategoryResponse
    properties:
      correctedSearchTerms:
        description: the auto-corrected search terms used to return values.
        type: string
      documents:
        description: a list of Document matching the search request.
        type: array
        items:
          $ref: '#/definitions/ProductDocument'
      facets:
        description: a list of Facet corresponding to the search request.
        type: array
        items:
          $ref: '#/definitions/Facet'
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      startIndex:
        description: the index of the first record in the list from which to start paging.
        type: integer
        format: int32
        x-nullable: false
      suggestions:
        description: a list of Suggestion that could return more meaningful results for the search term entered.
        type: array
        items:
          $ref: '#/definitions/Suggestion'
      totalCount:
        description: 'the total number of records matching the search request, irrespective of the page.'
        type: integer
        format: int64
        x-nullable: false
      selectedFacets:
        description: The selected facets generated by the SearchQuery
        type: array
        items:
          $ref: '#/definitions/SelectedFacet'
    description: SearchAvailableProductsByCategoryResponse
    type: object
  TaskExecutionLogEntry:
    title: TaskExecutionLogEntry
    properties:
      executionTime:
        description: The time of execution at which the entry was made
        type: string
        format: date-time
        x-nullable: false
      id:
        description: The unique Id of the log entry
        type: string
      logLevel:
        description: The TaskLogLevel of the task.
        type: string
        enum:
          - Info
          - Warning
          - Error
      message:
        description: The message logged in the entry
        type: string
      taskId:
        description: Get or set the unique Guid task identifier
        type: string
    description: TaskExecutionLogEntry
    type: object
  List_TaskExecutionLogEntry_:
    title: List<TaskExecutionLogEntry>
    type: array
    items:
      $ref: '#/definitions/TaskExecutionLogEntry'
  List_TaskInfo_:
    title: List<TaskInfo>
    type: array
    items:
      $ref: '#/definitions/TaskInfo'
  ScheduledTaskInfo:
    title: ScheduledTaskInfo
    properties:
      activityTypeNameOrWorkflowPath:
        description: Gets or sets the scheduled task's activity type name or the workflow path
        type: string
      group:
        description: the affinity group of the scheduled job.
        type: string
      inputs:
        $ref: '#/definitions/IDictionary_String_Object_'
        description: the task input properties.
      name:
        description: the name of the scheduled job.
        type: string
      triggers:
        description: the task job triggers.
        type: array
        items:
          $ref: '#/definitions/TriggerInfo'
      type:
        description: 'Gets or sets the scheduled task''s type: ActivityClassBased or WorkflowFileBased'
        type: string
        enum:
          - ActivityClassBased
          - WorkflowFileBased
    description: ScheduledTaskInfo
    type: object
  IDictionary_String_Object_:
    title: 'IDictionary<String,Object>'
    additionalProperties:
      $ref: '#/definitions/Object'
    description: 'IDictionary<String,Object>'
    type: object
  TriggerInfo:
    title: TriggerInfo
    properties:
      cronExpression:
        description: the cron expression string.
        type: string
      description:
        description: the trigger description.
        type: string
      group:
        description: the trigger affinity group.
        type: string
      name:
        description: the trigger name.
        type: string
      timeZone:
        description: the cron expression time zone.
        type: string
      nextFireTimeUtc:
        description: the next time at which the trigger is scheduled to fire.
        type: string
        format: date-time
        x-nullable: false
    description: TriggerInfo
    type: object
  List_ScheduledTaskInfo_:
    title: List<ScheduledTaskInfo>
    type: array
    items:
      $ref: '#/definitions/ScheduledTaskInfo'
  RunningScheduledTaskInfo:
    title: RunningScheduledTaskInfo
    properties:
      fireTimeUtc:
        description: the actual time the trigger fired.
        type: string
        format: date-time
        x-nullable: false
      group:
        description: the affinity group of the scheduled job.
        type: string
      inputs:
        $ref: '#/definitions/IDictionary_String_Object_'
        description: the task input properties.
      name:
        description: the name of the scheduled job.
        type: string
      schedulerInstanceId:
        description: the identifier of the scheduler instance running the job.
        type: string
      schedulerName:
        description: the name of the scheduler running the job.
        type: string
      taskId:
        description: the identifier of the executing task.
        type: string
        x-nullable: false
      trigger:
        $ref: '#/definitions/TriggerInfo'
        description: the trigger which fired the job.
    description: RunningScheduledTaskInfo
    type: object
  List_RunningScheduledTaskInfo_:
    title: List<RunningScheduledTaskInfo>
    type: array
    items:
      $ref: '#/definitions/RunningScheduledTaskInfo'
  AuthorizedScope:
    title: AuthorizedScope
    required:
      - id
    properties:
      children:
        description: The children of the Scope
        type: array
        items:
          $ref: '#/definitions/AuthorizedScope'
      childrenIds:
        description: The list of the childrend ids
        type: array
        items:
          type: string
      currency:
        $ref: '#/definitions/Currency'
        description: 'Currency for the scope. e.g.: CAD or USD'
      currencyIso:
        description: 'Currency iso code for the scope. e.g.: CAD or USD'
        type: string
      defaultCulture:
        description: 'Default culture for the scope. e.g.: en-US'
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The Description for the scope to help the consumer understand what the Scope is for.
      endDate:
        description: End date for the scope
        type: string
        format: date-time
      id:
        description: 'The unique identifier of the Scope. '
        type: string
      isActive:
        description: Whether or not the Scope is active
        type: boolean
        x-nullable: false
      isAuthorizedScope:
        description: Whether or not the Scope is authorized for the user
        type: boolean
        x-nullable: false
      isDefaultScope:
        description: Whether or not the Scope is the default one for the user
        type: boolean
        x-nullable: false
      name:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the Scope that will be primarily used for Display purpose.
      parentScopeId:
        description: The parent scope id
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this entity.
      sequenceNumber:
        description: The number used for ordering the Scope in a list
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: Start date for the scope
        type: string
        format: date-time
      type:
        description: The ScopeType of the Scope
        type: string
        enum:
          - Global
          - Sale
          - Dependant
          - Virtual
    description: AuthorizedScope
    type: object
  List_Address_:
    title: List<Address>
    type: array
    items:
      $ref: '#/definitions/Address'
  CustomerStoresAssociations:
    title: CustomerStoresAssociations
    properties:
      otherStores:
        description: The customer's associated stores that are not preferred.
        type: array
        items:
          $ref: '#/definitions/Store'
      preferredStore:
        $ref: '#/definitions/Store'
        description: The customer's preferred store.
    description: CustomerStoresAssociations
    type: object
  Store:
    title: Store
    properties:
      created:
        description: the date the Store was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the Store.
        type: string
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the store delivery service opening hours. This value is not loaded by default.
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the store. Use this to provide internal (admin) users information about this store.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the store. This is a multilingual value.
      email:
        description: the email of the store. This could be a specific person's address or a general customerService address depending on the store.
        type: string
      faxExtension:
        description: the extension for the fax number of the organization.
        type: string
      faxNumber:
        description: the fax number of the store.
        type: string
      fulfillmentLocation:
        $ref: '#/definitions/FulfillmentLocation'
        description: the store's fulfillment location information.
      id:
        description: the unique identifier of the Store.
        type: string
        x-nullable: false
      isActive:
        description: 'Is this store currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the store to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      lastModified:
        description: The date of the last modification to the Store.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the Store.
        type: string
      manager:
        description: the full name of the manager of the store.
        type: string
      name:
        description: the name of the store. Each store must have a name that unique in the system.
        type: string
      number:
        description: a business centric number to identify the store that could be used to link the store to external data.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the store operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the store.
        type: string
      phoneNumber:
        description: the telephone number of the store.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the store pickup opening hours. This value is not loaded by default.
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      scopeId:
        description: the scope associated to the store. This value is not loaded by default.
        type: string
      storeSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the store opening hours. This value is not loaded by default.
      storeType:
        description: Indicates if this is a physical or virtual store.
        type: string
        enum:
          - Physical
          - Virtual
    description: Store
    type: object
  FulfillmentLocation:
    title: FulfillmentLocation
    required:
      - id
    properties:
      addresses:
        description: The fulfillment location's addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      addressIds:
        description: the unique identifiers of the addresses.
        type: array
        items:
          type: string
          x-nullable: false
      created:
        description: the date the Store/Warehouse was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the fulfillment location.
        type: string
      deliveryScheduleManaged:
        description: a value indicating whether this fulfillment location manage his own schedule for delivery
        type: boolean
        x-nullable: false
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The display name of the fulfillment location. This is a multilingual value.
      id:
        description: The unique identifier of the fulfillment location.
        type: string
        x-nullable: false
      inventoryLocationId:
        description: the inventory location identifier
        type: string
      inventoryProviderId:
        description: the inventory provider identifier to use for this fulfillment location
        type: string
      isActive:
        description: The state of the fulfillment location
        type: boolean
        x-nullable: false
      isAtpEnabled:
        description: a value indicating whether inventory availability to promise is enabled
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: a value indicating whether this fulfillment location has inventory enabled
        type: boolean
        x-nullable: false
      isPickUpLocation:
        description: a value indicating whether this store is a pickup location.
        type: boolean
        x-nullable: false
      lastModified:
        description: The date of the last modification to the fulfillment location.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the Store or Warehouse.
        type: string
      name:
        description: The name of the fulfillment location
        type: string
      number:
        description: A business centric number to identify the fulfillment location
        type: string
      pickUpScheduleManaged:
        description: a value indicating whether this fulfillment location manage his own schedule for pickup
        type: boolean
        x-nullable: false
      schedules:
        description: The list of 'Schedule' of the fulfillment location.
        type: array
        items:
          $ref: '#/definitions/FulfillmentSchedule'
      supportDelivery:
        description: a value indicating whether this store supports delivery for order fulfillment.
        type: boolean
        x-nullable: false
      supportedFulfillmentMethodTypes:
        $ref: '#/definitions/ICollection_FulfillmentMethodType_'
        description: Available types of fulfillment methods for the fulfillment location.
      supportPickUp:
        description: a value indicating whether this store supports pick-up for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipping:
        description: a value indicating whether this store supports shipping for order fulfillment.
        type: boolean
        x-nullable: false
      supportShipToStore:
        description: a value indicating whether this store supports ship to store for order fulfillment.
        type: boolean
        x-nullable: false
      timeZone:
        description: the timezone in which the schedule hours were set.
        type: string
      type:
        description: The type of the fulfillment location.
        type: string
        enum:
          - Unspecified
          - Store
          - Warehouse
    description: FulfillmentLocation
    type: object
  ICollection_FulfillmentMethodType_:
    title: ICollection`1
    properties: {}
    description: ICollection<FulfillmentMethodType>
    type: object
  Organization:
    title: Organization
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      addresses:
        description: the organization addresses.
        type: array
        items:
          $ref: '#/definitions/Address'
      addressesIds:
        description: the organization address identifiers.
        type: array
        items:
          type: string
          x-nullable: false
      created:
        description: the date the organization was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the organization.
        type: string
      description:
        description: the description of the organization.
        type: string
      email:
        description: the email of the organization.
        type: string
      faxExtension:
        description: the fax extension of the organization.
        type: string
      faxNumber:
        description: the fax number of the organization.
        type: string
      isActive:
        description: whether or not this organization is currently active.
        type: boolean
        x-nullable: false
      lastModified:
        description: the date of the last modification to the organization.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the organization.
        type: string
      manager:
        description: the full name of the organization manager
        type: string
      name:
        description: the name of the organization. Must be unique.
        type: string
      phoneExtension:
        description: the phone extension of the organization.
        type: string
      phoneNumber:
        description: the phone number of the organization.
        type: string
      tradingPartnerNumber:
        description: the trading partner number of the organization.
        type: string
    description: Organization
    type: object
  List_Organization_:
    title: List<Organization>
    type: array
    items:
      $ref: '#/definitions/Organization'
  CustomerQueryResult:
    title: CustomerQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Customer'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: CustomerQueryResult
    type: object
  Note:
    title: Note
    properties:
      content:
        description: The content of the note.
        type: string
      created:
        description: The date the note was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the user who created the note
        type: string
      parentEntityName:
        description: The parent entity name of the note.
        type: string
      parentId:
        description: The parent identifier of the note.
        type: string
    description: Note
    type: object
  List_Note_:
    title: List<Note>
    type: array
    items:
      $ref: '#/definitions/Note'
  PaymentProfile:
    title: PaymentProfile
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      additionalData:
        description: the additional data specific to payment provider.
        type: string
      externalIds:
        description: the list of unique identifier returned by external provider related to the payment profile.
        type: string
      orderLocationId:
        description: The store for wich the provider configuration is done.
        type: string
      providerName:
        description: the unique identifier of the provider related to the payment profile.
        type: string
      scopeId:
        description: the unique identifier of the scope belonging to the payment profile.
        type: string
    description: PaymentProfile
    type: object
  List_PaymentProfile_:
    title: List<PaymentProfile>
    type: array
    items:
      $ref: '#/definitions/PaymentProfile'
  OrderQueryResult:
    title: OrderQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/OrderItem'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: OrderQueryResult
    type: object
  OrderItem:
    title: OrderItem
    properties:
      billingCurrency:
        description: The currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      created:
        description: The date when the order as created.
        type: string
        format: date-time
        x-nullable: false
      customerEmail:
        description: The email of customer who made the order.
        type: string
      customerId:
        description: The customer id who made the order.
        type: string
      customerName:
        description: The complete name of the customer who made the order.
        type: string
      id:
        description: The id of the order.
        type: string
      messages:
        description: The execution messages when the order was post processed.
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      orderNumber:
        description: The order number.
        type: string
      orderStatus:
        description: The order status.
        type: string
      postProcessingExecutionResult:
        description: execution result of the order post processing.
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      scopeId:
        description: The scope id.
        type: string
      shipmentItems:
        description: The list of shipments for this order.
        type: array
        items:
          $ref: '#/definitions/ShipmentItem'
      source:
        description: The source of the order.
        type: string
      total:
        description: The total of the order.
        type: number
        format: double
        x-nullable: false
      validationResults:
        description: The validation results when the order was post processed.
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
    description: OrderItem
    type: object
  ShipmentItem:
    title: ShipmentItem
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      executionResult:
        description: The execution result of the shipment processing.
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      expectedDeliveryDate:
        description: The expected delivery date.
        type: string
        format: date-time
      fulfillmentLocationId:
        description: The fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentScheduledTimeBeginDate:
        description: The begin date and time scheduled for the fulfillment.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: The end date and time scheduled for the fulfillment.
        type: string
        format: date-time
      messages:
        description: The execution messages when the shipment was processed.
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      pickUpLocationId:
        description: The pick-up location identifier required when the selected shipping method type is ship to store; any value will be ignored otherwise.
        type: string
      shippingAddress:
        $ref: '#/definitions/Address'
        description: The address to use as destination for the shipment.
      validationResults:
        description: The validation results when the shipment was processed.
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
      slAs:
        type: array
        items:
          $ref: '#/definitions/OrderFulfillmentSLA'
    description: ShipmentItem
    type: object
  OrderFulfillmentSLA:
    title: OrderFulfillmentSLA
    properties:
      expirationDate:
        description: The time when the sla will expire.
        type: string
        format: date-time
        x-nullable: false
      expiryWarningTimeInMinutes:
        description: The expiry warning time in minutes.
        type: integer
        format: int32
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
      id:
        description: The fulfillment sla identifier.
        type: string
        x-nullable: false
      name:
        description: The name.
        type: string
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
    description: OrderFulfillmentSLA
    type: object
  List_PaymentMethod_:
    title: List<PaymentMethod>
    type: array
    items:
      $ref: '#/definitions/PaymentMethod'
  ScopeAssociation:
    title: ScopeAssociation
    properties:
      created:
        description: The date at which the association was created.
        type: string
        format: date-time
        x-nullable: false
      scopeName:
        description: The name (business key) of the Scope associated to the entity.
        type: string
    description: ScopeAssociation
    type: object
  List_ScopeAssociation_:
    title: List<ScopeAssociation>
    type: array
    items:
      $ref: '#/definitions/ScopeAssociation'
  CustomProfile:
    title: CustomProfile
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      entityTypeName:
        description: Entity type name.
        type: string
      isActive:
        description: Indicate whether this entity can be used in business processes or linked to a scope.
        type: boolean
        x-nullable: false
      name:
        description: Unique name given to identify the entity.
        type: string
      sequenceNumber:
        description: The sort order.
        type: integer
        format: int32
        x-nullable: false
    description: CustomProfile
    type: object
  GetCustomersByOrganizationQueryResult:
    title: GetCustomersByOrganizationQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/CustomerInfo'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: GetCustomersByOrganizationQueryResult
    type: object
  CustomerInfo:
    title: CustomerInfo
    required:
      - id
    properties:
      accountStatus:
        description: The current status (active/inactive/requires approval) of the customer account.
        type: string
        enum:
          - Active
          - Inactive
          - RequiresApproval
      addresses:
        description: The preferred address. (selected by business rule)
        type: array
        items:
          $ref: '#/definitions/AddressInfo'
      addressIds:
        description: The preferred address's Id. (selected by business rule)
        type: array
        items:
          type: string
          x-nullable: false
      created:
        description: The date the customer was created.
        type: string
        format: date-time
        x-nullable: false
      customerType:
        description: 'The type of customer (Registered, Guest).'
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
      email:
        description: The email associated to the customer.
        type: string
      firstName:
        description: The first name of the customer.
        type: string
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      isRecurringBuyer:
        description: A value indicating whether this customer is a recurring buyer.
        type: boolean
        x-nullable: false
      language:
        description: The preferred communication language of the customer.
        type: string
      lastActivityDate:
        description: The date where the customer last interacted with the system.
        type: string
        format: date-time
        x-nullable: false
      lastLoginDate:
        description: The date where the customer last logged in the e-commerce website.
        type: string
        format: date-time
        x-nullable: false
      lastModified:
        description: The date that the last modification was applied to the customer.
        type: string
        format: date-time
        x-nullable: false
      lastName:
        description: The last name of the customer.
        type: string
      lastOrderDate:
        description: The date at which the customer last order was created.
        type: string
        format: date-time
        x-nullable: false
      lastOrderItemsCount:
        description: The total quantity of items for the last order of the customer.
        type: integer
        format: int32
        x-nullable: false
      lastOrderLineItemsCount:
        description: the total quantity of line items for the last order of the customer.
        type: integer
        format: int32
        x-nullable: false
      lastOrderTotal:
        description: The total amount of the customer last order.
        type: number
        format: double
        x-nullable: false
      lastPasswordChanged:
        description: The date where the customer last changed his password.
        type: string
        format: date-time
        x-nullable: false
      phoneExtension:
        description: 'The extension, if any, for the telephone number of the customer.'
        type: string
      phoneNumber:
        description: The telephone number of the customer.
        type: string
    description: CustomerInfo
    type: object
  AddressInfo:
    title: AddressInfo
    properties:
      city:
        description: City of the address
        type: string
      countryCode:
        description: 2 letter country ISO code
        type: string
      id:
        description: Unique identifier
        type: string
        x-nullable: false
      isPreferredBilling:
        description: a boolean which specifies whether this address is the customer's preferred choice for Billing. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      isPreferredShipping:
        description: a boolean which specifies whether this address is the customer's preferred choice for Shipping. (Only applicable to Customer addresses)
        type: boolean
        x-nullable: false
      latitude:
        description: Latitude coordinate of the Address
        type: number
        format: double
      line1:
        description: First line of the address
        type: string
      line2:
        description: Second line of the address
        type: string
      longitude:
        description: Longitude coordinate of the address
        type: number
        format: double
      postalCode:
        description: Postal code of the address
        type: string
      regionCode:
        description: 2 letter region ISO code
        type: string
    description: AddressInfo
    type: object
  FindNearestStoresResult:
    title: FindNearestStoresResult
    properties:
      nearestStores:
        description: The nearest stores
        type: array
        items:
          $ref: '#/definitions/FindNearestStoreResult'
      totalCount:
        description: The total count of stores satisfying the request
        type: integer
        format: int32
        x-nullable: false
    description: FindNearestStoresResult
    type: object
  FindNearestStoreResult:
    title: FindNearestStoreResult
    properties:
      addressId:
        description: The store's address id
        type: string
        x-nullable: false
      distance:
        description: 'The distance between the store''s address and the location defined in the given request. Remark : The distance is in meters'
        type: number
        format: double
        x-nullable: false
      scopeId:
        description: The store's scope id
        type: string
      storeId:
        description: The store id
        type: string
        x-nullable: false
      storeName:
        description: The store name
        type: string
      storeNumber:
        description: The store number
        type: string
    description: FindNearestStoreResult
    type: object
  ValidateUserResponse:
    title: ValidateUserResponse
    properties:
      success:
        description: Indicates whether the user account was successfully validated
        type: boolean
        x-nullable: false
    description: ValidateUserResponse
    type: object
  LoginResponse:
    title: LoginResponse
    properties:
      success:
        description: Indicates whether the Login was successful.
        type: boolean
        x-nullable: false
    description: LoginResponse
    type: object
  ResetPasswordResponse:
    title: ResetPasswordResponse
    properties:
      success:
        description: Indicates whether the password was successfully reset.
        type: boolean
        x-nullable: false
      ticket:
        description: Ticket generated for the customer
        type: string
    description: ResetPasswordResponse
    type: object
  MembershipConfiguration:
    title: MembershipConfiguration
    properties:
      accountLockDownMinutes:
        description: The account lock down time (in minutes)
        type: integer
        format: int32
        x-nullable: false
      enablePasswordReset:
        description: Indicates whether the current membership provider is configured to allow customers to reset their passwords
        type: boolean
        x-nullable: false
      enablePasswordRetrieval:
        description: Indicates whether the current membership provider is configured to allow users to retrieve their passwords
        type: boolean
        x-nullable: false
      maxInvalidPasswordAttempts:
        description: The number of invalid password or password-answer attempts allowed before the membership user is locked out
        type: integer
        format: int32
        x-nullable: false
      minRequiredNonAlphanumericCharacters:
        description: The minimum number of special characters that must be present in a valid password
        type: integer
        format: int32
        x-nullable: false
      minRequiredPasswordLength:
        description: The minimum required length for a password
        type: integer
        format: int32
        x-nullable: false
      passwordAttemptWindow:
        description: The time window (in minutes) between which consecutive failed attempts to provide a valid password or password answer are tracked
        type: integer
        format: int32
        x-nullable: false
      passwordFailedAttemptDelaySeconds:
        description: The delay to apply on a failed login attempt
        type: number
        format: double
        x-nullable: false
      passwordStrategy:
        description: The strategy used to store the password MembershipPasswordStrategy
        type: string
        enum:
          - Clear
          - Hashed
          - Encrypted
      passwordStrengthRegularExpression:
        description: The regular expression used to validate the strength level of a password
        type: string
      requiresQuestionAndAnswer:
        description: Indicates whether the default membership provider requires the user to answer a password question (and answer) for password reset and retrieval
        type: boolean
        x-nullable: false
      requiresUniqueEmail:
        description: Indicating whether the customer email addresses should be unique across the system
        type: boolean
        x-nullable: false
      tokenExpirationMinutes:
        description: The expiration time of reset password ticket (in minutes)
        type: integer
        format: int32
        x-nullable: false
    description: MembershipConfiguration
    type: object
  ChangePasswordResponse:
    title: ChangePasswordResponse
    properties:
      success:
        description: Indicates whether the password was successfully changed.
        type: boolean
        x-nullable: false
    description: ChangePasswordResponse
    type: object
  ChangeUserNameResponse:
    title: ChangeUserNameResponse
    properties:
      success:
        description: Indicates whether the username was successfully changed.
        type: boolean
        x-nullable: false
    description: ChangeUserNameResponse
    type: object
  UnlockUserResponse:
    title: UnlockUserResponse
    properties:
      success:
        description: Indicates whether the unlock was successful.
        type: boolean
        x-nullable: false
    description: UnlockUserResponse
    type: object
  FindOrganizationsQueryResult:
    title: FindOrganizationsQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Organization'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FindOrganizationsQueryResult
    type: object
  List_CustomProfile_:
    title: List<CustomProfile>
    type: array
    items:
      $ref: '#/definitions/CustomProfile'
  FindProfileInstancesQueryResult:
    title: FindProfileInstancesQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/CustomProfile'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FindProfileInstancesQueryResult
    type: object
  FindStoresQueryResult:
    title: FindStoresQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Store'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FindStoresQueryResult
    type: object
  GetFulfillmentLocationByIdElapsedTimeResult:
    title: GetFulfillmentLocationByIdElapsedTimeResult
    required:
      - elapsedSeconds
    properties:
      elapsedSeconds:
        description: The elapsed seconds for store opening times.
        type: integer
        format: int32
        x-nullable: false
    description: GetFulfillmentLocationByIdElapsedTimeResult
    type: object
  SetFulfillmentLocationInventoryManagementResult:
    title: SetFulfillmentLocationInventoryManagementResult
    properties:
      alreadyUsedName:
        description: the name of the fulfillment location using the specfied inventory location identifier.
        type: string
      alreadyUsedNumber:
        description: the number of the fulfillment location using the specfied inventory location identifier.
        type: string
      isSuccess:
        description: a value indicating whether the operation was completed successfully.
        type: boolean
        x-nullable: false
    description: SetFulfillmentLocationInventoryManagementResult
    type: object
  FindWarehousesQueryResult:
    title: FindWarehousesQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Warehouse'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FindWarehousesQueryResult
    type: object
  Warehouse:
    title: Warehouse
    properties:
      associatedScopes:
        description: The warehouse's associated scopes.
        type: array
        items:
          type: string
      created:
        description: the date the Warehouse was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the user who created the Warehouse.
        type: string
      deliverySchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the warehouse delivery service opening hours. This value is not loaded by default.
      description:
        $ref: '#/definitions/LocalizedString'
        description: the general description of the warehouse. Use this to provide internal (admin) users information about this warehouse.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the display name of the warehouse. This is a multilingual value.
      email:
        description: the email of the warehouse. This could be a specific person's address or a general customerService address depending on the warehouse.
        type: string
      faxExtension:
        description: the extension for the fax number of the warehouse.
        type: string
      faxNumber:
        description: the fax number of the warehouse.
        type: string
      fulfillmentLocation:
        $ref: '#/definitions/FulfillmentLocation'
        description: the warehouse's fulfillment location information.
      id:
        description: the unique identifier of the Warehouse.
        type: string
        x-nullable: false
      isActive:
        description: 'Is this warehouse currently active. Set this flag to false as an alternative to deleting it and then recreating it a a later date. This allows the warehouse to be hidden from many business processes until re-activated. '
        type: boolean
        x-nullable: false
      lastModified:
        description: The date of the last modification to the Warehouse.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the user who last modified the Warehouse.
        type: string
      manager:
        description: the full name of the manager of the warehouse.
        type: string
      name:
        description: the name of the warehouse. Each warehouse must have a name that unique in the system.
        type: string
      number:
        description: a business centric number to identify the warehouse that could be used to link the warehouse to external data.
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
        description: the warehouse operating status. This value is not loaded by default.
      phoneExtension:
        description: the extension for the telephone number of the warehouse.
        type: string
      phoneNumber:
        description: the telephone number of the warehouse.
        type: string
      pickUpSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the warehouse pickup opening hours. This value is not loaded by default.
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this entity.
      warehouseSchedule:
        $ref: '#/definitions/FulfillmentSchedule'
        description: the warehouse opening hours. This value is not loaded by default.
    description: Warehouse
    type: object
  PromotionEngineResult:
    title: PromotionEngineResult
    properties:
      availablePromotions:
        description: 'The list of all the processed promotions considered available for the customer (i.e. the targeting condition was met), at a given time.'
        type: array
        items:
          $ref: '#/definitions/Promotion'
      cart:
        $ref: '#/definitions/Cart'
        description: The processed cart
      customer:
        $ref: '#/definitions/Customer'
        description: The processed customer
      isMaxProcessedPromotionsReached:
        description: The maximum of processed promotions (500) is reached.
        type: boolean
        x-nullable: false
      liveCampaigns:
        description: The live campaigns.
        type: array
        items:
          $ref: '#/definitions/Campaign'
      processedPromotions:
        description: 'The list of all the processed promotions considered, at a given time.'
        type: array
        items:
          $ref: '#/definitions/PromotionProcessingResult'
    description: PromotionEngineResult
    type: object
  Campaign:
    title: Campaign
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      allowOptOut:
        description: Indicates whether the campaign allows opting out.
        type: boolean
        x-nullable: false
      childScopesInheritance:
        $ref: '#/definitions/Dictionary_String_Boolean_'
        description: A dictionary which contains entries for all child scopes who have the campaign and their opt-in status.
      description:
        description: The description of the campaign.
        type: string
      endDate:
        description: The end date of the campaign.
        type: string
        format: date-time
        x-nullable: false
      isEditionStep1Completed:
        description: Indicates whether a person editing the campaign marked the step as complete.
        type: boolean
        x-nullable: false
      isEditionStep2Completed:
        description: Indicates whether a person editing the campaign marked the step as complete.
        type: boolean
        x-nullable: false
      isEditionStep3Completed:
        description: Indicates whether a person editing the campaign marked the step as complete.
        type: boolean
        x-nullable: false
      name:
        description: The name of the campaign.
        type: string
      priority:
        description: The priority of the campaign.
        type: integer
        format: int32
        x-nullable: false
      promotions:
        description: The promotions that are in the campaign.
        type: array
        items:
          $ref: '#/definitions/Promotion'
      scope:
        description: The id of the scope of the campaign.
        type: string
      startDate:
        description: The start date of the campaign.
        type: string
        format: date-time
        x-nullable: false
      status:
        description: The status of the campaign.
        type: string
        enum:
          - Unspecified
          - Draft
          - PendingApproval
          - Ready
          - Live
          - Paused
          - Cancelled
          - Expired
          - Rejected
      timeZone:
        description: The time zone to use in conjunction with the date properties (Start/End) of this campaign.
        type: string
      type:
        description: The type of the campaign (CampaignType Lookup)
        type: string
    description: Campaign
    type: object
  Dictionary_String_Boolean_:
    title: 'Dictionary<String,Boolean>'
    additionalProperties:
      type: boolean
      x-nullable: false
    description: 'Dictionary<String,Boolean>'
    type: object
  PromotionProcessingResult:
    title: PromotionProcessingResult
    properties:
      consumedConditionItems:
        description: The list of consumed condition items
        type: array
        items:
          $ref: '#/definitions/ConsumedItem'
      consumedConditionShipments:
        description: The list of consumed condition shipment
        type: array
        items:
          $ref: '#/definitions/ConsumedShipment'
      consumedCoupons:
        description: The list of consumed coupons
        type: array
        items:
          $ref: '#/definitions/Coupon'
      consumedRewardItems:
        description: The list of consumed reward items
        type: array
        items:
          $ref: '#/definitions/ConsumedItem'
      consumedRewardOrderCount:
        description: The number of consumed reward order
        type: integer
        format: int32
        x-nullable: false
      consumedRewardShipments:
        description: The list of consumed reward shipments
        type: array
        items:
          $ref: '#/definitions/ConsumedShipment'
      isPromotionSatisfied:
        description: Whether or not the promotion is satisfied
        type: boolean
        x-nullable: false
      promotion:
        $ref: '#/definitions/Promotion'
        description: The promotion
      rewards:
        description: The list of rewards
        type: array
        items:
          $ref: '#/definitions/Reward'
    description: PromotionProcessingResult
    type: object
  ConsumedItem:
    title: ConsumedItem
    properties:
      conditionId:
        description: The condition id.
        type: string
      lineItemId:
        description: The lineItem id.
        type: string
      promotionId:
        description: The promotion id.
        type: string
      quantity:
        description: The quantity of units consumed.
        type: number
        format: double
        x-nullable: false
      rewardId:
        description: The reward id.
        type: string
    description: ConsumedItem
    type: object
  ConsumedShipment:
    title: ConsumedShipment
    properties:
      shipmentId:
        description: The shipment identifier
        type: string
    description: ConsumedShipment
    type: object
  CampaignQueryResult:
    title: CampaignQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Campaign'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: CampaignQueryResult
    type: object
  List_Campaign_:
    title: List<Campaign>
    type: array
    items:
      $ref: '#/definitions/Campaign'
  List_Promotion_:
    title: List<Promotion>
    type: array
    items:
      $ref: '#/definitions/Promotion'
  Settings:
    title: Settings
    properties:
      allowCampaignLevelInheritanceManagement:
        description: Gets or sets a value indicating whether campaign inheritance is managed at the campaign-level.
        type: boolean
        x-nullable: false
      campaignsAreInheritedByDefault:
        description: Gets or sets a value indicating whether campaign are inherited by default.
        type: boolean
        x-nullable: false
      orderRewardsAreSplittedOnLineItem:
        description: Gets or sets a value indicating whether Order rewards are splitted on LineItems or applied on shipment.
        type: boolean
        x-nullable: false
      productPickerMode:
        description: Gets or sets a value indicating whether the product picker fetch products by IDs or by skus.
        type: string
        enum:
          - ById
          - BySku
    description: Settings
    type: object
  List_Coupon_:
    title: List<Coupon>
    type: array
    items:
      $ref: '#/definitions/Coupon'
  DeleteCouponResult:
    title: DeleteCouponResult
    properties:
      success:
        description: A value indicating whether this request is success.
        type: boolean
        x-nullable: false
      validationResultCodes:
        description: The validation result codes
        type: array
        items:
          type: string
          x-nullable: false
    description: DeleteCouponResult
    type: object
  FindPromoCodesResponse:
    title: FindPromoCodesResponse
    properties:
      promoCodes:
        description: The list of the promotion's promo codes.
        type: array
        items:
          $ref: '#/definitions/PromoCodeItem'
    description: FindPromoCodesResponse
    type: object
  PromoCodeItem:
    title: PromoCodeItem
    properties:
      code:
        description: The promo code.
        type: string
      usedCount:
        description: The number of times the promo code was used.
        type: integer
        format: int32
        x-nullable: false
    description: PromoCodeItem
    type: object
  GetPromoCodesCountResponse:
    title: GetPromoCodesCountResponse
    properties:
      count:
        description: The number of promo codes for the promotion.
        type: integer
        format: int32
        x-nullable: false
    description: GetPromoCodesCountResponse
    type: object
  GeneratePromoCodesResponse:
    title: GeneratePromoCodesResponse
    properties:
      success:
        description: The promo codes generation is successful.
        type: boolean
        x-nullable: false
    description: GeneratePromoCodesResponse
    type: object
  PromotionSummaries:
    title: PromotionSummaries
    properties:
      promotions:
        description: the list of PromotionSummary.
        type: array
        items:
          $ref: '#/definitions/PromotionSummary'
    description: PromotionSummaries
    type: object
  PromotionSummary:
    title: PromotionSummary
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      name:
        description: the name of the promotion.
        type: string
      priority:
        description: the priority of the promotion.
        type: integer
        format: int32
        x-nullable: false
      promotionText:
        $ref: '#/definitions/LocalizedString'
        description: the text message to show when the promotion is applied.
    description: PromotionSummary
    type: object
  Segment:
    title: Segment
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      description:
        description: The name of the description
        type: string
      isActive:
        description: Indicates whether the segment is active and usable in promotion
        type: boolean
        x-nullable: false
      name:
        description: The name of the segment
        type: string
      targetingCondition:
        $ref: '#/definitions/TargetingCondition'
        description: The targeting condition (customer requirements) for the promotion to be applied.
    description: Segment
    type: object
  List_Segment_:
    title: List<Segment>
    type: array
    items:
      $ref: '#/definitions/Segment'
  SegmentQueryResult:
    title: SegmentQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/Segment'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: SegmentQueryResult
    type: object
  DeleteSegmentResult:
    title: DeleteSegmentResult
    properties:
      success:
        description: A value indicating whether this request is success.
        type: boolean
        x-nullable: false
      validationResultCodes:
        description: The validation result codes
        type: array
        items:
          type: string
          x-nullable: false
    description: DeleteSegmentResult
    type: object
  Catalog:
    title: Catalog
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      childCatalogs:
        description: The child catalogs.
        type: array
        items:
          $ref: '#/definitions/Catalog'
      currency:
        description: The currency of the Catalog.
        type: string
      defaultLanguage:
        description: The default language of the Catalog.
        type: string
      description:
        description: A general description of the Catalog.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the Catalog. It is kept as a multilingual representation, allowing the display of a language friendly version of the name.'
      endDate:
        description: The end date of the Catalog.
        type: string
        format: date-time
      isActive:
        description: The active flag of the Catalog.
        type: boolean
        x-nullable: false
      languages:
        description: The list of languages supported by the Catalog.
        type: array
        items:
          type: string
      parentId:
        description: The parent catalog id of the Catalog.
        type: string
      startDate:
        description: The start date of the Catalog.
        type: string
        format: date-time
      type:
        description: The type of the Catalog.
        type: string
        enum:
          - Global
          - Sale
          - Dependant
      overrideParent:
        description: Whether the products has overridden values in the current Sales scope. It means that it have values that does not come from the Global scope.
        type: boolean
        x-nullable: false
    description: Catalog
    type: object
  CultureIsoList:
    title: CultureIsoList
    properties:
      cultureIsoCodes:
        description: The list of culture ISO codes
        type: array
        items:
          type: string
    description: CultureIsoList
    type: object
  List_Catalog_:
    title: List<Catalog>
    type: array
    items:
      $ref: '#/definitions/Catalog'
  CategoryList:
    title: CategoryList
    properties:
      categories:
        description: Products of the list
        type: array
        items:
          $ref: '#/definitions/Category'
    description: CategoryList
    type: object
  Category:
    title: Category
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      catalogId:
        description: The catalog id
        type: string
      children:
        description: The child categories (list of Category)
        type: array
        items:
          $ref: '#/definitions/Category'
      created:
        description: The date of creation of the Category
        type: string
        format: date-time
      createdBy:
        description: The identifier of the user who created the Category
        type: string
      definitionName:
        description: The name of the definition of the Category
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A general description of the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the name'
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'A friendly, UI compatible name for the Category. It is kept as a multilingual representation, allowing the display of a language friendly version of the name'
      includeInSearch:
        description: Whether the category is included in the search
        type: boolean
        x-nullable: false
      lastModified:
        description: The date of the last modification to the Category
        type: string
        format: date-time
      lastModifiedBy:
        description: The identifier of the user who last modified the Category
        type: string
      primaryParentCategoryId:
        description: The primary parent category id
        type: string
      relationships:
        description: The relationships of the Category
        type: array
        items:
          $ref: '#/definitions/Relationship'
      sequenceNumber:
        description: The number used for ordering the Category. An integer that allows the ordering of the categories when they are presented in a list. No restriction is given for the number (e.g. it allows two categories to have the same value for this property)
        type: integer
        format: int32
    description: Category
    type: object
  Relationship:
    title: Relationship
    properties:
      catalogId:
        description: The catalog id which the entity related to the source belongs
        type: string
      count:
        description: 'A quantity for the Relationship. For example, X has 7 items of the relation Y'
        type: integer
        format: int32
        x-nullable: false
      description:
        $ref: '#/definitions/LocalizedString'
        description: 'A general description of the Relationship. It is kept as a multilingual representation, allowing the display of a language friendly version of the description'
      entityId:
        description: The related entity id of the Relationship
        type: string
      id:
        description: 'ID of the relationship, obsolete'
        type: string
      isInherited:
        description: True if the relationship is inherited from a sale scope
        type: boolean
        x-nullable: false
      merchandiseType:
        description: The MerchandiseType of the Relationship. The type is based on the MerchandiseType Lookup. Contains the value of the lookup.
        type: string
      qualifier:
        description: A qualifier for the Relationship. Flexible property that allows the consumer to enter custom information about the relationship
        type: string
      relationshipType:
        description: 'The type of the '
        type: string
        enum:
          - Category
          - Product
          - Variant
      sequenceNumber:
        description: The number used for ordering the Relationship. An integer that allows the ordering of the relationships when they are presented in a list. No restriction is given for the number (e.g. it allows two relationships to have the same value for this property).
        type: integer
        format: int32
        x-nullable: false
      variantProductId:
        description: The variant product Id of the Relationship just when the relationship's type is Variant
        type: string
    description: Relationship
    type: object
  GetCategoryTreeExistingItemByStateResult:
    title: GetCategoryTreeExistingItemByStateResult
    properties:
      categoryIds:
        type: array
        items:
          type: string
    description: GetCategoryTreeExistingItemByStateResult
    type: object
  GetCategoriesContainingProductsByStatusResult:
    title: GetCategoriesContainingProductsByStatusResult
    properties:
      ids:
        type: array
        items:
          type: string
    description: GetCategoriesContainingProductsByStatusResult
    type: object
  CategoryTreeNode:
    title: CategoryTreeNode
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      childNodes:
        description: The child nodes as a list. This collection can be empty even if HasChildNodes is true. This means that the collection was not fetched from the service
        type: array
        items:
          $ref: '#/definitions/CategoryTreeNode'
      displayName:
        description: The display name
        type: string
      hasChildNodes:
        description: A value indicating whether this node has child nodes
        type: boolean
        x-nullable: false
      path:
        $ref: '#/definitions/CategoryTreePath'
        description: The CategoryTreePath (the path to the category from the Root category)
      productCount:
        description: The product count. The number of products directly under this category
        type: integer
        format: int64
        x-nullable: false
      sequenceNumber:
        description: The number used for ordering the CategoryTreeNode in a list. An integer that allows the ordering of the category  tree nodes when they are presented in a list.No restriction is given for the number (e.g. it allows two category tree nodes to have the same value for this property).
        type: integer
        format: int32
    description: CategoryTreeNode
    type: object
  CategoryTreePath:
    title: CategoryTreePath
    properties:
      ids:
        description: The ids of the category nodes in this path
        type: array
        items:
          type: string
    description: CategoryTreePath
    type: object
  List_Relationship_:
    title: List<Relationship>
    type: array
    items:
      $ref: '#/definitions/Relationship'
  UpdateCategorySequenceResponse:
    title: UpdateCategorySequenceResponse
    properties:
      categoryIds:
        description: The list of category ids
        type: array
        items:
          type: string
    description: UpdateCategorySequenceResponse
    type: object
  ProductListPage:
    title: ProductListPage
    properties:
      continuationToken:
        description: The continuation token that can be used to get the next result page.
        type: string
      products:
        description: Products of the list
        type: array
        items:
          $ref: '#/definitions/Product'
    description: ProductListPage
    type: object
  Product:
    title: Product
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      activationOverridden:
        description: Allow overriding the Active flag and the activation schedule at a descendent scope level.
        type: boolean
      allowVariantActivationSchedule:
        description: Allow overriding the activation schedule at the variant level.
        type: boolean
      brand:
        description: the Brand of the Product.
        type: string
      itemFormat:
        description: 'the ItemFormat of the Product (must be mg, mm, mm2, mm3 or Unit quantity).'
        type: number
        format: double
        x-nullable: false
      scheduledActivation:
        description: The date on which the product becomes active.
        type: string
        format: date-time
      scheduledDeactivation:
        description: The date on which the product becomes inactive.
        type: string
        format: date-time
      sellingMethod:
        description: the Selling Method of the Product.
        type: string
      unitOfMeasure:
        description: the unit of measure of the Product.
        type: string
      weight:
        description: The weight of the Product.
        type: number
        format: double
      weightUOM:
        description: The weight unit of measure of the Product.
        type: string
      active:
        description: whether the Product is active or not.
        type: boolean
      catalogId:
        description: the id of the catalog to which the product belongs.
        type: string
      definitionName:
        description: the product definition name that represents the Product (its properties).
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: a general description of the Product.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'a friendly, UI compatible name for the Product'
      includeInSearch:
        description: Whether or not the Product should be included in the front-end search result.
        type: boolean
        x-nullable: false
      isOverridden:
        description: whether the product has overridden values in the current Sales scope.
        type: boolean
        x-nullable: false
      lastPublishedDate:
        description: the last published date of the Product.
        type: string
        format: date-time
      listPrice:
        description: the default price for the Product
        type: number
        format: double
      mediaSet:
        description: the list of media of the Product
        type: array
        items:
          $ref: '#/definitions/ProductMedia'
      newProductDate:
        description: the number of days the Product is flagged as a new product introduction.
        type: string
        format: date-time
      parentCategoryIds:
        description: the business key (id) of the primary Category.
        type: array
        items:
          type: string
      prices:
        description: a list of ProductPriceEntry.
        type: array
        items:
          $ref: '#/definitions/ProductPriceEntry'
      primaryParentCategoryId:
        description: the business key (id) of the primary Category.
        type: string
      publicationStatus:
        description: 'the publication status of the Product. Currently supported values are ''InProgress'', ''Rejected'', ''PendingApproval'', ''ReadyToCompose'', ''Published'''
        type: string
      relationships:
        description: 'The list of related entities (Product, Category or Variant) related to the Product.'
        type: array
        items:
          $ref: '#/definitions/Relationship'
      sequenceNumber:
        description: the number used for ordering the Product in a list.
        type: integer
        format: int32
      sku:
        description: the stock keeping unit code (SKU) of the Product.
        type: string
      taxCategory:
        description: the tax category of the Product.
        type: string
      variantMediaSet:
        description: the media list of key variants of the Product
        type: array
        items:
          $ref: '#/definitions/VariantMediaSet'
      variants:
        description: the list of Variant of the Product
        type: array
        items:
          $ref: '#/definitions/Variant'
      idsOfOverriddenVariants:
        type: array
        items:
          type: string
      overriddenProperties:
        type: array
        items:
          type: string
    description: Product
    type: object
  ProductMedia:
    title: ProductMedia
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      cleanUpOnDelete:
        description: Indicates whether the related media file should be deleted from the Azure Storage when this reference to it is removed.
        type: boolean
      description:
        $ref: '#/definitions/LocalizedString'
        description: a general description of the Media.
      isCover:
        description: a cover of the Product.
        type: boolean
      mediaType:
        description: the MediaType of the media.
        type: string
      position:
        description: a position of the Media.
        type: integer
        format: int32
        x-nullable: false
      resizedInstances:
        description: a resized instances of the Media
        type: array
        items:
          $ref: '#/definitions/ResizedMediaLink'
      role:
        description: a role of the Media.
        type: string
      tag:
        description: a tag of the Media.
        type: string
      title:
        $ref: '#/definitions/LocalizedString'
        description: the title of the Media.
      url:
        description: the Url of the media.
        type: string
      isRemoved:
        type: boolean
    description: ProductMedia
    type: object
  ProductPriceEntry:
    title: ProductPriceEntry
    properties:
      endDate:
        description: The end date.
        type: string
        format: date-time
      isInherited:
        description: Indicates whether the price is inherited from parent scope.
        type: boolean
        x-nullable: false
      lastModified:
        type: string
        format: date-time
      lastModifiedBy:
        type: string
      price:
        description: of the price of the Product
        type: number
        format: double
        x-nullable: false
      priceListCategory:
        description: the price list category
        type: string
      priceListId:
        description: the unique identifier of the PriceList associated to the Product
        type: string
      priceListType:
        description: the price list type
        type: string
      sequenceNumber:
        description: The sequence number.
        type: integer
        format: int32
        x-nullable: false
      startDate:
        description: The start date.
        type: string
        format: date-time
    description: ProductPriceEntry
    type: object
  VariantMediaSet:
    title: VariantMediaSet
    properties:
      attributesToMatch:
        $ref: '#/definitions/PropertyBag'
        description: the attribute values
      media:
        description: the list of Media of the Product
        type: array
        items:
          $ref: '#/definitions/ProductMedia'
    description: VariantMediaSet
    type: object
  Variant:
    title: Variant
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      active:
        description: whether the Variant is active or not.
        type: boolean
      mediaSet:
        description: the media
        type: array
        items:
          $ref: '#/definitions/ProductMedia'
      overriddenProperties:
        description: the list of overridden properties.
        type: array
        items:
          type: string
      relationships:
        description: the relationships
        type: array
        items:
          $ref: '#/definitions/Relationship'
      scheduledActivation:
        description: The date on which the variant becomes active.
        type: string
        format: date-time
      scheduledDeactivation:
        description: The date on which the variant becomes inactive.
        type: string
        format: date-time
      catalogId:
        description: the id of the catalog name to which the variant belongs.
        type: string
      definitionName:
        description: the product definition name that represents the Variants (its properties).
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: 'a friendly, UI compatible name for the Variants'
      hiddenInScope:
        description: the hidden in scope flag of the Variant
        type: boolean
        x-nullable: false
      listPrice:
        description: the current price for the Variant.
        type: number
        format: double
      prices:
        description: prices.
        type: array
        items:
          $ref: '#/definitions/ProductPriceEntry'
      productId:
        description: the ID (business) of the product that owns the Variant
        type: string
      sequenceNumber:
        description: the number used for ordering the Variant in a list.
        type: integer
        format: int32
        x-nullable: false
      sku:
        description: the stock keeping unit code (SKU) of the Variant.
        type: string
      taxCategory:
        description: the tax category of the Variant.
        type: string
    description: Variant
    type: object
  List_Category_:
    title: List<Category>
    type: array
    items:
      $ref: '#/definitions/Category'
  List_CategoryTreeNode_:
    title: List<CategoryTreeNode>
    type: array
    items:
      $ref: '#/definitions/CategoryTreeNode'
  List_Product_:
    title: List<Product>
    type: array
    items:
      $ref: '#/definitions/Product'
  GetProductsCountByCategoryResponse:
    title: GetProductsCountByCategoryResponse
    properties:
      total:
        description: the total of categories.
        type: integer
        format: int64
        x-nullable: false
    description: GetProductsCountByCategoryResponse
    type: object
  ProductDraft:
    title: ProductDraft
    properties:
      catalogId:
        description: the id of the catalog to which the product belongs.
        type: string
      deleteVariantModifications:
        description: the list of delete modifications that the draft should apply to the variants.
        type: array
        items:
          $ref: '#/definitions/DeleteVariantModification'
      parentCategoryIds:
        description: the new category associations to this product
        type: array
        items:
          type: string
      primaryParentCategoryId:
        description: the primary category
        type: string
      productPropertyModifications:
        description: the list of modifications that the draft should apply to the product.
        type: array
        items:
          $ref: '#/definitions/ProductPropertyModification'
      state:
        description: the state of the product draft.
        type: string
        enum:
          - InProgress
          - Rejected
          - PendingApproval
          - ReadyToCompose
          - Published
      variantPropertyModifications:
        description: the list of modifications that the draft should apply to the variants.
        type: array
        items:
          $ref: '#/definitions/VariantPropertyModification'
    description: ProductDraft
    type: object
  LocalizedDraftState:
    title: LocalizedDraftState
    properties:
      values:
        $ref: '#/definitions/IDictionary_String_DraftState_'
        description: The draft states for cultures
    description: LocalizedDraftState
    type: object
  IDictionary_String_DraftState_:
    title: 'IDictionary<String,DraftState>'
    additionalProperties:
      type: string
      enum:
        - InProgress
        - Rejected
        - PendingApproval
        - ReadyToCompose
        - Published
    description: 'IDictionary<String,DraftState>'
    type: object
  ProductList:
    title: ProductList
    properties:
      products:
        description: The products
        type: array
        items:
          $ref: '#/definitions/Product'
    description: ProductList
    type: object
  ProductExistsResponse:
    title: ProductExistsResponse
    properties:
      value:
        description: Value of the response
        type: boolean
        x-nullable: false
    description: ProductExistsResponse
    type: object
  GetProductsPropertiesResult:
    title: GetProductsPropertiesResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/ProductProperties'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: GetProductsPropertiesResult
    type: object
  ProductProperties:
    title: ProductProperties
    properties:
      productId:
        description: the unique identifier of Product
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The list of requested properties of the Product
    description: ProductProperties
    type: object
  List_Variant_:
    title: List<Variant>
    type: array
    items:
      $ref: '#/definitions/Variant'
  List_PriceList_:
    title: List<PriceList>
    type: array
    items:
      $ref: '#/definitions/PriceList'
  ProductPrice:
    title: ProductPrice
    properties:
      defaultPrice:
        description: The default price of the product
        type: number
        format: double
        x-nullable: false
      pricing:
        $ref: '#/definitions/ProductPriceEntry'
        description: The applicable pricing entry of the product
      productId:
        description: The unique identifier of the product to which the pricing is set
        type: string
      regularPricing:
        $ref: '#/definitions/ProductPriceEntry'
        description: The applicable regular pricing entry of the product
      variantPrices:
        description: The price of the variants associated to the product. This list will be empty if the product is not associated to any variants
        type: array
        items:
          $ref: '#/definitions/VariantPrice'
    description: ProductPrice
    type: object
  VariantPrice:
    title: VariantPrice
    properties:
      defaultPrice:
        description: The default price of the variant
        type: number
        format: double
        x-nullable: false
      inheritedFromProduct:
        description: A flag indicating whether the current variant pricing is inherited from information set at the product level
        type: boolean
        x-nullable: false
      pricing:
        $ref: '#/definitions/ProductPriceEntry'
        description: The applicable pricing entry of the product
      regularPricing:
        $ref: '#/definitions/ProductPriceEntry'
        description: The applicable regular pricing entry of the product
      variantId:
        description: The unique identifier of the variant
        type: string
    description: VariantPrice
    type: object
  GetProductPriceEntriesResult:
    title: GetProductPriceEntriesResult
    properties:
      productId:
        description: The product id
        type: string
      productPriceEntries:
        description: The collection of ProductPriceEntry where each item represents the price of the Product in a PriceList
        type: array
        items:
          $ref: '#/definitions/ProductPriceEntry'
      variantPriceEntries:
        description: The collection of VariantPriceEntry where each item represents the price of the Variant in a PriceList
        type: array
        items:
          $ref: '#/definitions/VariantPriceEntry'
    description: GetProductPriceEntriesResult
    type: object
  VariantPriceEntry:
    title: VariantPriceEntry
    properties:
      pricesEntries:
        description: The collection of ProductPriceEntry which each item represents the price of the Variant in a PriceList
        type: array
        items:
          $ref: '#/definitions/ProductPriceEntry'
      variantId:
        description: The unique identifier of the variant.
        type: string
    description: VariantPriceEntry
    type: object
  IEnumerable_PriceListEntry_:
    title: IEnumerable<PriceListEntry>
    type: array
    items:
      $ref: '#/definitions/PriceListEntry'
  EffectivePriceEntryInfo:
    title: EffectivePriceEntryInfo
    properties:
      isInherited:
        description: IsInherited
        type: boolean
        x-nullable: false
      price:
        description: Price
        type: number
        format: double
      priceListId:
        description: PriceListId
        type: string
    description: EffectivePriceEntryInfo
    type: object
  InventoryLocation:
    title: InventoryLocation
    properties:
      associatedLocationId:
        description: The associated location id which could represent a Store number or a Warehouse number
        type: string
      created:
        description: The date the InventoryLocation was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the InventoryLocation.
        type: string
      lastModified:
        description: The date that the last modification was applied to the InventoryLocation.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the InventoryLocation details are modified.
        type: string
    description: InventoryLocation
    type: object
  List_InventorySchedule_:
    title: List<InventorySchedule>
    type: array
    items:
      $ref: '#/definitions/InventorySchedule'
  InventoryItemStatusDetails:
    title: InventoryItemStatusDetails
    properties:
      currentStatus:
        description: The current status of the item
        type: string
        enum:
          - InStock
          - OutOfStock
          - PreOrder
          - BackOrder
      fulfillmentLocationName:
        description: The name of the FulfillmentLocation associated to the inventory location
        type: string
      fulfillmentLocationNumber:
        description: The identifier of the FulfillmentLocation associated to the inventory location
        type: string
      fulfillmentLocationType:
        description: The type of the FulfillmentLocation associated to the inventory location
        type: string
        enum:
          - Unspecified
          - Store
          - Warehouse
      inventoryItem:
        $ref: '#/definitions/InventoryItem'
        description: The inventory item quantity and schedules
      isFulfillmentLocationAtpEnabled:
        description: A value indicating whether the inventory availability to promise is enabled for the fulfillment location associated to the inventory location
        type: boolean
        x-nullable: false
      isFulfillmentLocationInventoryEnabled:
        description: A value indicating whether the inventory is enabled for the fulfillment location associated to the inventory location
        type: boolean
        x-nullable: false
      scope:
        description: The scope associated to the FulfillmentLocation associated to the inventory Location.
        type: string
    description: InventoryItemStatusDetails
    type: object
  InventoryItem:
    title: InventoryItem
    properties:
      inventoryLocationId:
        description: The inventory location identifier
        type: string
      quantity:
        $ref: '#/definitions/InventoryQuantity'
        description: The quantified information of this item
      schedules:
        description: The list of schedules
        type: array
        items:
          $ref: '#/definitions/InventorySchedule'
      sku:
        description: The sku of the product
        type: string
    description: InventoryItem
    type: object
  List_InventoryItemAvailability_:
    title: List<InventoryItemAvailability>
    type: array
    items:
      $ref: '#/definitions/InventoryItemAvailability'
  InventoryProviderDetails:
    title: InventoryProviderDetails
    properties:
      displayName:
        description: The display name of this inventory provider
        type: string
      inventoryProviderId:
        description: The identifier for this provider
        type: string
        x-nullable: false
      name:
        description: The name of this provider
        type: string
    description: InventoryProviderDetails
    type: object
  List_InventoryProviderDetails_:
    title: List<InventoryProviderDetails>
    type: array
    items:
      $ref: '#/definitions/InventoryProviderDetails'
  List_InventoryItem_:
    title: List<InventoryItem>
    type: array
    items:
      $ref: '#/definitions/InventoryItem'
  InventoryItemStatusDetailsQueryResult:
    title: InventoryItemStatusDetailsQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/InventoryItemStatusDetails'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: InventoryItemStatusDetailsQueryResult
    type: object
  InventoryReservationResult:
    title: InventoryReservationResult
    properties:
      failedReservationItems:
        description: The list of failed reservation items
        type: array
        items:
          $ref: '#/definitions/InventoryItemReservationRequest'
      inventoryReservedItems:
        description: The list of Inventory reserved items
        type: array
        items:
          $ref: '#/definitions/InventoryReservedItem'
    description: InventoryReservationResult
    type: object
  InventoryReservedItem:
    title: InventoryReservedItem
    properties:
      created:
        description: The created date
        type: string
        format: date-time
        x-nullable: false
      id:
        description: The reservation identifier
        type: string
        x-nullable: false
      inventoryLocationId:
        description: The inventory location Id
        type: string
      lastModifiedBy:
        description: The last user who modified the item
        type: string
      lineItemId:
        description: The line item identifier
        type: string
        x-nullable: false
      modified:
        description: The last modified date
        type: string
        format: date-time
        x-nullable: false
      ownerId:
        description: 'The unique identifier of the order, order draft or cart (according to the owner type)'
        type: string
        x-nullable: false
      ownerType:
        description: The Owner type
        type: string
        enum:
          - Order
          - Cart
          - OrderDraft
      quantity:
        description: The quantity of the reservation
        type: number
        format: double
        x-nullable: false
      reservationStatus:
        description: The inventory reservation status
        type: string
        enum:
          - Planned
          - Confirmed
          - Canceled
      sku:
        description: The line item sku
        type: string
      stockStatus:
        description: The inventory reservation stock status
        type: string
        enum:
          - InStock
          - PreOrder
          - BackOrder
    description: InventoryReservedItem
    type: object
  IEnumerable_InventoryReservedItem_:
    title: IEnumerable<InventoryReservedItem>
    type: array
    items:
      $ref: '#/definitions/InventoryReservedItem'
  InventoryItemAvailabilityEvaluationResult:
    title: InventoryItemAvailabilityEvaluationResult
    properties:
      backOrderableQuantity:
        description: The back orderable quantity
        type: number
        format: double
        x-nullable: false
      backOrderReservedQuantity:
        description: The back order reserved quantity
        type: number
        format: double
        x-nullable: false
      inStockQuantity:
        description: The in stock quantity
        type: number
        format: double
        x-nullable: false
      lineItemId:
        description: The line item identifier
        type: string
        x-nullable: false
      lineItemSku:
        description: The line item sku
        type: string
      outOfStockQuantity:
        description: The out of stock quantity
        type: number
        format: double
        x-nullable: false
      requestedQuantity:
        description: The requested quantity
        type: number
        format: double
        x-nullable: false
      reservedQuantity:
        description: The reserved quantity
        type: number
        format: double
        x-nullable: false
    description: InventoryItemAvailabilityEvaluationResult
    type: object
  List_InventoryItemAvailabilityEvaluationResult_:
    title: List<InventoryItemAvailabilityEvaluationResult>
    type: array
    items:
      $ref: '#/definitions/InventoryItemAvailabilityEvaluationResult'
  ChangeInventoryReservedItemsStockStatusResult:
    title: ChangeInventoryReservedItemsStockStatusResult
    properties:
      inventoryReservedItems:
        description: The list of inventory reserved items that got their stock status updated
        type: array
        items:
          $ref: '#/definitions/InventoryReservedItem'
    description: ChangeInventoryReservedItemsStockStatusResult
    type: object
  DeleteUnusedMediaStorageResponse:
    title: DeleteUnusedMediaStorageResponse
    properties:
      value:
        description: Value of the response
        type: boolean
        x-nullable: false
    description: DeleteUnusedMediaStorageResponse
    type: object
  GetProductsStatisticsResult:
    title: GetProductsStatisticsResult
    properties:
      documentCount:
        description: The total count of analyzed documents
        type: integer
        format: int32
        x-nullable: false
      documentSize:
        $ref: '#/definitions/PropertyStatistics'
        description: The statistics related to documents size
      variantCount:
        $ref: '#/definitions/PropertyStatistics'
        description: The statistics related to variant quantities
    description: model for products' statistics info
    type: object
  PropertyStatistics:
    title: PropertyStatistics
    properties:
      average:
        description: The average value
        type: integer
        format: int32
        x-nullable: false
      max:
        description: The maximum value
        type: integer
        format: int32
        x-nullable: false
      min:
        description: The minimum value
        type: integer
        format: int32
        x-nullable: false
    description: 'statistics values such as min, max, and average'
    type: object
  GetProductsByPublicationStatusResult:
    title: GetProductsByPublicationStatusResult
    properties:
      continuationToken:
        type: string
      counts:
        $ref: '#/definitions/ICollection_QuickLinkCountDetails_'
      products:
        $ref: '#/definitions/ICollection_ProductByPublicationStatus_'
    description: GetProductsByPublicationStatusResult
    type: object
  ICollection_QuickLinkCountDetails_:
    title: ICollection`1
    properties: {}
    description: ICollection<QuickLinkCountDetails>
    type: object
  ICollection_ProductByPublicationStatus_:
    title: ICollection`1
    properties: {}
    description: ICollection<ProductByPublicationStatus>
    type: object
  GetProductByCategoryAndStateResults:
    title: GetProductByCategoryAndStateResults
    properties:
      counts:
        type: array
        items:
          $ref: '#/definitions/QuickLinkCountDetails'
      products:
        type: array
        items:
          $ref: '#/definitions/ProductByCategoryAndState'
    description: GetProductByCategoryAndStateResults
    type: object
  QuickLinkCountDetails:
    title: QuickLinkCountDetails
    properties:
      count:
        description: Items count for this quick link.
        type: integer
        format: int32
        x-nullable: false
      name:
        description: Name for the quick link. Value is set according to the specified culture specified during retrieve.
        type: string
    description: QuickLinkCountDetails
    type: object
  ProductByCategoryAndState:
    title: ProductByCategoryAndState
    properties:
      productId:
        description: the unique identifier of Product
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The list of requested properties of the Product
      brand:
        type: string
      displayName:
        type: string
      draftState:
        type: string
      hasChangeModification:
        type: boolean
        x-nullable: false
      hasVariant:
        type: boolean
        x-nullable: false
      isNew:
        type: boolean
        x-nullable: false
      sku:
        type: string
    description: ProductByCategoryAndState
    type: object
  List_ProductPrice_:
    title: List<ProductPrice>
    type: array
    items:
      $ref: '#/definitions/ProductPrice'
  List_GetProductPriceEntriesResult_:
    title: List<GetProductPriceEntriesResult>
    type: array
    items:
      $ref: '#/definitions/GetProductPriceEntriesResult'
  MediaSettings:
    title: MediaSettings
    properties:
      mediaAcceptedFileTypes:
        description: accepted file types
        type: string
      mediaCoverImageSize:
        description: this value is used for choosing the size of the of the image when returning ImageUrl for a product cover image
        type: string
      mediaFallbackImageName:
        description: a fallback image name
        type: string
      mediaProductFileNameConvention:
        description: a product filename convention
        type: string
      mediaProductKeyVariantFileNameConvention:
        description: a product variant file name convention
        type: string
      mediaProductVariantFileNameConvention:
        description: ' a product variant file name convention'
        type: string
      mediaResizeUploadedImagesServerSide:
        description: a value indicating whether resize uploaded images server-side
        type: boolean
        x-nullable: false
      mediaServerUrl:
        description: media server url
        type: string
      mediaSizes:
        $ref: '#/definitions/Dictionary_String_String_'
        description: dimensions for different image sizes (f.e. S|M|L|XL)
    description: MediaSettings
    type: object
  MediaList:
    title: MediaList
    properties:
      mediaSet:
        description: the media list
        type: array
        items:
          $ref: '#/definitions/ProductMedia'
    description: MediaList
    type: object
  ProductSettings:
    title: ProductSettings
    properties:
      allowTranslationFromSalesToGlobal:
        description: whether or not the changes to multilingual attributes in a sales scope should be copied over to the Global scope.
        type: boolean
        x-nullable: false
      availableInventoryStatuses:
        description: the list of inventory statuses available to search.
        type: string
      defaultProductImportStatus:
        description: Specify what will be the Active value for the products imported.
        type: string
        enum:
          - Inactive
          - Active
          - SameAsGlobal
      enableExtendedProductWorkflow:
        description: a value indicating whether the product workflow is simple (false) or with composer (true).
        type: boolean
        x-nullable: false
      isInventoryEnabled:
        description: Determine if the inventory is enabled
        type: boolean
        x-nullable: false
      isPricingAuditEnabled:
        description: the changes made to an price will be audited
        type: boolean
        x-nullable: false
      maxNumberOfMediaItems:
        description: the maximum number of media items
        type: integer
        format: int32
        x-nullable: false
      maxNumberOfProductAttributes:
        description: the maximum number of product attributes
        type: integer
        format: int32
        x-nullable: false
      maxNumberOfRelationships:
        description: the maximum number of relationships
        type: integer
        format: int32
        x-nullable: false
      maxNumberOfVariantAttributes:
        description: the maximum number of variant attributes.
        type: integer
        format: int32
        x-nullable: false
      maxNumberOfVariants:
        description: the maximum number of variants
        type: integer
        format: int32
        x-nullable: false
      newProductDays:
        description: the number of days the product stays in the New count.
        type: integer
        format: int32
        x-nullable: false
      notifySameScopeOtherLanguages:
        description: Whether or not to create notifications (for changes in system culture)  to all other languages of the same scope as the changes.
        type: boolean
        x-nullable: false
      overrideGreaterThanZeroPricingConstraint:
        description: System setting to allow overriding the default behavior of not allowing any product with regular prices to be saved at 0 pricing.
        type: boolean
        x-nullable: false
      productExportMaxNumberOfItemPerFile:
        description: the maximum number of product in a file for the product export.
        type: integer
        format: int32
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this command.
      skuUniquenessLevel:
        description: Specifies the product and variant sku uniqueness level.
        type: string
        enum:
          - Global
          - None
    description: ProductSettings
    type: object
  List_QuickLinkCountDetails_:
    title: List<QuickLinkCountDetails>
    type: array
    items:
      $ref: '#/definitions/QuickLinkCountDetails'
  ProductAttributes:
    title: ProductAttributes
    properties:
      attributes:
        description: A list a product attributes
        type: array
        items:
          $ref: '#/definitions/ProductPropertyDefinition'
    description: ProductAttributes
    type: object
  List_ProductDefinition_:
    title: List<ProductDefinition>
    type: array
    items:
      $ref: '#/definitions/ProductDefinition'
  ProductPriceExportInfo:
    title: ProductPriceExportInfo
    properties:
      pid:
        description: The unique identifier of the product to which the pricing is set
        type: string
      prs:
        description: The prices for each price list.
        type: array
        items:
          $ref: '#/definitions/PriceExportInfo'
      vs:
        description: The prices for the product variants.
        type: array
        items:
          $ref: '#/definitions/VariantPriceExportInfo'
    description: ProductPriceExportInfo
    type: object
  PriceExportInfo:
    title: PriceExportInfo
    properties:
      p:
        description: of the price of the Product
        type: number
        format: double
        x-nullable: false
      plid:
        description: the unique identifier of the PriceList
        type: string
    description: PriceExportInfo
    type: object
  VariantPriceExportInfo:
    title: VariantPriceExportInfo
    properties:
      ps:
        description: The prices for each price list.
        type: array
        items:
          $ref: '#/definitions/PriceExportInfo'
      vid:
        description: The unique identifier of the variant of the main product.
        type: string
    description: VariantPriceExportInfo
    type: object
  List_ProductPriceExportInfo_:
    title: List<ProductPriceExportInfo>
    type: array
    items:
      $ref: '#/definitions/ProductPriceExportInfo'
  CreateRelationshipsResult:
    title: CreateRelationshipsResult
    properties:
      count:
        description: Defines the count of relationships created
        type: integer
        format: int32
        x-nullable: false
    description: CreateRelationshipsResult
    type: object
  GetFulfillmentCarrierQuotesResponse:
    title: GetFulfillmentCarrierQuotesResponse
    properties:
      messages:
        description: The messages.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierQuoteMessage'
      quotes:
        description: The quotes.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierQuote'
    description: GetFulfillmentCarrierQuotesResponse
    type: object
  FulfillmentCarrierQuoteMessage:
    title: FulfillmentCarrierQuoteMessage
    properties:
      code:
        type: string
      source:
        type: string
      text:
        type: string
    description: FulfillmentCarrierQuoteMessage
    type: object
  FulfillmentCarrierQuote:
    title: FulfillmentCarrierQuote
    properties:
      quoteId:
        type: string
      fulfillmentCarrierId:
        type: string
        x-nullable: false
      cost:
        type: number
        format: double
        x-nullable: false
      currency:
        type: string
      fulfillmentCarrierName:
        type: string
      fulfillmentCarrierService:
        type: string
      fulfillmentCarrierServiceDescription:
        type: string
      fulfillmentCarrierServiceOther:
        type: string
      fulfillmentCarrierServiceOtherDescription:
        type: string
      fulfillmentCarrierDeliveryDuration:
        type: integer
        format: int32
      fulfillmentCarrierDeliveryDurationDescription:
        type: string
      fulfillmentCarrierImages:
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierImage'
      expectedDeliveryDate:
        type: string
        format: date-time
      isReturn:
        type: boolean
        x-nullable: false
    description: FulfillmentCarrierQuote
    type: object
  FulfillmentCarrierImage:
    title: FulfillmentCarrierImage
    properties:
      size:
        type: integer
        format: int32
        x-nullable: false
      url:
        type: string
    description: FulfillmentCarrierImage
    type: object
  CreateFulfillmentCarrierManifestResponse:
    title: CreateFulfillmentCarrierManifestResponse
    properties:
      manifests:
        description: The created manifests.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierManifest'
    description: CreateFulfillmentCarrierManifestResponse
    type: object
  FulfillmentCarrierManifest:
    title: FulfillmentCarrierManifest
    properties:
      quoteId:
        type: string
      fulfillmentCarrierId:
        type: string
        x-nullable: false
      carrierAccountIdOutbound:
        type: string
      carrierNameOutbound:
        type: string
      carrierServiceLevelOutbound:
        type: string
      cultureName:
        type: string
      documents:
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierDocument'
      issues:
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierManifestIssue'
    description: FulfillmentCarrierManifest
    type: object
  FulfillmentCarrierDocument:
    title: FulfillmentCarrierDocument
    properties:
      quoteDocumentId:
        type: string
      documentFormat:
        type: string
      quoteId:
        type: string
      trackingNumber:
        type: string
      trackingUrl:
        type: string
      labelUrl:
        type: string
      manifestReferenceId:
        type: string
      manifestUrl:
        type: string
    description: FulfillmentCarrierDocument
    type: object
  FulfillmentCarrierManifestIssue:
    title: FulfillmentCarrierManifestIssue
    properties:
      transactionId:
        type: string
      packageId:
        type: string
        x-nullable: false
      orderInformation:
        type: string
      message:
        type: string
      messageLocalized:
        type: string
    description: FulfillmentCarrierManifestIssue
    type: object
  FulfillmentCompetition:
    title: FulfillmentCompetition
    properties:
      created:
        description: The date the fulfillment competition was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the fulfillment competition.
        type: string
      fulfillmentCompetitionLocations:
        description: The list of fulfillment competition locations that are going to compete for fulfillment of the specified shipment.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCompetitionLocation'
      id:
        description: The fulfillment competition identifier.
        type: string
        x-nullable: false
      lastModified:
        description: The date that the last modification was applied to the fulfillment competition.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the fulfillment competition.
        type: string
      orderId:
        description: The identifier of the order.
        type: string
        x-nullable: false
      scopeId:
        description: The scope identifier.
        type: string
      shipmentId:
        description: The identifier of the shipment.
        type: string
        x-nullable: false
      status:
        description: The status of the fulfillment competition.
        type: string
        enum:
          - Pending
          - InProgress
          - Abandoned
          - Completed
          - Canceled
          - Expired
    description: FulfillmentCompetition
    type: object
  FulfillmentCompetitionLocation:
    title: FulfillmentCompetitionLocation
    properties:
      created:
        description: The date the fulfillment competition location was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the fulfillment competition location.
        type: string
      fulfillmentLocationId:
        description: The identifier of the fulfillment location that is part of the competition.
        type: string
        x-nullable: false
      lastModified:
        description: The date that the last modification was applied to the fulfillment competition location.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the fulfillment competition location.
        type: string
      status:
        description: The status of the fulfillment competition location.
        type: string
        enum:
          - Participant
          - Winner
          - OptedOut
    description: FulfillmentCompetitionLocation
    type: object
  FulfillmentExceptionResult:
    title: FulfillmentExceptionResult
    properties:
      fulfillmentExceptions:
        description: The list of fulfillment exceptions.
        type: array
        items:
          $ref: '#/definitions/FulfillmentException'
    description: FulfillmentExceptionResult
    type: object
  FulfillmentException:
    title: FulfillmentException
    properties:
      id:
        description: The fulfillment exception identifier.
        type: string
        x-nullable: false
      scopeId:
        description: The scope identifier.
        type: string
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
      shipmentFulfillmentStatus:
        description: The shipment fulfillment state.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
        x-nullable: false
      pickUpLocationId:
        description: The pickup location identifier.
        type: string
      lineItemId:
        description: The line item identifier.
        type: string
        x-nullable: false
      reasonLookupValue:
        description: The reason lookup value.
        type: string
      note:
        description: The note.
        type: string
      isDeleted:
        description: The value indicating whether the exception is deleted.
        type: boolean
        x-nullable: false
      created:
        description: The date the exception was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the exception.
        type: string
      lastModified:
        description: The date the exception was last modified.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the exception.
        type: string
    description: FulfillmentException
    type: object
  ConfirmFulfillmentCarrierQuotesResponse:
    title: ConfirmFulfillmentCarrierQuotesResponse
    properties:
      confirmedQuotes:
        description: The confirmed quotes.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierQuoteConfirmation'
    description: ConfirmFulfillmentCarrierQuotesResponse
    type: object
  FulfillmentCarrierQuoteConfirmation:
    title: FulfillmentCarrierQuoteConfirmation
    properties:
      confirmationId:
        type: string
      quoteId:
        type: string
      packageId:
        type: string
        x-nullable: false
      isReturn:
        type: boolean
        x-nullable: false
      fulfillmentCarrierId:
        type: string
        x-nullable: false
      carrierAccountIdOutbound:
        type: string
      carrierAccountNameOutbound:
        type: string
      carrierNameOutbound:
        type: string
      carrierServiceLevelOutbound:
        type: string
      carrierManifestRequirement:
        type: string
        enum:
          - Unknown
          - Required
          - NotRequired
          - Excluded
      documents:
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierDocument'
    description: FulfillmentCarrierQuoteConfirmation
    type: object
  GetFulfillmentCarrierDocumentsResponse:
    title: GetFulfillmentCarrierDocumentsResponse
    properties:
      documents:
        description: The documents.
        type: array
        items:
          $ref: '#/definitions/FulfillmentCarrierDocument'
    description: GetFulfillmentCarrierDocumentsResponse
    type: object
  FulfillmentPackage:
    title: FulfillmentPackage
    properties:
      carrierAccountIdOutbound:
        description: The carrier account id used for the package on outbound.
        type: string
      carrierAccountNameOutbound:
        description: The carrier account name used for the package on outbound.
        type: string
      carrierManifestRequirement:
        description: The carrier manifest requirement.
        type: string
        enum:
          - Unknown
          - Required
          - NotRequired
          - Excluded
      carrierManifestStatus:
        description: The carrier manifest status.
        type: string
        enum:
          - None
          - Pending
          - Manifested
          - Error
      carrierNameOutbound:
        description: The carrier name used for the package on outbound.
        type: string
      carrierServiceLevelOutbound:
        description: The carrier sevice level used for the package on outbound.
        type: string
      created:
        description: The date the fulfillment package was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the fulfillment package.
        type: string
      fulfillmentPackageItems:
        description: The fulfillment package items.
        type: array
        items:
          $ref: '#/definitions/FulfillmentPackageItem'
      fulfillmentPackageType:
        $ref: '#/definitions/FulfillmentPackageType'
        description: The fulfillment package type.
      fulfillmentPackageTypeId:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      id:
        description: The fulfillment package identifier.
        type: string
        x-nullable: false
      lastModified:
        description: The date that the last modification was applied to the fulfillment package.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the fulfillment package.
        type: string
      manifested:
        description: The date the package was manifested.
        type: string
        format: date-time
      manifestedBy:
        description: The identifier of the operator who manifested the fulfillment package.
        type: string
      manifestReferenceId:
        description: The manifest reference id.
        type: string
      manifestUrl:
        description: The manifest url.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this package.
      returnTrackingNumber:
        description: The return tracking number.
        type: string
      returnTrackingReferenceId:
        description: The return tracking reference id.
        type: string
      returnTrackingUrl:
        description: The return tracking url.
        type: string
      scopeId:
        description: The scope identifier.
        type: string
      serialShippingContainerCode:
        description: The serial shipping container code (SSCC).
        type: string
      total:
        description: The total amount value for the fulfillment package.
        type: number
        format: double
        x-nullable: false
      trackingNumber:
        description: The tracking number.
        type: string
      trackingReferenceId:
        description: The tracking reference id.
        type: string
      trackingUrl:
        description: The tracking url.
        type: string
      weight:
        description: The package weight.
        type: number
        format: double
      weightUOM:
        description: The package unit of measure for weight.
        type: string
    description: FulfillmentPackage
    type: object
  FulfillmentPackageType:
    title: FulfillmentPackageType
    properties:
      created:
        description: The date The fulfillment package type was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the operator who created the fulfillment package type.
        type: string
      description:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type description.
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type display name.
      distanceUOM:
        description: The Distance UOM.
        type: string
      height:
        description: The UOM Height.
        type: number
        format: double
        x-nullable: false
      id:
        description: The fulfillment package type identifier.
        type: string
        x-nullable: false
      isActive:
        description: The active flag for the fulfillment package Type.
        type: boolean
        x-nullable: false
      lastModified:
        description: the date that the last modification was applied to the fulfillment package type.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the fulfillment package type.
        type: string
      length:
        description: The UOM Length.
        type: number
        format: double
        x-nullable: false
      scopeId:
        description: The scope identifier.
        type: string
      shortDisplayName:
        $ref: '#/definitions/LocalizedString'
        description: The fulfillment package type short display name.
      width:
        description: The UOM Width.
        type: number
        format: double
        x-nullable: false
    description: FulfillmentPackageType
    type: object
  FulfillmentSLA:
    title: FulfillmentSLA
    properties:
      created:
        description: the date the fulfillment sla was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identifier of the operator who created the fulfillment sla.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location identifier.
        type: string
      id:
        description: The fulfillment sla identifier.
        type: string
        x-nullable: false
      lastModified:
        description: The date that the last modification was applied to the fulfillment sla.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identifier of the operator who last modified the fulfillment sla.
        type: string
      scopeId:
        description: The scope identifier.
        type: string
      shipmentId:
        description: The shipment identifier.
        type: string
        x-nullable: false
      delayInMinutes:
        description: The delay before the sla will expire.
        type: integer
        format: int32
        x-nullable: false
      expirationDate:
        description: The time when the sla will expire.
        type: string
        format: date-time
        x-nullable: false
      expiryWarningTimeInMinutes:
        description: The warning time before the sla will expire.
        type: integer
        format: int32
        x-nullable: false
      isActive:
        description: A value indicating whether the fulfillment sla is active.
        type: boolean
        x-nullable: false
      name:
        description: The name.
        type: string
      orderId:
        description: The order identifier.
        type: string
        x-nullable: false
    description: FulfillmentSLA
    type: object
  FulfillmentCompetitionQueryResult:
    title: FulfillmentCompetitionQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/FulfillmentCompetition'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FulfillmentCompetitionQueryResult
    type: object
  QueryCountResult:
    title: QueryCountResult
    properties:
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: QueryCountResult
    type: object
  FulfillmentOrderQueryResult:
    title: FulfillmentOrderQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/FulfillmentOrder'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FulfillmentOrderQueryResult
    type: object
  FulfillmentOrder:
    title: FulfillmentOrder
    properties:
      billingCurrency:
        description: The currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      created:
        description: The date when the order as created.
        type: string
        format: date-time
        x-nullable: false
      customerId:
        description: The customer id who made the order.
        type: string
      customerName:
        description: The complete name of the customer who made the order.
        type: string
      fulfillmentShipments:
        description: The list of fulfillment shipments for this order.
        type: array
        items:
          $ref: '#/definitions/FulfillmentShipment'
      id:
        description: The id of the order.
        type: string
      orderNumber:
        description: The order number.
        type: string
      scopeId:
        description: The scope id.
        type: string
      total:
        description: The total of the order.
        type: number
        format: double
        x-nullable: false
    description: FulfillmentOrder
    type: object
  FulfillmentShipment:
    title: FulfillmentShipment
    required:
      - id
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      aggregatedStatus:
        description: The name of the aggregated status when applicable.
        type: string
      allowedManualTransitions:
        description: a list of allowed manual transitions from the shipment current status.
        type: array
        items:
          type: string
      created:
        description: Date the shipment fullfillment was created.
        type: string
        format: date-time
        x-nullable: false
      executionResult:
        description: The execution result of the shipment processing.
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      expectedDeliveryDate:
        description: The expected delivery date.
        type: string
        format: date-time
      fulfillmentExceptions:
        description: The fulfillment exceptions.
        type: array
        items:
          $ref: '#/definitions/FulfillmentException'
      fulfillmentLocationId:
        description: The fulfillment location id.
        type: string
        x-nullable: false
      fulfillmentMethodType:
        description: The Fulfillment Method Type that will be used to complete the shipment.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      fulfillmentScheduledTimeBeginDate:
        description: The begin date and time scheduled for the fulfillment.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: The end date and time scheduled for the fulfillment.
        type: string
        format: date-time
      isProcessing:
        description: A value indicating whether the shipment is processing.
        type: boolean
        x-nullable: false
      lastModified:
        description: Date that the last modification was applied to the shipment fullfillment.
        type: string
        format: date-time
        x-nullable: false
      nbItems:
        description: The number of items in the shipment.
        type: integer
        format: int32
        x-nullable: false
      nbUnits:
        description: The number of units in the shipment.
        type: number
        format: double
        x-nullable: false
      pickUpLocationId:
        description: The pick-up location identifier required when the selected shipping method type is ship to store; any value will be ignored otherwise.
        type: string
      returnTrackingNumber:
        description: The shipment return tracking number provided by the shipping provider.
        type: string
      shippingAddress:
        $ref: '#/definitions/Address'
        description: The address to use as destination for the shipment.
      shippingProviderId:
        description: The fulfillment provider id.
        type: string
        x-nullable: false
      slAs:
        description: The fulfillment SLAs.
        type: array
        items:
          $ref: '#/definitions/OrderFulfillmentSLA'
      status:
        description: The current status of the shipment.
        type: string
      trackingNumber:
        description: The shipment tracking number provided by the shipping provider.
        type: string
    description: FulfillmentShipment
    type: object
  FulfillmentPackageResult:
    title: FulfillmentPackageResult
    properties:
      result:
        description: The list of resulting fulfillment packages.
        type: array
        items:
          $ref: '#/definitions/FulfillmentPackage'
    description: FulfillmentPackageResult
    type: object
  FulfillmentPackageTypeResult:
    title: FulfillmentPackageTypeResult
    properties:
      result:
        description: The list of resulting fulfillment package types
        type: array
        items:
          $ref: '#/definitions/FulfillmentPackageType'
    description: FulfillmentPackageTypeResult
    type: object
  FulfillmentSLAQueryResult:
    title: FulfillmentSLAQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/FulfillmentSLA'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FulfillmentSLAQueryResult
    type: object
  List_FulfillmentLocation_:
    title: List<FulfillmentLocation>
    type: array
    items:
      $ref: '#/definitions/FulfillmentLocation'
  FindFulfillmentLocationsQueryResult:
    title: FindFulfillmentLocationsQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/FulfillmentLocation'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: FindFulfillmentLocationsQueryResult
    type: object
  FulfillmentAvailability:
    title: FulfillmentAvailability
    properties:
      status:
        description: Gets or sets a value whether fulfillment is available.
        type: boolean
    description: FulfillmentAvailability
    type: object
  FulfillmentLocationsDelayCalculationResult:
    title: FulfillmentLocationsDelayCalculationResult
    properties:
      results:
        description: Gets or sets a value whether fulfillment is available.
        type: array
        items:
          $ref: '#/definitions/FulfillmentLocationDelayCalculationResult'
    description: FulfillmentLocationsDelayCalculationResult
    type: object
  FulfillmentLocationDelayCalculationResult:
    title: FulfillmentLocationDelayCalculationResult
    required:
      - endDate
      - fulfillmentLocationId
      - startDate
    properties:
      endDate:
        description: the end date and time for the delay in utc.
        type: string
        format: date-time
        x-nullable: false
      fulfillmentLocationId:
        description: the fulfillment location id.
        type: string
        x-nullable: false
      startDate:
        description: the start date and time for the delayin utc.
        type: string
        format: date-time
        x-nullable: false
    description: FulfillmentLocationDelayCalculationResult
    type: object
  DayAvailabilityResult:
    title: DayAvailabilityResult
    properties:
      scheduleResults:
        description: the date schedule availability
        type: array
        items:
          $ref: '#/definitions/DayAvailability'
    description: DayAvailabilityResult
    type: object
  DayAvailability:
    title: DayAvailability
    properties:
      date:
        description: the date that the slot instances are for.
        type: string
        format: date-time
        x-nullable: false
      slotInstances:
        description: the slot instances.
        type: array
        items:
          $ref: '#/definitions/SlotInstance'
    description: DayAvailability
    type: object
  SlotInstance:
    title: SlotInstance
    properties:
      hint:
        description: An optional hint that the provider may provide to indicate why the slot is unavailable.
        type: string
      slot:
        $ref: '#/definitions/TimeSlot'
        description: The slot that was mapped to the specific day.
      slotReservationSummary:
        $ref: '#/definitions/SlotReservationSummary'
        description: The reservation summary for the slot.
      state:
        description: The current state (avaiability) of the slot.
        type: string
        enum:
          - Unspecified
          - Available
          - Unavailable
          - Full
    description: SlotInstance
    type: object
  SlotReservationSummary:
    title: SlotReservationSummary
    properties:
      calculatedAvailable:
        description: The calculated availability for the timeslot. (Quota - TentativeTotal - ConfirmedTotal).
        type: integer
        format: int32
        x-nullable: false
      confirmedTotal:
        description: The total confirmed reservations for the timeslot.
        type: integer
        format: int32
        x-nullable: false
      maximumReservations:
        description: The maximum reservations for the timeslot. (Based on Quota from timeslot).
        type: integer
        format: int32
        x-nullable: false
      tentativeTotal:
        description: The total tentative reservations for the timeslot.
        type: integer
        format: int32
        x-nullable: false
    description: SlotReservationSummary
    type: object
  List_FulfillmentMethodType_:
    title: List<FulfillmentMethodType>
    type: array
    items:
      type: string
      x-nullable: false
  List_TimeSlot_:
    title: List<TimeSlot>
    type: array
    items:
      $ref: '#/definitions/TimeSlot'
  TimeSlotReservationResult:
    title: TimeSlotReservationResult
    properties:
      reservations:
        type: array
        items:
          $ref: '#/definitions/TimeSlotReservation'
    description: TimeSlotReservationResult
    type: object
  TimeSlotReservation:
    title: TimeSlotReservation
    required:
      - cartCustomerId
      - cartName
      - cartScopeId
      - fulfillmentLocationId
      - fulfillmentLocationTimeSlotId
      - id
      - reservationDate
      - reservationStatus
    properties:
      cartCustomerId:
        description: The cart customer id associated with the reservation.
        type: string
        x-nullable: false
      cartName:
        description: The cart name associated with the reservation.
        type: string
      cartScopeId:
        description: The cart scope id associated with the reservation.
        type: string
      comment:
        description: The reservation comment.
        type: string
      created:
        description: The date and time the reservation was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The user who created the reservation.
        type: string
      expiryDateTime:
        description: The reservation expiry time. Required for Tentative status.
        type: string
        format: date-time
      expiryWarningDateTime:
        description: The reservation expiry warning time. Required for Tentative status.
        type: string
        format: date-time
      fulfillmentLocationId:
        description: The unique identifier of a fulfillment location.
        type: string
        x-nullable: false
      fulfillmentLocationTimeSlotId:
        description: The unique identifier of a fulfillment location timeslot.
        type: string
        x-nullable: false
      id:
        description: The unique identifier of the time slot.
        type: string
        x-nullable: false
      lastModified:
        description: The date and time the reservation was last modified.
        type: string
        format: date-time
      lastModifiedBy:
        description: The user who last modified the reservation.
        type: string
      maxNumberOfRenewals:
        description: The maximum number of renewals that can be performed on this reservation.
        type: integer
        format: int32
      numberOfRenewals:
        description: The number of renewals performed on this reservation.
        type: integer
        format: int32
        x-nullable: false
      orderId:
        description: The unique identifier of an order.
        type: string
      orderNumber:
        description: The order number associated with the reservation.
        type: string
      reservationDate:
        description: The reservation date.
        type: string
        format: date-time
        x-nullable: false
      reservationStatus:
        description: The reservation status.
        type: string
        enum:
          - Tentative
          - Confirmed
          - Expired
          - Voided
      shipmentId:
        description: The unique identifier of a shipment.
        type: string
    description: TimeSlotReservation
    type: object
  CartSummary:
    title: CartSummary
    required:
      - id
      - customerId
      - name
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      additionalFeeTotal:
        description: 'discount amount applied on the cart, independently from line item and shipping discounts.'
        type: number
        format: double
      billingCurrency:
        description: the currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      cartType:
        description: 'the cart type, according to the CartType lookup.'
        type: string
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      customerId:
        description: the ID of the customer owning this cart.
        type: string
        x-nullable: false
      discountAmount:
        description: 'discount amount applied on the cart, independently from line item and shipping discounts.'
        type: number
        format: double
      discountTotal:
        description: 'the computed sum of all discounts applied to the cart (including order, line item and shipping level discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      merchandiseTotal:
        description: 'the total amount of all line items merchandise without discounts. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      name:
        description: the name of the cart.
        type: string
      scopeId:
        description: the scope.
        type: string
      shipmentSummaries:
        description: the list of shipment summaries.
        type: array
        items:
          $ref: '#/definitions/ShipmentSummary'
      shippingTotal:
        description: 'the computed sum of all shipment amounts. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      source:
        description: the cart source.
        type: string
      subTotal:
        description: 'the computed sum of all line items totals, including line item and order level discount. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      taxTotal:
        description: 'the computed sum of all tax amount for the order. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      total:
        description: 'the grand total for the cart. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
    description: CartSummary
    type: object
  ShipmentSummary:
    title: ShipmentSummary
    properties:
      discountAmount:
        description: Reward amount applied on the shipment
        type: number
        format: double
      lineItems:
        description: The list of lineitems
        type: array
        items:
          $ref: '#/definitions/LineItemSummary'
      shipmentId:
        description: The unique identifier of the shipment
        type: string
      total:
        description: The total of the shipment including discounts
        type: number
        format: double
    description: ShipmentSummary
    type: object
  LineItemSummary:
    title: LineItemSummary
    required:
      - id
      - catalogId
      - productId
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      additionalFeeAmount:
        description: 'The amount for all discounts applied to this line item. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      catalogId:
        description: The unique identifier of the catalog where the product belongs.
        type: string
      currentPrice:
        description: 'The price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      currentPricePriceListCategory:
        description: The category of the current price
        type: string
      currentPricePriceListId:
        description: The id of the current price
        type: string
      currentPricePriceListType:
        description: The type of the current price
        type: string
      discountAmount:
        description: 'The amount for all discounts applied to this line item. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      itemFormat:
        description: the ItemFormat of the product.
        type: number
        format: double
      listPrice:
        description: 'The price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      productDisplayName:
        description: The UI-friendly display name for the product.
        type: string
      productId:
        description: The unique identifier of the product
        type: string
      quantity:
        description: 'The quantity of product to purchase. A decimal number can be used for products sold with a unit of measure (pounds, kilos, etc.).'
        type: number
        format: double
        x-nullable: false
      recurringOrderFrequencyName:
        type: string
      recurringOrderProgramName:
        type: string
      regularPrice:
        description: 'The current regular price for one instance of the item (quantity = 1), at the moment that the item is to be processed by the workflow.'
        type: number
        format: double
      regularPricePriceListCategory:
        description: The category of the regular price
        type: string
      regularPricePriceListId:
        description: The id of the regular price
        type: string
      shipmentId:
        description: The unique identifier of the shipment to use for this item
        type: string
      sku:
        description: The LineItem Sku
        type: string
      status:
        type: string
      total:
        description: 'The total amount for this line item, including discounts (list price * quantity - discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      unitOfMeasure:
        description: the UnitOfMeasure of the product.
        type: string
      variantId:
        description: The unique identifier of the product variant if the purchased product is a variant
        type: string
    description: LineItemSummary
    type: object
  List_LineItem_:
    title: List<LineItem>
    type: array
    items:
      $ref: '#/definitions/LineItem'
  ProcessedCart:
    title: ProcessedCart
    required:
      - id
      - customerId
      - name
    properties:
      id:
        description: The unique identifier of the entity.
        type: string
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The bag containing all the custom attributes.
      created:
        description: Date the entity was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the entity
        type: string
      lastModified:
        description: Date that the last modification was applied to the entity
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the entity
        type: string
      additionalFeeTotal:
        description: the sum of LineItems totals.
        type: number
        format: double
      adjustmentTotal:
        description: 'the total amount of adjustments.  This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      billingCurrency:
        description: the currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      cartType:
        description: 'the cart type, according to the CartType lookup.'
        type: string
      cartVersion:
        description: the version of the cart
        type: string
      coupons:
        description: the collection of coupon codes included in the order.
        type: array
        items:
          $ref: '#/definitions/Coupon'
      cultureName:
        description: the culture in which the cart is being processed.
        type: string
      customer:
        $ref: '#/definitions/CustomerSummary'
        description: the customer information.
      customerId:
        description: the ID of the customer owning this cart.
        type: string
        x-nullable: false
      discountTotal:
        description: 'the computed sum of all discounts applied to the cart (including order, line item and fulfillment level discounts). This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      fulfillmentCost:
        description: 'the computed sum of all shipment cost. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      fulfillmentCostWithoutDiscount:
        description: the fulfillment cost without discount.
        type: number
        format: double
        x-nullable: false
      fulfillmentLevelDiscountTotal:
        description: the sum of Shipments discounts. Shipment.DiscountAmount.
        type: number
        format: double
        x-nullable: false
      itemCount:
        description: the line item count.
        type: integer
        format: int32
        x-nullable: false
      lineItemLevelDiscount:
        description: the minimum value between the sum of LineItem.DiscountAmount and LineItemsTotalWithoutDiscount.
        type: number
        format: double
        x-nullable: false
      lineItemsTotal:
        description: the sum of LineItems totals.
        type: number
        format: double
        x-nullable: false
      lineItemsTotalWithoutDiscount:
        description: the sum of LineItems totals without discount.
        type: number
        format: double
        x-nullable: false
      merchandiseTotal:
        description: 'the total amount of all line items merchandise without discounts. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      name:
        description: the name of the cart.
        type: string
      orderLocation:
        $ref: '#/definitions/OrderLocationSummary'
        description: the order location information.
      originalPromotions:
        description: the promotion versions applied for the original order.
        type: array
        items:
          $ref: '#/definitions/PromotionVersion'
      payments:
        description: The collection of payments to use for this order.
        type: array
        items:
          $ref: '#/definitions/Payment'
      scopeId:
        description: the unique identifier of the scope associated to the cart.
        type: string
      shipmentLevelDiscountTotal:
        description: the sum of Discounts amounts.
        type: number
        format: double
        x-nullable: false
      shipments:
        description: the collection of shipments associated to this order.
        type: array
        items:
          $ref: '#/definitions/Shipment'
      source:
        description: the cart source.
        type: string
      status:
        description: the status of the cart.
        type: string
      subTotal:
        description: 'the computed sum of all line items totals, including line item and order level discount. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      subTotalDiscount:
        description: the sum of LineItems totals without discount.
        type: number
        format: double
        x-nullable: false
      taxTotal:
        description: 'the computed sum of all tax amount for the order. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      total:
        description: 'the grand total for the cart. This value is usually computed during the workflow execution. When null, indicates that the value has not been calculated.'
        type: number
        format: double
      messages:
        description: the customer information.
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
    description: ProcessedCart
    type: object
  List_Payment_:
    title: List<Payment>
    type: array
    items:
      $ref: '#/definitions/Payment'
  EntityState:
    title: EntityState
    properties:
      entityId:
        description: The unqiue id of the entity.
        type: string
      entityType:
        description: The type of the entity.
        type: string
      isReadOnly:
        description: A state flag indicating whether the entity can be modified.
        type: boolean
        x-nullable: false
    description: EntityState
    type: object
  List_EntityState_:
    title: List<EntityState>
    type: array
    items:
      $ref: '#/definitions/EntityState'
  OrderFulfillmentState:
    title: OrderFulfillmentState
    properties:
      isCancelable:
        description: a calculated value assessment whether the whole order can be put canceled. This occurs only if all shipments can be put on canceled.
        type: boolean
        x-nullable: false
      isHoldable:
        description: a calculated value assessment whether the whole order can be put on hold. This occurs only if all shipments can be put on hold.
        type: boolean
        x-nullable: false
      isProcessing:
        description: value indicating whether if the order is being processed.
        type: boolean
        x-nullable: false
      orderId:
        description: the unique system identifier
        type: string
        x-nullable: false
      orderNumber:
        description: The order number.
        type: string
      processingExecutionResult:
        description: The execution result of the order post processing.
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      processingMessages:
        description: The execution messages when the order was processed.
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      processingValidationResults:
        description: The validation results when the order was processed.
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
      shipmentFulfillmentStates:
        description: the list of the order's list of shipment fulfillment state.
        type: array
        items:
          $ref: '#/definitions/ShipmentFulfillmentState'
      status:
        description: the current order status.
        type: string
    description: OrderFulfillmentState
    type: object
  ShipmentFulfillmentState:
    title: ShipmentFulfillmentState
    properties:
      allowedManualTransitions:
        description: a list of allowed manual transitions from the shipment current status.
        type: array
        items:
          type: string
      allowedStatusChanges:
        description: a list of allowed status changes that can be requested.  Requesting any other changes will fail.
        type: array
        items:
          type: string
      allowsShipmentChangesProcessing:
        description: a flag indicating that the shipment changes can be reprocessed within the fulfillment workflow
        type: boolean
        x-nullable: false
      created:
        description: The creation date of the shipment fulfillment state.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identity of the user who created the state.
        type: string
      executionResult:
        description: the execution result of the shipment processing
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      fulfillmentLocationId:
        description: the unique identifier of the fulfillment location that will complete the shipment process.
        type: string
        x-nullable: false
      fulfillmentLocationScope:
        description: the fulfillment location scope.
        type: string
      fulfillmentMethodType:
        description: the FulfillmentMethodType that will be used to complete the shipment.
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      fulfillmentProviderId:
        description: the fulfillment provider identifier.
        type: string
        x-nullable: false
      fulfillmentScheduledTimeBeginDate:
        description: the scheduled time at which fulfillment will begin.
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: the scheduled time at which fulfillment will end.
        type: string
        format: date-time
      isFinished:
        description: a value indicating whether if that fulfillment is finished for this shipment.
        type: boolean
        x-nullable: false
      isProcessing:
        description: a value indicating whether if the shipment is being processed or not.
        type: boolean
        x-nullable: false
      isResumable:
        description: the fulfillment workflow is resumable.
        type: boolean
        x-nullable: false
      lastModified:
        description: the last modification date.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identity of the user who modified the state.
        type: string
      lockedForTaskProcessingUntil:
        description: the UTC datetime until when the shipment state and content will be exclusively open for modifications by the fulfillment workflow task.
        type: string
        format: date-time
      messages:
        description: The execution messages when the shipment was processed
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      nextStatuses:
        description: a list of the potential status the shipment could transition to from its current status.
        type: array
        items:
          type: string
      pickUpLocationId:
        description: The pick-up location identifier required when the selected shipping method type is ship to store; any value will be ignored otherwise.
        type: string
      readyToBeginFulfillmentOn:
        description: the date on which the shipment is ready to be processed.
        type: string
        format: date-time
      retryCount:
        description: the number of times the workflow was restarted after an error.
        type: integer
        format: int32
        x-nullable: false
      shipmentId:
        description: the unique system shipment identifier.
        type: string
        x-nullable: false
      shipmentLastProcessedOn:
        description: the date and time on which the shipment was last processed
        type: string
        format: date-time
      status:
        description: the current status of the shipment.
        type: string
      taskId:
        description: the fulfillment task Id associated with the shipment processing.
        type: string
      taskStatus:
        description: the fulfillment task status associated with the shipment processing.
        type: string
      taskWorkflowXamlPath:
        description: the path of the fulfillment workflow.
        type: string
      validationResults:
        description: the validation results when the shipment was processed.
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
      workflowInError:
        description: the fulfillment workflow is in error.
        type: boolean
        x-nullable: false
    description: ShipmentFulfillmentState
    type: object
  RmaListResult:
    title: RmaListResult
    properties:
      result:
        description: the list of resulting RMAs
        type: array
        items:
          $ref: '#/definitions/Rma'
    description: RmaListResult
    type: object
  Rma:
    title: Rma
    properties:
      created:
        description: The creation date.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The identity of the user who created the payment.
        type: string
      id:
        description: the unique identifier of the RMA
        type: string
        x-nullable: false
      isFinished:
        description: Check if RMA had reached a final status
        type: boolean
        x-nullable: false
      lastModified:
        description: The last modification date.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The identity of the user who modified the payment.
        type: string
      orderNumber:
        description: The Order Number related to the RMA
        type: string
      rmaExternalNumber:
        description: External RMA number
        type: string
      rmaItems:
        description: RMA item details
        type: array
        items:
          $ref: '#/definitions/RmaItem'
      rmaNumber:
        description: RMA number
        type: string
      status:
        description: the process status of the RMA
        type: string
      totalAmountRefunded:
        description: 'Total amount of refunded items, if applicable'
        type: number
        format: double
      customerId:
        description: the Identifier of the Customer who owns the RMA
        type: string
      customerEmail:
        description: the email address of the customer related to RMA
        type: string
      customerFirstName:
        description: the first name of the customerrelated to RMA
        type: string
      customerLastName:
        description: Gets or set the last name of the customer related to RMA
        type: string
      customerType:
        description: the type of the customerrelated to RMA
        type: string
        enum:
          - Registered
          - Guest
          - Unregistered
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: 'Custom information about RMA, if applicable'
      scopeId:
        description: Scope identifier
        type: string
    description: Rma
    type: object
  OrderHistoryItem:
    title: OrderHistoryItem
    properties:
      category:
        description: The category of this history item.
        type: string
      comment:
        description: The comment associated to this history item.
        type: string
      createdDate:
        description: The date this item was created.
        type: string
        format: date-time
        x-nullable: false
      customData:
        $ref: '#/definitions/PropertyBag'
        description: Dictionary containing custom data for this item.
      entityId:
        description: The entity id related to this history item.
        type: string
      fulfillmentLocationId:
        description: The fulfillment location id related to this item.
        type: string
      id:
        description: The id of the item.
        type: string
      lastModifiedBy:
        description: The user that created the item.
        type: string
      newValue:
        description: The new value related to this history change.
        type: string
      oldValue:
        description: The old value related to this history change.
        type: string
      orderNumber:
        description: The oder number related to this item.
        type: string
      reason:
        description: The reason selected for this history change.
        type: string
      shipmentId:
        description: The shipment id related to this item.
        type: string
    description: OrderHistoryItem
    type: object
  List_OrderHistoryItem_:
    title: List<OrderHistoryItem>
    type: array
    items:
      $ref: '#/definitions/OrderHistoryItem'
  GetFulfillmentMethodsResponse:
    title: GetFulfillmentMethodsResponse
    properties:
      fulfillmentMethods:
        description: List of fulfillment mnethods.
        type: array
        items:
          $ref: '#/definitions/FulfillmentMethodInfo'
    description: GetFulfillmentMethodsResponse
    type: object
  FulfillmentMethodInfo:
    title: FulfillmentMethodInfo
    properties:
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the UI-friendly name for this shipping method.
      fulfillmentMethodType:
        description: The FulfillmentMethodType to which the method belongs
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      name:
        description: the name of the shipping method.
        type: string
      shippingProviderId:
        description: the shipping provider id.
        type: string
    description: FulfillmentMethodInfo
    type: object
  List_FulfillmentMethod_:
    title: List<FulfillmentMethod>
    type: array
    items:
      $ref: '#/definitions/FulfillmentMethod'
  OrderSettings:
    title: OrderSettings
    properties:
      allowManualAdjustmentsOfShipmentTotal:
        description: allows the final total of a shipment to be modified
        type: boolean
        x-nullable: false
      cartExpirationDays:
        description: the cart expiration days
        type: integer
        format: int32
        x-nullable: false
      defaultCartCheckoutWorkflow:
        description: the default checkout workflow
        type: string
      defaultCartTotalWorkflow:
        description: the default total workflow
        type: string
      defaultOrderProcessingWorkflow:
        description: the default checkout workflow
        type: string
      defaultOrderTotalWorkflow:
        description: the default checkout workflow
        type: string
      defaultSubmitOrderWorkflow:
        description: the default submit order workflow
        type: string
      isFulfillmentProcessingEnabled:
        description: whether order processing is enabled
        type: boolean
        x-nullable: false
      isInStorePickingAllowed:
        description: a value indicating whether in store picking is allowed
        type: boolean
        x-nullable: false
      isOrderAuditEnabled:
        description: determine if the changes made to an order will be audited
        type: boolean
        x-nullable: false
      isOrderEditionEnabled:
        description: whether order edition is enabled
        type: boolean
        x-nullable: false
      limitCustomerSearchToCurrentAndChildScopes:
        description: the customer search is limited to the current and child scopes only
        type: boolean
        x-nullable: false
      orderableInventoryStatuses:
        description: the list of inventory statuses available to order
        type: string
      orderCanceledWorkflow:
        description: the order canceled workflow
        type: string
      orderPostProcessingWorkflow:
        description: the order post processing workflow
        type: string
      orderValueMaximumFilter:
        description: the order value maximum filter
        type: integer
        format: int32
        x-nullable: false
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: the property bag containing extended properties for this command
      storePickerDefaultTab:
        description: store picker default tab in the new order wizard
        type: string
    description: OrderSettings
    type: object
  TaxCategory:
    title: TaxCategory
    properties:
      description:
        description: the textual description of the tax category object.
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: the tax category display name.
      id:
        description: the tax category ID.
        type: string
      isSupported:
        description: a value indicating whether this tax category is active or not.
        type: boolean
        x-nullable: false
      isSystem:
        description: a value indicating whether this category is only for system.
        type: boolean
        x-nullable: false
      name:
        description: the tax category name.
        type: string
    description: TaxCategory
    type: object
  List_TaxCategory_:
    title: List<TaxCategory>
    type: array
    items:
      $ref: '#/definitions/TaxCategory'
  TaxProviderDetails:
    title: TaxProviderDetails
    properties:
      displayName:
        description: The display name of this tax provider
        type: string
      name:
        description: The name of this provider
        type: string
      taxProviderId:
        description: The identifier for this provider
        type: string
        x-nullable: false
    description: TaxProviderDetails
    type: object
  List_TaxProviderDetails_:
    title: List<TaxProviderDetails>
    type: array
    items:
      $ref: '#/definitions/TaxProviderDetails'
  ShipmentDocumentSummaryQueryResult:
    title: ShipmentDocumentSummaryQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/ShipmentDocumentSummary'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: ShipmentDocumentSummaryQueryResult
    type: object
  ShipmentDocumentSummary:
    title: ShipmentDocumentSummary
    properties:
      documentType:
        description: document type.
        type: string
      id:
        description: the id of the shipment document.
        type: string
        x-nullable: false
      name:
        description: name of the document.
        type: string
      orderId:
        description: the id of the order associated to the shipment.
        type: string
        x-nullable: false
      publicUri:
        description: public uri.
        type: string
      shipmentId:
        description: the id of the associated shipment.
        type: string
        x-nullable: false
    description: ShipmentDocumentSummary
    type: object
  RenderOrderShipmentTemplateResponse:
    title: RenderOrderShipmentTemplateResponse
    required:
      - cultureName
    properties:
      content:
        description: the rendered template.
        type: string
      cultureName:
        description: The name of the culture (language) to used to render the template.
        type: string
      orderId:
        description: the id of the order associated to the shipment.
        type: string
        x-nullable: false
      scopeId:
        description: the scope of the shipment.
        type: string
      shipmentId:
        description: the id of the associated shipment.
        type: string
        x-nullable: false
    description: RenderOrderShipmentTemplateResponse
    type: object
  RmaRequestResult:
    title: RmaRequestResult
    properties:
      errorCodes:
        $ref: '#/definitions/ICollection_String_'
        description: 'if the response is NOT successfull, here are the errorcodes'
      isSuccess:
        description: specifies if the response is successful
        type: boolean
        x-nullable: false
      rma:
        $ref: '#/definitions/Rma'
        description: The RMA object
    description: RmaRequestResult
    type: object
  ICollection_String_:
    title: ICollection`1
    properties: {}
    description: ICollection<String>
    type: object
  ShipmentDocumentQueryResult:
    title: ShipmentDocumentQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/ShipmentDocument'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: ShipmentDocumentQueryResult
    type: object
  ShipmentDocument:
    title: ShipmentDocument
    properties:
      additionalNotes:
        description: additional notes related to the confirmation.
        type: string
      contentType:
        description: The content type of the blob object.
        type: string
      created:
        description: the date when the pickup confirmation was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the user id of the user that created the pickup confirmation.
        type: string
      document:
        description: the value of the base64 media.
        type: string
      documentType:
        description: document type.
        type: string
      id:
        description: the id of the shipment document.
        type: string
        x-nullable: false
      imageHeight:
        description: the height of the image.
        type: number
        format: double
        x-nullable: false
      imageWidth:
        description: the width of the image.
        type: number
        format: double
        x-nullable: false
      lastModified:
        description: the last modified date of the shipment document.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the user who last modified the shipment acquired confirmatio.
        type: string
      name:
        description: name of the media.
        type: string
      orderId:
        description: the id of the order associated to the shipment.
        type: string
        x-nullable: false
      path:
        description: the path of the shipment document in the blob.
        type: string
      proofOfIdentity:
        description: type of proof used to identify receiver.
        type: string
      recipient:
        description: the name of the person who picked up the shipment.
        type: string
      shipmentId:
        description: the id of the associated shipment.
        type: string
        x-nullable: false
    description: ShipmentDocument
    type: object
  ShipmentFulfillmentInfoQueryResult:
    title: ShipmentFulfillmentInfoQueryResult
    properties:
      results:
        description: 'The current results. If the service request uses paging, this will be one page of items.'
        type: array
        items:
          $ref: '#/definitions/ShipmentFulfillmentInfo'
      totalCount:
        description: 'The total number of records available. If the service request is using paging, this should be used to calculate the number of pages of data.'
        type: integer
        format: int32
        x-nullable: false
    description: ShipmentFulfillmentInfoQueryResult
    type: object
  ShipmentFulfillmentInfo:
    title: ShipmentFulfillmentInfo
    properties:
      address:
        $ref: '#/definitions/Address'
        description: The Address
      allowedManualTransitions:
        description: A list of allowed manual transition
        type: array
        items:
          type: string
      billingCurrency:
        description: The currency ISO code under which the items are sold 'Currency.IsoCode'.
        type: string
      created:
        description: Date the ShipmentFulfillmentInfo was created
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: Identifier of the operator who created the ShipmentFulfillmentInfo
        type: string
      customerEmail:
        description: The Customer Email
        type: string
      customerName:
        description: The CustomerName
        type: string
      customerPhone:
        description: The Customer Phone
        type: string
      executionMessages:
        description: The Execution Messages
        type: array
        items:
          $ref: '#/definitions/ExecutionMessage'
      executionResult:
        description: The Execution Result
        type: string
        enum:
          - Success
          - Warning
          - Error
          - Critical
          - Failure
      fulfillmentLastAssignedDate:
        description: The FulfillmentLastAssignedDate
        type: string
        format: date-time
      fulfillmentLocationId:
        description: The FulfillmentLocationId
        type: string
        x-nullable: false
      fulfillmentProviderId:
        description: The fulfillment provider identifier
        type: string
        x-nullable: false
      fulfillmentScheduledTimeBeginDate:
        description: The FulfillmentScheduledTimeBeginDate
        type: string
        format: date-time
      fulfillmentScheduledTimeEndDate:
        description: The FulfillmentScheduledTimeEndDate
        type: string
        format: date-time
      fulFillmentType:
        description: The FulFillmentType
        type: string
        enum:
          - Unspecified
          - PickUp
          - Delivery
          - Shipping
          - ShipToStore
      hasNotes:
        description: The value indicating whether or not the shipment has a note.
        type: boolean
        x-nullable: false
      id:
        description: The Id
        type: string
        x-nullable: false
      lastModified:
        description: Date that the last modification was applied to the ShipmentFulfillmentInfo
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: Identifier of the operator who last modified the ShipmentFulfillmentInfo
        type: string
      nbItems:
        description: NbItems
        type: integer
        format: int32
        x-nullable: false
      nbUnits:
        description: NbUnits
        type: number
        format: double
        x-nullable: false
      orderCreatedDate:
        description: The order creation date.
        type: string
        format: date-time
        x-nullable: false
      orderId:
        description: The OrderId
        type: string
        x-nullable: false
      orderNumber:
        description: The Order Number
        type: string
      orderTotal:
        description: The order total amount.
        type: number
        format: double
      pickUpLocationId:
        description: The PickUpLocationId
        type: string
      scopeName:
        description: The Scope Name
        type: string
      status:
        description: The Status
        type: string
      total:
        description: 'The total amount for the shipment, including discounts.'
        type: number
        format: double
      validationResults:
        description: The Validation Results
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
    description: ShipmentFulfillmentInfo
    type: object
  GetNumberOfShipmentsForFulfillmentLocationResponse:
    title: GetNumberOfShipmentsForFulfillmentLocationResponse
    properties:
      statuses:
        description: The number of shipments by status.
        type: array
        items:
          $ref: '#/definitions/NumberOfShipmentForStatus'
    description: GetNumberOfShipmentsForFulfillmentLocationResponse
    type: object
  NumberOfShipmentForStatus:
    title: NumberOfShipmentForStatus
    properties:
      fulfillmentShipmentStatusType:
        description: A value indicating how the shipment is treated from the point of view of the location requesting the number of shipments.
        type: string
        enum:
          - FulfillmentOnly
          - PickupOnly
          - Both
      numberOfShipments:
        description: The number of shipments.
        type: integer
        format: int32
        x-nullable: false
      status:
        description: The status.
        type: string
    description: NumberOfShipmentForStatus
    type: object
  CountShipmentFulfillmentInfos:
    title: CountShipmentFulfillmentInfos
    properties:
      Count:
        description: The number of shipments fulfillment information
        type: integer
        format: int32
        x-nullable: false
    description: CountShipmentFulfillmentInfos
    type: object
  PickingMission:
    title: PickingMission
    properties:
      completedOn:
        description: the date the picking has been completed.
        type: string
        format: date-time
      created:
        description: the date the picking mission was created.
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: the identifier of the operator who created the picking mission.
        type: string
      fulfillmentLocationId:
        description: the fulfillment location identifier.
        type: string
        x-nullable: false
      id:
        description: the picking mission identifier.
        type: string
        x-nullable: false
      lastModified:
        description: the date that the last modification was applied to the picking mission.
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: the identifier of the operator who last modified the picking mission.
        type: string
      missionItems:
        description: the picking mission items.
        type: array
        items:
          $ref: '#/definitions/MissionItem'
      missionNumber:
        description: the picking mission number.
        type: string
      picker:
        description: the identifier of the picker who started the picking mission.
        type: string
      scopeId:
        description: the scope identifier.
        type: string
      startedOn:
        description: the date the picking has been started.
        type: string
        format: date-time
      status:
        description: the current picking mission status.
        type: string
        enum:
          - Pending
          - Ready
          - InProgress
          - Completed
          - Canceled
          - CompletedWithExceptions
    description: PickingMission
    type: object
  PickingMissionResult:
    title: PickingMissionResult
    properties:
      result:
        description: the list of resulting picking mission
        type: array
        items:
          $ref: '#/definitions/PickingMission'
    description: PickingMissionResult
    type: object
  OrderLockInfo:
    title: OrderLockInfo
    properties:
      id:
        description: the id of the order.
        type: string
        x-nullable: false
      shipmentId:
        description: the order status.
        type: string
        x-nullable: false
    description: OrderLockInfo
    type: object
  List_CartSummary_:
    title: List<CartSummary>
    type: array
    items:
      $ref: '#/definitions/CartSummary'
  RecurringOrderProgram:
    title: RecurringOrderProgram
    required:
      - created
      - createdBy
      - lastModified
      - lastModifiedBy
      - recurringOrderProgramName
    properties:
      created:
        description: The date of the creation of the entity
        type: string
        format: date-time
        x-nullable: false
      createdBy:
        description: The id of the person who created the entity
        type: string
      lastModified:
        description: The date of the last modification
        type: string
        format: date-time
        x-nullable: false
      lastModifiedBy:
        description: The id of the last person who modified the entity
        type: string
      frequencies:
        description: The frequencies of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderFrequency'
      localizations:
        description: The localized name of the recurring order program
        type: array
        items:
          $ref: '#/definitions/RecurringOrderProgramLocalize'
      recurringOrderProgramName:
        description: The name and unique identifier of the recurring order program
        type: string
      scopeIds:
        description: The scope ids which are associated to the recurring order program
        type: array
        items:
          type: string
    description: RecurringOrderProgram
    type: object
  ListOfRecurringOrderPrograms:
    title: ListOfRecurringOrderPrograms
    properties:
      recurringOrderPrograms:
        type: array
        items:
          $ref: '#/definitions/RecurringOrderProgram'
    description: ListOfRecurringOrderPrograms
    type: object
  ListOfRecurringOrderLineItems:
    title: ListOfRecurringOrderLineItems
    properties:
      recurringOrderLineItems:
        type: array
        items:
          $ref: '#/definitions/RecurringOrderLineItem'
    description: ListOfRecurringOrderLineItems
    type: object
  IEnumerable_TaskInfo_:
    title: IEnumerable<TaskInfo>
    type: array
    items:
      $ref: '#/definitions/TaskInfo'
  ClinicInfo:
    title: ClinicInfo
    properties:
      clinicId:
        description: The identifier of the clinic
        type: string
      isScopeActive:
        description: Whether the scope associated to this clinic is active or not
        type: boolean
        x-nullable: false
      clinicGroupId:
        description: 'The Clinic Group this clinic belongs to, if any'
        type: string
      parentHierarchy:
        description: 'The clinic''s parent hierarchy, from closest parent to farthest'
        type: array
        items:
          type: string
      scopeId:
        description: The identifier of the scope the clinic belongs to
        type: string
      defaultCulture:
        description: The default culture of the clinic
        type: string
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The clinic's display name
      storeInfo:
        $ref: '#/definitions/ClinicStoreInfo'
        description: Information about the store associated to the clinic
      fulfillmentLocations:
        description: Information about the fulfillment locations associated to the clinic
        type: array
        items:
          $ref: '#/definitions/FulfillmentLocationInfo'
      urlInfo:
        $ref: '#/definitions/UrlInfo'
        description: The clinic's URL information
      isMigrated:
        description: True if the clinic is migrated from another platform.
        type: boolean
        x-nullable: false
    description: ClinicInfo
    type: object
  ClinicStoreInfo:
    title: ClinicStoreInfo
    properties:
      storeId:
        description: The store id
        type: string
        x-nullable: false
      storeName:
        description: The store name
        type: string
      storeNumber:
        description: 'The store number, which is also the clinic code'
        type: string
      storeAddressId:
        description: The store's address id
        type: string
        x-nullable: false
    description: ClinicStoreInfo
    type: object
  FulfillmentLocationInfo:
    title: FulfillmentLocationInfo
    properties:
      id:
        description: The fulfillment location's identifier
        type: string
        x-nullable: false
      name:
        description: The fulfillment location's name
        type: string
      inventoryLocationId:
        description: The id of the inventory location associated to this fulfillment location
        type: string
      type:
        description: The type of the fulfillment location
        type: string
        enum:
          - Unspecified
          - Store
          - Warehouse
      number:
        description: The Number of the fulfillment's location type
        type: string
    description: FulfillmentLocationInfo
    type: object
  UrlInfo:
    title: UrlInfo
    properties:
      websiteUrl:
        description: The website URL of the clinic. The host is retrieved from the Template variables.
        type: string
      logoPath:
        $ref: '#/definitions/LocalizedString'
        description: The URL path for the clinic's logo
      logoUrl:
        $ref: '#/definitions/LocalizedString'
        description: The URL for the clinic's logo
      imageUrl:
        description: The URL for the clinic's image
        type: string
      externalLogoUrl:
        $ref: '#/definitions/LocalizedString'
        description: The URL for the external clinic logo
    description: UrlInfo
    type: object
  GetClinicInfoForCustomerResponse:
    title: GetClinicInfoForCustomerResponse
    properties:
      customerId:
        description: The customer id
        type: string
      clinic:
        description: The clinic the customer is associated to. Will be null if the customer is not associated to a clinic.
        type: string
      isAdmin:
        description: Whether the customer is an admin of the clinic he's associated to.
        type: boolean
    description: GetClinicInfoForCustomerResponse
    type: object
  GetB2CSiteProfileResponse:
    title: GetB2CSiteProfileResponse
    properties:
      b2CSiteProfile:
        $ref: '#/definitions/B2CSiteProfile'
        description: The details of the B2C site profile
    description: GetB2CSiteProfileResponse
    type: object
  B2CSiteProfile:
    title: B2CSiteProfile
    properties:
      id:
        description: The Id of this custom profile's instance
        type: string
        x-nullable: false
      customerId:
        description: The Id of the customer this B2C site profile belongs to
        type: string
        x-nullable: false
      b2CAccountCreationType:
        description: The way the account was created on the B2C site
        type: string
        enum:
          - Invite
          - SelfService
      approvedBy:
        description: The email of the B2C admin customer who approved this customer account
        type: string
      approvedOn:
        description: The date when the customer account was approved
        type: string
        format: date-time
    description: B2CSiteProfile
    type: object
  GetAdminKpiResponse:
    title: GetAdminKpiResponse
    properties:
      adminKpi:
        description: The list of Admin KPI
        type: array
        items:
          $ref: '#/definitions/KpiInformations'
    description: GetAdminKpiResponse
    type: object
  KpiInformations:
    title: KpiInformations
    properties:
      name:
        type: string
      quantity:
        type: integer
        format: int32
        x-nullable: false
      url:
        type: string
    description: KpiInformations
    type: object
  HttpResult:
    title: HttpResult
    properties:
      responseText:
        type: string
      responseStream:
        $ref: '#/definitions/Stream'
      fileInfo:
        $ref: '#/definitions/FileInfo'
      contentType:
        type: string
      headers:
        $ref: '#/definitions/Dictionary_String_String_'
      cookies:
        type: array
        items:
          $ref: '#/definitions/Cookie'
      eTag:
        type: string
      age:
        type: string
      maxAge:
        type: string
      expires:
        type: string
        format: date-time
      lastModified:
        type: string
        format: date-time
      cacheControl:
        type: integer
        format: int64
        enum:
          - None
          - Public
          - Private
          - MustRevalidate
          - NoCache
          - NoStore
          - NoTransform
          - ProxyRevalidate
      resultScope:
        $ref: '#/definitions/Func_IDisposable_'
      allowsPartialResponse:
        type: boolean
        x-nullable: false
      location:
        type: string
      options:
        $ref: '#/definitions/IDictionary_String_String_'
      status:
        type: integer
        format: int32
        x-nullable: false
      statusCode:
        type: string
        enum:
          - Continue
          - SwitchingProtocols
          - OK
          - Created
          - Accepted
          - NonAuthoritativeInformation
          - NoContent
          - ResetContent
          - PartialContent
          - MultipleChoices
          - Ambiguous
          - MovedPermanently
          - Moved
          - Found
          - Redirect
          - SeeOther
          - RedirectMethod
          - NotModified
          - UseProxy
          - Unused
          - TemporaryRedirect
          - RedirectKeepVerb
          - BadRequest
          - Unauthorized
          - PaymentRequired
          - Forbidden
          - NotFound
          - MethodNotAllowed
          - NotAcceptable
          - ProxyAuthenticationRequired
          - RequestTimeout
          - Conflict
          - Gone
          - LengthRequired
          - PreconditionFailed
          - RequestEntityTooLarge
          - RequestUriTooLong
          - UnsupportedMediaType
          - RequestedRangeNotSatisfiable
          - ExpectationFailed
          - UpgradeRequired
          - InternalServerError
          - NotImplemented
          - BadGateway
          - ServiceUnavailable
          - GatewayTimeout
          - HttpVersionNotSupported
      statusDescription:
        type: string
      response:
        $ref: '#/definitions/Object'
      responseFilter:
        $ref: '#/definitions/IContentTypeWriter'
      requestContext:
        $ref: '#/definitions/IRequest'
      view:
        type: string
      template:
        type: string
      paddingLength:
        type: integer
        format: int32
        x-nullable: false
      isPartialRequest:
        type: boolean
        x-nullable: false
    description: HttpResult
    type: object
  FileInfo:
    title: FileInfo
    properties: {}
    description: FileInfo
    type: object
  Cookie:
    title: Cookie
    properties: {}
    description: Cookie
    type: object
  Func_IDisposable_:
    title: Func`1
    properties: {}
    description: Func<IDisposable>
    type: object
  IDictionary_String_String_:
    title: 'IDictionary<String,String>'
    additionalProperties:
      type: string
    description: 'IDictionary<String,String>'
    type: object
  IContentTypeWriter:
    title: IContentTypeWriter
    properties: {}
    description: IContentTypeWriter
    type: object
  IRequest:
    title: IRequest
    properties: {}
    description: IRequest
    type: object
  GetFeatureFlagsResponse:
    title: GetFeatureFlagsResponse
    properties:
      featureFlags:
        description: The list of feature flags defined in a given scope or inherited
        type: array
        items:
          $ref: '#/definitions/FeatureFlag'
    description: GetFeatureFlagsResponse
    type: object
  FeatureFlag:
    title: FeatureFlag
    properties:
      name:
        description: 'Unique name given to identify the entity across all scopes. By governance this should always the following format [ScopeId]-[Key]'
        type: string
      key:
        description: A label to classify the feature.
        type: string
      label:
        description: A label to classify the feature.
        type: string
      description:
        description: A short description of the impact of the feature flag.
        type: string
      isActive:
        description: ' Gets or sets a value indicating whether this feature flag is active or not.'
        type: boolean
        x-nullable: false
    description: FeatureFlag
    type: object
  GetProductAuthorizationsResponse:
    title: GetProductAuthorizationsResponse
    properties:
      authorizations:
        description: Authorized products for a customer.
        type: array
        items:
          $ref: '#/definitions/ProductAuthorization'
      customerInfo:
        $ref: '#/definitions/CDMVCustomerInfo'
        description: The customer's information
    description: GetProductAuthorizationsResponse
    type: object
  ProductAuthorization:
    title: ProductAuthorization
    properties:
      id:
        description: The Id of this custom profile's instance
        type: string
        x-nullable: false
      customerId:
        description: The Id of the customer this product authorization belongs to
        type: string
        x-nullable: false
      productId:
        description: The product Id this authorization is for
        type: string
      product:
        $ref: '#/definitions/Product'
        description: The product details
      requestedDate:
        description: The date the authorization was requested at
        type: string
        format: date-time
        x-nullable: false
      expiryDate:
        description: The date the authorization expires
        type: string
        format: date-time
      resolutionDate:
        description: The date the authorization got resolved (accepted or refused)
        type: string
        format: date-time
      status:
        description: The current status of the authorization
        type: string
        enum:
          - Pending
          - Authorized
          - Refused
      isExpired:
        description: Whether the authorization has expired or not.
        type: boolean
        x-nullable: false
      isActive:
        description: Whether the product authorization is active or not. This means that the customer is able to purchase the product associated to this authorization.
        type: boolean
        x-nullable: false
    description: ProductAuthorization
    type: object
  CDMVCustomerInfo:
    title: CDMVCustomerInfo
    properties:
      id:
        description: The customer's unique identifier
        type: string
        x-nullable: false
      username:
        description: The customer's username
        type: string
      firstName:
        description: The customer's first name
        type: string
      lastName:
        description: The customer's last name
        type: string
      language:
        description: The customer's communication language
        type: string
      fileNumber:
        description: The customer's medical file number
        type: string
      phoneNumber:
        description: The customer's phone number
        type: string
      pendingCustomerApprovalOrderCount:
        description: The number of pending orders for this customer
        type: integer
        format: int32
        x-nullable: false
      created:
        description: The date when this customer was created
        type: string
        format: date-time
        x-nullable: false
      b2CSiteProfileId:
        description: The Id of the B2C site profile of this customer
        type: string
        x-nullable: false
    description: CDMVCustomerInfo
    type: object
  AddOrUpdateProductAuthorizationsResponse:
    title: AddOrUpdateProductAuthorizationsResponse
    properties:
      authorizations:
        description: The details of the product authorizations that were added or updated.
        type: array
        items:
          $ref: '#/definitions/ProductAuthorization'
    description: AddOrUpdateProductAuthorizationsResponse
    type: object
  RemoveProductAuthorizationsResponse:
    title: RemoveProductAuthorizationsResponse
    properties:
      productIDs:
        description: The list of product ids which had their authorizations remove.
        type: array
        items:
          type: string
    description: RemoveProductAuthorizationsResponse
    type: object
  CustomerTokenAuthentication:
    title: CustomerTokenAuthentication
    properties:
      scope:
        type: string
      roles:
        type: array
        items:
          type: string
      userName:
        type: string
      customerId:
        type: string
        x-nullable: false
      expiration:
        type: string
        format: date-time
        x-nullable: false
    description: CustomerTokenAuthentication
    type: object
  UpdateShipmentTrackingResponse:
    title: UpdateShipmentTrackingResponse
    properties:
      status:
        type: string
      message:
        type: string
      transactionId:
        type: string
        x-nullable: false
    description: UpdateShipmentTrackingResponse
    type: object
  ConfirmShipmentResponse:
    title: ConfirmShipmentResponse
    properties:
      success:
        type: boolean
        x-nullable: false
    description: ConfirmShipmentResponse
    type: object
  InvoiceOrderToCDMVResponse:
    title: InvoiceOrderToCDMVResponse
    properties:
      success:
        description: 'Whether the order was successfully sent to CDMV. True indicates that the order was sent to CDMV, while false indicates it was not because integrations with CDMV are disabled.'
        type: boolean
        x-nullable: false
      order:
        $ref: '#/definitions/Order'
        description: The Order that was sent
    description: InvoiceOrderToCDMVResponse
    type: object
  SelfServiceAccountCreatedEvent:
    title: SelfServiceAccountCreatedEvent
    properties:
      scopeId:
        type: string
      emailAddress:
        type: string
      language:
        type: string
      status:
        type: string
      clinicCode:
        type: string
      associatedScope:
        type: string
      b2CAccountCreationType:
        type: string
        enum:
          - Invite
          - SelfService
    description: SelfServiceAccountCreatedEvent
    type: object
  CDMVSelfServiceAccountValidationResponse:
    title: CDMVSelfServiceAccountValidationResponse
    properties:
      decryptedToken:
        description: Decrypted Token
        type: string
    description: CDMVSelfServiceAccountValidationResponse
    type: object
  GetPendingApprovalAccountsResponse:
    title: GetPendingApprovalAccountsResponse
    properties:
      pendingAccounts:
        description: The list of self-service pending customer accounts
        type: array
        items:
          $ref: '#/definitions/CDMVCustomerInfo'
    description: GetPendingApprovalAccountsResponse
    type: object
  DeleteProductAuthorizationResponse:
    title: DeleteProductAuthorizationResponse
    properties:
      success:
        description: If the delete was succesful
        type: boolean
        x-nullable: false
    description: DeleteProductAuthorizationResponse
    type: object
  GetCustomerTokenResponse:
    title: GetCustomerTokenResponse
    properties:
      authToken:
        type: string
      expiration:
        type: string
        format: date-time
        x-nullable: false
      roles:
        type: array
        items:
          type: string
    description: GetCustomerTokenResponse
    type: object
  GetCustomerWalletResponse:
    title: GetCustomerWalletResponse
    properties:
      scope:
        description: The scope of the wallet
        type: string
      customerId:
        description: The Id of the customer this wallet belongs to
        type: string
        x-nullable: false
      creditCards:
        description: The list of credit cards in the customer wallet
        type: array
        items:
          $ref: '#/definitions/CreditCard'
      hasDefaultAddress:
        description: Gets or sets a value indicating if the customer account has a default address
        type: boolean
        x-nullable: false
    description: GetCustomerWalletResponse
    type: object
  CreditCard:
    title: CreditCard
    properties:
      vaultProfileDataKey:
        description: The credit card vault profile data key
        type: string
      cardMask:
        description: The credit masked number
        type: string
      cardType:
        description: The credit card type
        type: string
      expiryDate:
        description: The credit card expiry date
        type: string
      cardHolderName:
        description: The credit card holder name
        type: string
      orderLocationId:
        description: The credit card order location Id
        type: string
      isExpired:
        description: The credit card is expired
        type: boolean
        x-nullable: false
      canDelete:
        description: The credit card can be deleted
        type: boolean
        x-nullable: false
      id:
        description: The unique identifier for this payment method.
        type: string
        x-nullable: false
      displayName:
        $ref: '#/definitions/LocalizedString'
        description: The UI-friendly name of the payment method.
      enabled:
        description: Whether this payment method is currently enabled and can be used.
        type: boolean
        x-nullable: false
      type:
        description: The PaymentMethodType that is associated with this payment method.
        type: string
        enum:
          - CreditCard
          - SavedCreditCard
          - GiftCertificate
          - PurchaseOrder
          - CashCard
          - Cash
          - Debit
          - OnSiteCredit
          - OnSiteDebit
          - Cheque
          - OnSiteUnspecified
          - Paypal
      paymentProviderName:
        description: The name of the associated payment provider.
        type: string
      propertyBag:
        $ref: '#/definitions/PropertyBag'
        description: The property bag containing extended properties for this object.
      default:
        description: Whether this payment method is used when none are specified
        type: boolean
        x-nullable: false
    description: CreditCard
    type: object
  AddMonerisPaymentMethodResponse:
    title: AddMonerisPaymentMethodResponse
    properties:
      paymentMethod:
        $ref: '#/definitions/PaymentMethod'
        description: The payment method that has been added
    description: AddMonerisPaymentMethodResponse
    type: object
  DeletePaymentMethodResponse:
    title: DeletePaymentMethodResponse
    properties:
      isDeleted:
        description: True when the payment method has been deleted
        type: boolean
        x-nullable: false
    description: DeletePaymentMethodResponse
    type: object
  UpdatePendingApprovalAccountResponse:
    title: UpdatePendingApprovalAccountResponse
    properties:
      cdmvCustomerInfo:
        $ref: '#/definitions/CDMVCustomerInfo'
        description: The updated customer
      isApproved:
        description: True when the customer account is approved
        type: boolean
        x-nullable: false
      fileNumberExist:
        description: True when the file number is already taken
        type: boolean
        x-nullable: false
    description: UpdatePendingApprovalAccountResponse
    type: object
  FindProductAuthorizationsByStatusResponse:
    title: FindProductAuthorizationsByStatusResponse
    properties:
      productAuthorizations:
        description: The list of product authorizations that were found.
        type: array
        items:
          $ref: '#/definitions/ProductCustomerAuthorization'
      count:
        description: The number of product authorizations included in the response
        type: integer
        format: int32
        x-nullable: false
      totalCount:
        description: The total number of product authorizations that were found
        type: integer
        format: int32
        x-nullable: false
      pages:
        description: The number of pages required to display all the results
        type: integer
        format: int32
        x-nullable: false
    description: FindProductAuthorizationsByStatusResponse
    type: object
  ProductCustomerAuthorization:
    title: ProductCustomerAuthorization
    properties:
      customer:
        $ref: '#/definitions/CDMVCustomerInfo'
        description: The customer's information
      id:
        description: The Id of this custom profile's instance
        type: string
        x-nullable: false
      customerId:
        description: The Id of the customer this product authorization belongs to
        type: string
        x-nullable: false
      productId:
        description: The product Id this authorization is for
        type: string
      product:
        $ref: '#/definitions/Product'
        description: The product details
      requestedDate:
        description: The date the authorization was requested at
        type: string
        format: date-time
        x-nullable: false
      expiryDate:
        description: The date the authorization expires
        type: string
        format: date-time
      resolutionDate:
        description: The date the authorization got resolved (accepted or refused)
        type: string
        format: date-time
      status:
        description: The current status of the authorization
        type: string
        enum:
          - Pending
          - Authorized
          - Refused
      isExpired:
        description: Whether the authorization has expired or not.
        type: boolean
        x-nullable: false
      isActive:
        description: Whether the product authorization is active or not. This means that the customer is able to purchase the product associated to this authorization.
        type: boolean
        x-nullable: false
    description: ProductCustomerAuthorization
    type: object
  UpdateWalletCreditCardResponse:
    title: UpdateWalletCreditCardResponse
    properties:
      paymentMethod:
        $ref: '#/definitions/PaymentMethod'
        description: The payment method that has been updated
    description: UpdateWalletCreditCardResponse
    type: object
  UpdateWalletDefaultCreditCardResponse:
    title: UpdateWalletDefaultCreditCardResponse
    properties:
      isUpdated:
        description: True when the default payment method has been updated
        type: boolean
        x-nullable: false
      paymentMethod:
        $ref: '#/definitions/PaymentMethod'
        description: The updated payment method
    description: UpdateWalletDefaultCreditCardResponse
    type: object
  GetMonerisCaptureSettingsResponse:
    title: GetMonerisCaptureSettingsResponse
    properties:
      paymentCaptureUrl:
        description: Gets of sets the Moneris payment capture URL
        type: string
      tokenizationBaseUrl:
        description: Gets of sets the Moneris tokenization base URL
        type: string
      tokenizationProfileId:
        description: Gets of sets the Moneris tokenization profile Id
        type: string
      tokenizationStyleParameters:
        description: Gets of sets the Moneris tokenization style parameters
        type: string
    description: GetMonerisCaptureSettingsResponse
    type: object
  InventoryQuantityResult:
    title: InventoryQuantityResult
    properties:
      skip:
        type: integer
        format: int32
        x-nullable: false
      take:
        type: integer
        format: int32
        x-nullable: false
      totalCount:
        type: integer
        format: int64
        x-nullable: false
      items:
        type: array
        items:
          $ref: '#/definitions/InventoryQuantityItem'
    description: InventoryQuantityResult
    type: object
  InventoryQuantityItem:
    title: InventoryQuantityItem
    properties:
      inventoryLocationId:
        type: string
      sku:
        type: string
      quantity:
        type: number
        format: double
        x-nullable: false
    description: InventoryQuantityItem
    type: object
  VaultProfileCreationResult:
    title: VaultProfileCreationResult
    properties:
      errorCode:
        description: The error code of the operation
        type: string
      errorMessage:
        description: The error message of the operation
        type: string
      success:
        description: The status of the vault profile creation
        type: boolean
        x-nullable: false
      updatedPayment:
        $ref: '#/definitions/Payment'
        description: The updated payment
    description: VaultProfileCreationResult
    type: object
parameters:
  Accept:
    name: Accept
    in: header
    description: Accept Header
    type: string
    required: true
    enum:
      - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
tags:
  - name: addresses
    description: Addresses are entities which are used as a billing or shipping address for a cart or an order.
  - name: applications
    description: Application are blocks of logical business features.
  - name: authentication
    description: Performs authentication operations.
  - name: authorizations
    description: 'Authorizations represents what an entity (Group, User...) is allowed to do.'
  - name: campaigns
    description: Campaigns are entities used to organize marketing promotions.
  - name: carts
    description: Carts are entities used for assembling an order before submitting.
  - name: catalogs
    description: Catalogs are entities which represents markets and buyable Products organized in Categories.
  - name: categories
    description: Categories are entities which represents a classification of products.
  - name: cdmv
    description: 'Regroupment of all custom CDMV services, notably for clinics related operations'
  - name: countries
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
  - name: coupons
    description: 'The coupon can be applied on a cart or an order. When a promotion is associated with one or more coupon codes, one of the coupons must appear in the customer''s Cart to get the promotional discount.'
  - name: cultures
    description: 'Globalization are entities related to regional settings. Such as countries, regions, timezones and cultures.'
  - name: customers
    description: Customers represents entities which have the ability to buy products.
  - name: customProfiles
    description: Custom Profiles are entities which represents a custom classification of entity defined in the system.
  - name: dataexchange
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
  - name: diagnostic
    description: Diagnostics.
  - name: fulfillmentLocations
    description: Fulfillment locations are entities which handles fulfillment for a shipment.
  - name: fulfillmentMethods
    description: Fulfillment methods are entities used to select how a shipment will be delivered.
  - name: fulfillmentMethodTypes
    description: The different types that a fulfillment can use.
  - name: fulfillments
    description: API calls used during the fulfillment process.
  - name: groups
    description: Groups are entities wrapping identities objects (users or groups).
  - name: integration
    description: Integration resources dedicated to data exchanges across system boundaries or other systems.
  - name: inventoryItems
    description: Inventory items are a combination of InventoryQuantity and InventorySchedules.
  - name: inventoryLocations
    description: Inventory locations are places which manage inventory.
  - name: inventoryQuantities
    description: Inventory quantities.
  - name: marketing
    description: Requests related to the marketing application.
  - name: membership
    description: Membership represents a set of Authorization rules applied to a Customer.
  - name: metadata
    description: Metadata are entities which represents additional definitions and attribute information.
  - name: modules
    description: Modules are blocks of logical business features.
  - name: monerisCanadaVaultProfile
    description: Vault profile are external credit card token management.
  - name: monitoring
    description: System Health Service
  - name: my
    description: Application are blocks of logical business features.
  - name: notifications
    description: Regroupment of all CDMV messaging notifications
  - name: orderdraft
    description: Orders are entities which represent an order of a customer.
  - name: orders
    description: Orders are entities which represent an order of a customer.
  - name: organizations
    description: 'Operations related to organizations such as create an organization, get an organization, updating an organization, ...'
  - name: pickingMissions
    description: Picking missions are entities which represent a list of items that need to be picked to fulfill order shipments.
  - name: processedOrders
    description: Processed orders.
  - name: products
    description: Products are entities which represents a buyable item managed in a catalog.
  - name: promotion
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
  - name: promotions
    description: A promotion defines a set of rewards that can be applied to a Cart if a set of conditions are true.
  - name: providers
    description: Providers are generic entities containing configuration settings for various need.
  - name: recurringOrders
    description: Recurring orders are orders that are created automatically by the system based on a schedule defined by the customer.
  - name: relationships
    description: The API used to handle Relationships between entities.
  - name: reporting
    description: Reporting API.
  - name: role
    description: Roles represents what a person/group is.
  - name: roles
    description: Roles represents what a person/group is.
  - name: scopes
    description: Scopes are entities that allow you to organize and search data and settings for a given market.
  - name: search
    description: The API used to query the search engine.
  - name: searchqueries
    description: The API used to handle saved Search queries.
  - name: segment
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
  - name: segments
    description: 'Segments are entities which are used to store one, or more marketing targeting conditions.'
  - name: shipmentFulfillmentInfos
    description: ShipmentFulfillmentInfos are entities which represent the Shipment Fulfillment Informations of a customer.
  - name: stores
    description: Stores are entities which represents physical stores or an online/web stores.
  - name: tasks
    description: Long running tasks perform batch processing.
  - name: templates
    description: Scoped templatable content either for notification (email) purposes or Reports such as printable order invoices.
  - name: timezones
    description: Time zones.
  - name: token
    description: This can be used to retrieve security token for guest customer.
  - name: users
    description: Users represents the persons interacting with the system.
  - name: warehouses
    description: Warehouses are entities which represents physical warehouses.