/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing InventoryLocationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InventoryLocationsApiTests : IDisposable
    {
        private InventoryLocationsApi instance;

        public InventoryLocationsApiTests()
        {
            instance = new InventoryLocationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InventoryLocationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InventoryLocationsApi
            //Assert.IsType<InventoryLocationsApi>(instance);
        }

        /// <summary>
        /// Test AddInventoryScheduleRequestInventoryLocationIdschedulesPost
        /// </summary>
        [Fact]
        public void AddInventoryScheduleRequestInventoryLocationIdschedulesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //AddInventoryScheduleRequest body = null;
            //var response = instance.AddInventoryScheduleRequestInventoryLocationIdschedulesPost(accept, inventoryLocationId, body);
            //Assert.IsType<InventorySchedule>(response);
        }

        /// <summary>
        /// Test CreateInventoryLocationRequestScopeIdPost
        /// </summary>
        [Fact]
        public void CreateInventoryLocationRequestScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateInventoryLocationRequest body = null;
            //var response = instance.CreateInventoryLocationRequestScopeIdPost(accept, scopeId, body);
            //Assert.IsType<InventoryLocation>(response);
        }

        /// <summary>
        /// Test DeleteInventoryScheduleRequestInventoryLocationIdschedulesScheduleIdDelete
        /// </summary>
        [Fact]
        public void DeleteInventoryScheduleRequestInventoryLocationIdschedulesScheduleIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //string scheduleId = null;
            //string scopeId = null;
            //instance.DeleteInventoryScheduleRequestInventoryLocationIdschedulesScheduleIdDelete(accept, inventoryLocationId, scheduleId, scopeId);
        }

        /// <summary>
        /// Test GetInventoryLocationRequestScopeIdAssociatedLocationIdGet
        /// </summary>
        [Fact]
        public void GetInventoryLocationRequestScopeIdAssociatedLocationIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string associatedLocationId = null;
            //var response = instance.GetInventoryLocationRequestScopeIdAssociatedLocationIdGet(accept, scopeId, associatedLocationId);
            //Assert.IsType<InventoryLocation>(response);
        }

        /// <summary>
        /// Test GetInventoryScheduleByIdRequestInventoryLocationIdschedulesbyIdScheduleIdGet
        /// </summary>
        [Fact]
        public void GetInventoryScheduleByIdRequestInventoryLocationIdschedulesbyIdScheduleIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //string scheduleId = null;
            //string scopeId = null;
            //var response = instance.GetInventoryScheduleByIdRequestInventoryLocationIdschedulesbyIdScheduleIdGet(accept, inventoryLocationId, scheduleId, scopeId);
            //Assert.IsType<InventorySchedule>(response);
        }

        /// <summary>
        /// Test GetInventorySchedulesBySkuRequestInventoryLocationIdschedulesbySkuSkuGet
        /// </summary>
        [Fact]
        public void GetInventorySchedulesBySkuRequestInventoryLocationIdschedulesbySkuSkuGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //string sku = null;
            //string scopeId = null;
            //var response = instance.GetInventorySchedulesBySkuRequestInventoryLocationIdschedulesbySkuSkuGet(accept, inventoryLocationId, sku, scopeId);
            //Assert.IsType<List<InventorySchedule>>(response);
        }

        /// <summary>
        /// Test GetInventorySchedulesRequestInventoryLocationIdschedulesGet
        /// </summary>
        [Fact]
        public void GetInventorySchedulesRequestInventoryLocationIdschedulesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //string scopeId = null;
            //var response = instance.GetInventorySchedulesRequestInventoryLocationIdschedulesGet(accept, inventoryLocationId, scopeId);
            //Assert.IsType<List<InventorySchedule>>(response);
        }

        /// <summary>
        /// Test UpdateInventoryScheduleRequestInventoryLocationIdschedulesCreate
        /// </summary>
        [Fact]
        public void UpdateInventoryScheduleRequestInventoryLocationIdschedulesCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string inventoryLocationId = null;
            //UpdateInventoryScheduleRequest body = null;
            //var response = instance.UpdateInventoryScheduleRequestInventoryLocationIdschedulesCreate(accept, inventoryLocationId, body);
            //Assert.IsType<InventorySchedule>(response);
        }
    }
}
