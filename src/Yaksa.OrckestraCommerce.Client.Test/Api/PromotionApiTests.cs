/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing PromotionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PromotionApiTests : IDisposable
    {
        private PromotionApi instance;

        public PromotionApiTests()
        {
            instance = new PromotionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PromotionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PromotionApi
            //Assert.IsType<PromotionApi>(instance);
        }

        /// <summary>
        /// Test ProcessPromotionEngineRequestenginePost
        /// </summary>
        [Fact]
        public void ProcessPromotionEngineRequestenginePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //ProcessPromotionEngineRequest body = null;
            //var response = instance.ProcessPromotionEngineRequestenginePost(accept, body);
            //Assert.IsType<PromotionEngineResult>(response);
        }
    }
}
