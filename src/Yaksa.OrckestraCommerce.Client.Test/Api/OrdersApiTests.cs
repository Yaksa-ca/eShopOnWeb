/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing OrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrdersApiTests : IDisposable
    {
        private OrdersApi instance;

        public OrdersApiTests()
        {
            instance = new OrdersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrdersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrdersApi
            //Assert.IsType<OrdersApi>(instance);
        }

        /// <summary>
        /// Test AddOrderHistoryRequestScopeIdorderhistoryPost
        /// </summary>
        [Fact]
        public void AddOrderHistoryRequestScopeIdorderhistoryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //AddOrderHistoryRequest body = null;
            //instance.AddOrderHistoryRequestScopeIdorderhistoryPost(accept, scopeId, body);
        }

        /// <summary>
        /// Test AddOrderNoteRequestScopeIdOrderIdnotesPost
        /// </summary>
        [Fact]
        public void AddOrderNoteRequestScopeIdOrderIdnotesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //AddOrderNoteRequest body = null;
            //instance.AddOrderNoteRequestScopeIdOrderIdnotesPost(accept, scopeId, orderId, body);
        }

        /// <summary>
        /// Test AddShipmentFulfillmentMessagesRequestScopeIdOrderIdshipmentsShipmentIdstatemessagesPost
        /// </summary>
        [Fact]
        public void AddShipmentFulfillmentMessagesRequestScopeIdOrderIdshipmentsShipmentIdstatemessagesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //AddShipmentFulfillmentMessagesRequest body = null;
            //var response = instance.AddShipmentFulfillmentMessagesRequestScopeIdOrderIdshipmentsShipmentIdstatemessagesPost(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test AddShipmentNoteRequestScopeIdOrderIdshipmentsShipmentIdnotesPost
        /// </summary>
        [Fact]
        public void AddShipmentNoteRequestScopeIdOrderIdshipmentsShipmentIdnotesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //AddShipmentNoteRequest body = null;
            //instance.AddShipmentNoteRequestScopeIdOrderIdshipmentsShipmentIdnotesPost(accept, scopeId, orderId, shipmentId, body);
        }

        /// <summary>
        /// Test ChangeOrderStatusRequestScopeIdOrderIdfulfillmentStatePost
        /// </summary>
        [Fact]
        public void ChangeOrderStatusRequestScopeIdOrderIdfulfillmentStatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //ChangeOrderStatusRequest body = null;
            //var response = instance.ChangeOrderStatusRequestScopeIdOrderIdfulfillmentStatePost(accept, scopeId, orderId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test ChangeShipmentStatusRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatePost
        /// </summary>
        [Fact]
        public void ChangeShipmentStatusRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //ChangeShipmentStatusRequest body = null;
            //var response = instance.ChangeShipmentStatusRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatePost(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test CopyCartFromOrderRequestScopeIdOrderIdcopycartPost
        /// </summary>
        [Fact]
        public void CopyCartFromOrderRequestScopeIdOrderIdcopycartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //CopyCartFromOrderRequest body = null;
            //var response = instance.CopyCartFromOrderRequestScopeIdOrderIdcopycartPost(accept, scopeId, orderId, body);
            //Assert.IsType<Cart>(response);
        }

        /// <summary>
        /// Test CopyOrderRequestScopeIdOrderIdcopyPost
        /// </summary>
        [Fact]
        public void CopyOrderRequestScopeIdOrderIdcopyPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //Object body = null;
            //var response = instance.CopyOrderRequestScopeIdOrderIdcopyPost(accept, scopeId, orderId, body);
            //Assert.IsType<Cart>(response);
        }

        /// <summary>
        /// Test CreateOrderRequestPost
        /// </summary>
        [Fact]
        public void CreateOrderRequestPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //CreateOrderRequest body = null;
            //var response = instance.CreateOrderRequestPost(accept, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test CreateRmaGuestRequestRMAScopeIdOrderNumberGuestPost
        /// </summary>
        [Fact]
        public void CreateRmaGuestRequestRMAScopeIdOrderNumberGuestPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //CreateRmaGuestRequest body = null;
            //var response = instance.CreateRmaGuestRequestRMAScopeIdOrderNumberGuestPost(accept, scopeId, orderNumber, body);
            //Assert.IsType<RmaRequestResult>(response);
        }

        /// <summary>
        /// Test CreateRmaRegisteredRequestRMAScopeIdOrderNumberCustomerIdRegisteredPost
        /// </summary>
        [Fact]
        public void CreateRmaRegisteredRequestRMAScopeIdOrderNumberCustomerIdRegisteredPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //string customerId = null;
            //CreateRmaRegisteredRequest body = null;
            //var response = instance.CreateRmaRegisteredRequestRMAScopeIdOrderNumberCustomerIdRegisteredPost(accept, scopeId, orderNumber, customerId, body);
            //Assert.IsType<RmaRequestResult>(response);
        }

        /// <summary>
        /// Test CreateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNamePost
        /// </summary>
        [Fact]
        public void CreateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNamePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //string name = null;
            //CreateShipmentDocumentRequest body = null;
            //var response = instance.CreateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNamePost(accept, scopeId, orderId, shipmentId, name, body);
            //Assert.IsType<ShipmentDocument>(response);
        }

        /// <summary>
        /// Test DeleteShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameDelete
        /// </summary>
        [Fact]
        public void DeleteShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //string name = null;
            //var response = instance.DeleteShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameDelete(accept, scopeId, orderId, shipmentId, name);
            //Assert.IsType<ShipmentDocument>(response);
        }

        /// <summary>
        /// Test FindOrdersCountRequestScopeIdcountPost
        /// </summary>
        [Fact]
        public void FindOrdersCountRequestScopeIdcountPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindOrdersCountRequest body = null;
            //var response = instance.FindOrdersCountRequestScopeIdcountPost(accept, scopeId, body);
            //Assert.IsType<QueryCountResult>(response);
        }

        /// <summary>
        /// Test FindOrdersRequestScopeIdfindPost
        /// </summary>
        [Fact]
        public void FindOrdersRequestScopeIdfindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindOrdersRequest body = null;
            //var response = instance.FindOrdersRequestScopeIdfindPost(accept, scopeId, body);
            //Assert.IsType<OrderQueryResult>(response);
        }

        /// <summary>
        /// Test FindShipmentDocumentsRequestScopeIdshipmentsdocumentsfindPost
        /// </summary>
        [Fact]
        public void FindShipmentDocumentsRequestScopeIdshipmentsdocumentsfindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindShipmentDocumentsRequest body = null;
            //var response = instance.FindShipmentDocumentsRequestScopeIdshipmentsdocumentsfindPost(accept, scopeId, body);
            //Assert.IsType<ShipmentDocumentQueryResult>(response);
        }

        /// <summary>
        /// Test FindShipmentDocumentsSummariesRequestScopeIdshipmentsdocumentssummariesfindPost
        /// </summary>
        [Fact]
        public void FindShipmentDocumentsSummariesRequestScopeIdshipmentsdocumentssummariesfindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindShipmentDocumentsSummariesRequest body = null;
            //var response = instance.FindShipmentDocumentsSummariesRequestScopeIdshipmentsdocumentssummariesfindPost(accept, scopeId, body);
            //Assert.IsType<ShipmentDocumentSummaryQueryResult>(response);
        }

        /// <summary>
        /// Test GetAvailableTaxProvidersRequestavailableTaxProvidersGet
        /// </summary>
        [Fact]
        public void GetAvailableTaxProvidersRequestavailableTaxProvidersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string cultureName = null;
            //var response = instance.GetAvailableTaxProvidersRequestavailableTaxProvidersGet(accept, cultureName);
            //Assert.IsType<List<TaxProviderDetails>>(response);
        }

        /// <summary>
        /// Test GetCustomerLastOrderRequestScopeIdCustomerIdlastOrderGet
        /// </summary>
        [Fact]
        public void GetCustomerLastOrderRequestScopeIdCustomerIdlastOrderGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string customerId = null;
            //var response = instance.GetCustomerLastOrderRequestScopeIdCustomerIdlastOrderGet(accept, scopeId, customerId);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test GetOrderByIdRequestScopeIdOrderIdGet
        /// </summary>
        [Fact]
        public void GetOrderByIdRequestScopeIdOrderIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //bool? includeLineItems = null;
            //bool? includeShipment = null;
            //bool? includePayment = null;
            //var response = instance.GetOrderByIdRequestScopeIdOrderIdGet(accept, scopeId, orderId, includeLineItems, includeShipment, includePayment);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test GetOrderByNumberRequestScopeIdbyNumberOrderNumberGet
        /// </summary>
        [Fact]
        public void GetOrderByNumberRequestScopeIdbyNumberOrderNumberGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //bool? includeLineItems = null;
            //bool? includeShipment = null;
            //bool? includePayment = null;
            //string customerId = null;
            //var response = instance.GetOrderByNumberRequestScopeIdbyNumberOrderNumberGet(accept, scopeId, orderNumber, includeLineItems, includeShipment, includePayment, customerId);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test GetOrderFulfillmentStateRequestScopeIdOrderIdfulfillmentStateGet
        /// </summary>
        [Fact]
        public void GetOrderFulfillmentStateRequestScopeIdOrderIdfulfillmentStateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //var response = instance.GetOrderFulfillmentStateRequestScopeIdOrderIdfulfillmentStateGet(accept, scopeId, orderId);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test GetOrderHistoryRequestScopeIdorderhistoryGet
        /// </summary>
        [Fact]
        public void GetOrderHistoryRequestScopeIdorderhistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //string shipmentId = null;
            //string fulfillmentLocationId = null;
            //var response = instance.GetOrderHistoryRequestScopeIdorderhistoryGet(accept, scopeId, orderNumber, shipmentId, fulfillmentLocationId);
            //Assert.IsType<List<OrderHistoryItem>>(response);
        }

        /// <summary>
        /// Test GetOrderNotesRequestScopeIdOrderIdnotesGet
        /// </summary>
        [Fact]
        public void GetOrderNotesRequestScopeIdOrderIdnotesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //var response = instance.GetOrderNotesRequestScopeIdOrderIdnotesGet(accept, scopeId, orderId);
            //Assert.IsType<List<Note>>(response);
        }

        /// <summary>
        /// Test GetOrderSettingsRequestsettingsGet
        /// </summary>
        [Fact]
        public void GetOrderSettingsRequestsettingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //var response = instance.GetOrderSettingsRequestsettingsGet(accept, scopeId);
            //Assert.IsType<OrderSettings>(response);
        }

        /// <summary>
        /// Test GetPrintableOrderUriRequestScopeIdOrderIdprinturiGet
        /// </summary>
        [Fact]
        public void GetPrintableOrderUriRequestScopeIdOrderIdprinturiGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //var response = instance.GetPrintableOrderUriRequestScopeIdOrderIdprinturiGet(accept, scopeId, orderId);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetPrintableOrdersUriRequestScopeIdprintOrdersPost
        /// </summary>
        [Fact]
        public void GetPrintableOrdersUriRequestScopeIdprintOrdersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //GetPrintableOrdersUriRequest body = null;
            //var response = instance.GetPrintableOrdersUriRequestScopeIdprintOrdersPost(accept, scopeId, body);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetRmaRequestRMAScopeIdOrderNumberRmaNumberGet
        /// </summary>
        [Fact]
        public void GetRmaRequestRMAScopeIdOrderNumberRmaNumberGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //string rmaNumber = null;
            //var response = instance.GetRmaRequestRMAScopeIdOrderNumberRmaNumberGet(accept, scopeId, orderNumber, rmaNumber);
            //Assert.IsType<Rma>(response);
        }

        /// <summary>
        /// Test GetRmasByOrderRequestRMAScopeIdOrderNumberGet
        /// </summary>
        [Fact]
        public void GetRmasByOrderRequestRMAScopeIdOrderNumberGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //var response = instance.GetRmasByOrderRequestRMAScopeIdOrderNumberGet(accept, scopeId, orderNumber);
            //Assert.IsType<RmaListResult>(response);
        }

        /// <summary>
        /// Test GetShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameGet
        /// </summary>
        [Fact]
        public void GetShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //string name = null;
            //var response = instance.GetShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameGet(accept, scopeId, orderId, shipmentId, name);
            //Assert.IsType<ShipmentDocument>(response);
        }

        /// <summary>
        /// Test GetShipmentNotesRequestScopeIdShipmentIdshipmentnotesGet
        /// </summary>
        [Fact]
        public void GetShipmentNotesRequestScopeIdShipmentIdshipmentnotesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string shipmentId = null;
            //var response = instance.GetShipmentNotesRequestScopeIdShipmentIdshipmentnotesGet(accept, scopeId, shipmentId);
            //Assert.IsType<List<Note>>(response);
        }

        /// <summary>
        /// Test GetTaxCategoriesRequesttaxCategoriesGet
        /// </summary>
        [Fact]
        public void GetTaxCategoriesRequesttaxCategoriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //bool? getSystemCategories = null;
            //bool? getOnlySupportedCategories = null;
            //var response = instance.GetTaxCategoriesRequesttaxCategoriesGet(accept, getSystemCategories, getOnlySupportedCategories);
            //Assert.IsType<List<TaxCategory>>(response);
        }

        /// <summary>
        /// Test GetTaxProviderByScopeRequesttaxProviderByScopeGet
        /// </summary>
        [Fact]
        public void GetTaxProviderByScopeRequesttaxProviderByScopeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string name = null;
            //string cultureName = null;
            //string scopeId = null;
            //var response = instance.GetTaxProviderByScopeRequesttaxProviderByScopeGet(accept, name, cultureName, scopeId);
            //Assert.IsType<TaxProviderDetails>(response);
        }

        /// <summary>
        /// Test PostProcessOrderRequestScopeIdOrderIdpostProcessPost
        /// </summary>
        [Fact]
        public void PostProcessOrderRequestScopeIdOrderIdpostProcessPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //PostProcessOrderRequest body = null;
            //var response = instance.PostProcessOrderRequestScopeIdOrderIdpostProcessPost(accept, scopeId, orderId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test RefreshPaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdrefreshPost
        /// </summary>
        [Fact]
        public void RefreshPaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdrefreshPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string paymentId = null;
            //Object body = null;
            //var response = instance.RefreshPaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdrefreshPost(accept, scopeId, orderId, paymentId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test RefundPaymentRequestScopeIdOrderIdpaymentsPaymentIdrefundPost
        /// </summary>
        [Fact]
        public void RefundPaymentRequestScopeIdOrderIdpaymentsPaymentIdrefundPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string paymentId = null;
            //Object body = null;
            //var response = instance.RefundPaymentRequestScopeIdOrderIdpaymentsPaymentIdrefundPost(accept, scopeId, orderId, paymentId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test RenderOrderShipmentTemplateRequestScopeIdOrderIdshipmentsShipmentIdrenderTemplateGet
        /// </summary>
        [Fact]
        public void RenderOrderShipmentTemplateRequestScopeIdOrderIdshipmentsShipmentIdrenderTemplateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //string cultureName = null;
            //string templateName = null;
            //string contentName = null;
            //var response = instance.RenderOrderShipmentTemplateRequestScopeIdOrderIdshipmentsShipmentIdrenderTemplateGet(accept, scopeId, orderId, shipmentId, cultureName, templateName, contentName);
            //Assert.IsType<RenderOrderShipmentTemplateResponse>(response);
        }

        /// <summary>
        /// Test ReportShipmentFulfillmentFailureRequestScopeIdOrderIdshipmentsShipmentIdstatefailurePost
        /// </summary>
        [Fact]
        public void ReportShipmentFulfillmentFailureRequestScopeIdOrderIdshipmentsShipmentIdstatefailurePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //ReportShipmentFulfillmentFailureRequest body = null;
            //var response = instance.ReportShipmentFulfillmentFailureRequestScopeIdOrderIdshipmentsShipmentIdstatefailurePost(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test RestartShipmentFulfillmentProcessingRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStaterestartTaskPost
        /// </summary>
        [Fact]
        public void RestartShipmentFulfillmentProcessingRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStaterestartTaskPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //Object body = null;
            //var response = instance.RestartShipmentFulfillmentProcessingRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStaterestartTaskPost(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test ResumeOrderRequestScopeIdOrderIdresumePost
        /// </summary>
        [Fact]
        public void ResumeOrderRequestScopeIdOrderIdresumePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //Object body = null;
            //var response = instance.ResumeOrderRequestScopeIdOrderIdresumePost(accept, scopeId, orderId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test SaveOrderRequestScopeIdOrderIdPost
        /// </summary>
        [Fact]
        public void SaveOrderRequestScopeIdOrderIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //SaveOrderRequest body = null;
            //var response = instance.SaveOrderRequestScopeIdOrderIdPost(accept, scopeId, orderId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test SetAdjustmentOrderRequestScopeIdOrderIdshipmentsShipmentIdadjustmentCreate
        /// </summary>
        [Fact]
        public void SetAdjustmentOrderRequestScopeIdOrderIdshipmentsShipmentIdadjustmentCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //SetAdjustmentOrderRequest body = null;
            //var response = instance.SetAdjustmentOrderRequestScopeIdOrderIdshipmentsShipmentIdadjustmentCreate(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test SettlePaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdsettlePost
        /// </summary>
        [Fact]
        public void SettlePaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdsettlePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string paymentId = null;
            //Object body = null;
            //var response = instance.SettlePaymentOrderRequestScopeIdOrderIdpaymentsPaymentIdsettlePost(accept, scopeId, orderId, paymentId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test ShipmentSplitRequestScopeIdOrderIdshipmentsShipmentIdsplitCreate
        /// </summary>
        [Fact]
        public void ShipmentSplitRequestScopeIdOrderIdshipmentsShipmentIdsplitCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //ShipmentSplitRequest body = null;
            //var response = instance.ShipmentSplitRequestScopeIdOrderIdshipmentsShipmentIdsplitCreate(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test StartNewShipmentFulfillmentWorkflowRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatestartNewWorkflowPost
        /// </summary>
        [Fact]
        public void StartNewShipmentFulfillmentWorkflowRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatestartNewWorkflowPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //StartNewShipmentFulfillmentWorkflowRequest body = null;
            //var response = instance.StartNewShipmentFulfillmentWorkflowRequestScopeIdOrderIdshipmentsShipmentIdfulfillmentStatestartNewWorkflowPost(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test UpdateRmaRequestRMAScopeIdOrderNumberRmaNumberCreate
        /// </summary>
        [Fact]
        public void UpdateRmaRequestRMAScopeIdOrderNumberRmaNumberCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderNumber = null;
            //string rmaNumber = null;
            //UpdateRmaRequest body = null;
            //var response = instance.UpdateRmaRequestRMAScopeIdOrderNumberRmaNumberCreate(accept, scopeId, orderNumber, rmaNumber, body);
            //Assert.IsType<RmaRequestResult>(response);
        }

        /// <summary>
        /// Test UpdateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameCreate
        /// </summary>
        [Fact]
        public void UpdateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //string name = null;
            //UpdateShipmentDocumentRequest body = null;
            //var response = instance.UpdateShipmentDocumentRequestScopeIdOrderIdshipmentsShipmentIddocumentsNameCreate(accept, scopeId, orderId, shipmentId, name, body);
            //Assert.IsType<ShipmentDocument>(response);
        }

        /// <summary>
        /// Test UpdateShipmentFulfillmentStateRequestScopeIdOrderIdshipmentsShipmentIdstateCreate
        /// </summary>
        [Fact]
        public void UpdateShipmentFulfillmentStateRequestScopeIdOrderIdshipmentsShipmentIdstateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //UpdateShipmentFulfillmentStateRequest body = null;
            //var response = instance.UpdateShipmentFulfillmentStateRequestScopeIdOrderIdshipmentsShipmentIdstateCreate(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }

        /// <summary>
        /// Test UpdateShipmentFulfillmentWorkflowXamlPathRequestScopeIdOrderIdshipmentsShipmentIdWorkflowXamlPathCreate
        /// </summary>
        [Fact]
        public void UpdateShipmentFulfillmentWorkflowXamlPathRequestScopeIdOrderIdshipmentsShipmentIdWorkflowXamlPathCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string orderId = null;
            //string shipmentId = null;
            //UpdateShipmentFulfillmentWorkflowXamlPathRequest body = null;
            //var response = instance.UpdateShipmentFulfillmentWorkflowXamlPathRequestScopeIdOrderIdshipmentsShipmentIdWorkflowXamlPathCreate(accept, scopeId, orderId, shipmentId, body);
            //Assert.IsType<OrderFulfillmentState>(response);
        }
    }
}
