/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing RecurringOrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RecurringOrdersApiTests : IDisposable
    {
        private RecurringOrdersApi instance;

        public RecurringOrdersApiTests()
        {
            instance = new RecurringOrdersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RecurringOrdersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RecurringOrdersApi
            //Assert.IsType<RecurringOrdersApi>(instance);
        }

        /// <summary>
        /// Test AddOrUpdateRecurringOrderLineItemsRequestScopeIdlineItemsforCustomerCustomerIdCreate
        /// </summary>
        [Fact]
        public void AddOrUpdateRecurringOrderLineItemsRequestScopeIdlineItemsforCustomerCustomerIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string customerId = null;
            //AddOrUpdateRecurringOrderLineItemsRequest body = null;
            //var response = instance.AddOrUpdateRecurringOrderLineItemsRequestScopeIdlineItemsforCustomerCustomerIdCreate(accept, scopeId, customerId, body);
            //Assert.IsType<ListOfRecurringOrderLineItems>(response);
        }

        /// <summary>
        /// Test CreateRecurringOrderProgramRequestprogramsPost
        /// </summary>
        [Fact]
        public void CreateRecurringOrderProgramRequestprogramsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //CreateRecurringOrderProgramRequest body = null;
            //var response = instance.CreateRecurringOrderProgramRequestprogramsPost(accept, body);
            //Assert.IsType<RecurringOrderProgram>(response);
        }

        /// <summary>
        /// Test DeleteRecurringCartLineItemsRequestScopeIdcartsCustomerIdlineItemsDelete
        /// </summary>
        [Fact]
        public void DeleteRecurringCartLineItemsRequestScopeIdcartsCustomerIdlineItemsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string customerId = null;
            //List<string> lineItemIds = null;
            //instance.DeleteRecurringCartLineItemsRequestScopeIdcartsCustomerIdlineItemsDelete(accept, scopeId, customerId, lineItemIds);
        }

        /// <summary>
        /// Test DeleteRecurringOrderLineItemsRequestScopeIdCustomerIdlineItemsDelete
        /// </summary>
        [Fact]
        public void DeleteRecurringOrderLineItemsRequestScopeIdCustomerIdlineItemsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string customerId = null;
            //List<string> recurringOrderLineItemIds = null;
            //instance.DeleteRecurringOrderLineItemsRequestScopeIdCustomerIdlineItemsDelete(accept, scopeId, customerId, recurringOrderLineItemIds);
        }

        /// <summary>
        /// Test DeleteRecurringOrderProgramRequestprogramsRecurringOrderProgramNameDelete
        /// </summary>
        [Fact]
        public void DeleteRecurringOrderProgramRequestprogramsRecurringOrderProgramNameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string recurringOrderProgramName = null;
            //instance.DeleteRecurringOrderProgramRequestprogramsRecurringOrderProgramNameDelete(accept, recurringOrderProgramName);
        }

        /// <summary>
        /// Test GetRecurringOrderLineItemRequestScopeIdlineItemsRecurringOrderLineItemIdGet
        /// </summary>
        [Fact]
        public void GetRecurringOrderLineItemRequestScopeIdlineItemsRecurringOrderLineItemIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string recurringOrderLineItemId = null;
            //var response = instance.GetRecurringOrderLineItemRequestScopeIdlineItemsRecurringOrderLineItemIdGet(accept, scopeId, recurringOrderLineItemId);
            //Assert.IsType<RecurringOrderLineItem>(response);
        }

        /// <summary>
        /// Test GetRecurringOrderLineItemsForCustomerRequestScopeIdlineItemsbyCustomerCustomerIdGet
        /// </summary>
        [Fact]
        public void GetRecurringOrderLineItemsForCustomerRequestScopeIdlineItemsbyCustomerCustomerIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string customerId = null;
            //var response = instance.GetRecurringOrderLineItemsForCustomerRequestScopeIdlineItemsbyCustomerCustomerIdGet(accept, scopeId, customerId);
            //Assert.IsType<ListOfRecurringOrderLineItems>(response);
        }

        /// <summary>
        /// Test GetRecurringOrderProgramRequestprogramsRecurringOrderProgramNameGet
        /// </summary>
        [Fact]
        public void GetRecurringOrderProgramRequestprogramsRecurringOrderProgramNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string recurringOrderProgramName = null;
            //var response = instance.GetRecurringOrderProgramRequestprogramsRecurringOrderProgramNameGet(accept, recurringOrderProgramName);
            //Assert.IsType<RecurringOrderProgram>(response);
        }

        /// <summary>
        /// Test GetRecurringOrderProgramsByScopeIdRequestprogramsbyScopeScopeIdGet
        /// </summary>
        [Fact]
        public void GetRecurringOrderProgramsByScopeIdRequestprogramsbyScopeScopeIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //var response = instance.GetRecurringOrderProgramsByScopeIdRequestprogramsbyScopeScopeIdGet(accept, scopeId);
            //Assert.IsType<ListOfRecurringOrderPrograms>(response);
        }

        /// <summary>
        /// Test RescheduleRecurringCartRequestScopeIdcartCartNamerescheduleCreate
        /// </summary>
        [Fact]
        public void RescheduleRecurringCartRequestScopeIdcartCartNamerescheduleCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string cartName = null;
            //RescheduleRecurringCartRequest body = null;
            //var response = instance.RescheduleRecurringCartRequestScopeIdcartCartNamerescheduleCreate(accept, scopeId, cartName, body);
            //Assert.IsType<ListOfRecurringOrderLineItems>(response);
        }

        /// <summary>
        /// Test UpdateRecurringOrderProgramRequestprogramsRecurringOrderProgramNameCreate
        /// </summary>
        [Fact]
        public void UpdateRecurringOrderProgramRequestprogramsRecurringOrderProgramNameCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string recurringOrderProgramName = null;
            //UpdateRecurringOrderProgramRequest body = null;
            //var response = instance.UpdateRecurringOrderProgramRequestprogramsRecurringOrderProgramNameCreate(accept, recurringOrderProgramName, body);
            //Assert.IsType<RecurringOrderProgram>(response);
        }
    }
}
