/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing AddressesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AddressesApiTests : IDisposable
    {
        private AddressesApi instance;

        public AddressesApiTests()
        {
            instance = new AddressesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AddressesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AddressesApi
            //Assert.IsType<AddressesApi>(instance);
        }

        /// <summary>
        /// Test GetAddressRequestAddressIdGet
        /// </summary>
        [Fact]
        public void GetAddressRequestAddressIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string addressId = null;
            //var response = instance.GetAddressRequestAddressIdGet(accept, addressId);
            //Assert.IsType<Address>(response);
        }

        /// <summary>
        /// Test GetAddressesByIdsRequestbyIdsIdsGet
        /// </summary>
        [Fact]
        public void GetAddressesByIdsRequestbyIdsIdsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //List<string> ids = null;
            //var response = instance.GetAddressesByIdsRequestbyIdsIdsGet(accept, ids);
            //Assert.IsType<List<Address>>(response);
        }

        /// <summary>
        /// Test GetCustomerAddressRequestcustomerCustomerIdAddressIdGet
        /// </summary>
        [Fact]
        public void GetCustomerAddressRequestcustomerCustomerIdAddressIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string customerId = null;
            //string addressId = null;
            //var response = instance.GetCustomerAddressRequestcustomerCustomerIdAddressIdGet(accept, customerId, addressId);
            //Assert.IsType<Address>(response);
        }

        /// <summary>
        /// Test RemoveAddressRequestAddressIdDelete
        /// </summary>
        [Fact]
        public void RemoveAddressRequestAddressIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string addressId = null;
            //instance.RemoveAddressRequestAddressIdDelete(accept, addressId);
        }

        /// <summary>
        /// Test RemoveCustomerAddressRequestcustomerCustomerIdAddressIdDelete
        /// </summary>
        [Fact]
        public void RemoveCustomerAddressRequestcustomerCustomerIdAddressIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string customerId = null;
            //string addressId = null;
            //instance.RemoveCustomerAddressRequestcustomerCustomerIdAddressIdDelete(accept, customerId, addressId);
        }

        /// <summary>
        /// Test UpdateAddressRequestAddressIdCreate
        /// </summary>
        [Fact]
        public void UpdateAddressRequestAddressIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string addressId = null;
            //UpdateAddressRequest body = null;
            //var response = instance.UpdateAddressRequestAddressIdCreate(accept, addressId, body);
            //Assert.IsType<Address>(response);
        }

        /// <summary>
        /// Test UpdateCustomerAddressRequestcustomerCustomerIdAddressIdCreate
        /// </summary>
        [Fact]
        public void UpdateCustomerAddressRequestcustomerCustomerIdAddressIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string customerId = null;
            //string addressId = null;
            //UpdateCustomerAddressRequest body = null;
            //var response = instance.UpdateCustomerAddressRequestcustomerCustomerIdAddressIdCreate(accept, customerId, addressId, body);
            //Assert.IsType<Address>(response);
        }
    }
}
