/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing CustomProfilesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CustomProfilesApiTests : IDisposable
    {
        private CustomProfilesApi instance;

        public CustomProfilesApiTests()
        {
            instance = new CustomProfilesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CustomProfilesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CustomProfilesApi
            //Assert.IsType<CustomProfilesApi>(instance);
        }

        /// <summary>
        /// Test AddAddressToCustomProfileRequestScopeIdEntityIdaddressesPost
        /// </summary>
        [Fact]
        public void AddAddressToCustomProfileRequestScopeIdEntityIdaddressesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityId = null;
            //AddAddressToCustomProfileRequest body = null;
            //var response = instance.AddAddressToCustomProfileRequestScopeIdEntityIdaddressesPost(accept, scopeId, entityId, body);
            //Assert.IsType<Address>(response);
        }

        /// <summary>
        /// Test AssociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdPost
        /// </summary>
        [Fact]
        public void AssociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string parentEntityTypeName = null;
            //string parentId = null;
            //string attributeName = null;
            //string entityId = null;
            //Object body = null;
            //instance.AssociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdPost(accept, scopeId, parentEntityTypeName, parentId, attributeName, entityId, body);
        }

        /// <summary>
        /// Test CreateCustomProfileRequestScopeIdEntityTypeNamePost
        /// </summary>
        [Fact]
        public void CreateCustomProfileRequestScopeIdEntityTypeNamePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //CreateCustomProfileRequest body = null;
            //var response = instance.CreateCustomProfileRequestScopeIdEntityTypeNamePost(accept, scopeId, entityTypeName, body);
            //Assert.IsType<CustomProfile>(response);
        }

        /// <summary>
        /// Test DeleteCustomProfileRequestScopeIdEntityTypeNameEntityIdDelete
        /// </summary>
        [Fact]
        public void DeleteCustomProfileRequestScopeIdEntityTypeNameEntityIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //instance.DeleteCustomProfileRequestScopeIdEntityTypeNameEntityIdDelete(accept, scopeId, entityTypeName, entityId);
        }

        /// <summary>
        /// Test DisassociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdDelete
        /// </summary>
        [Fact]
        public void DisassociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string parentEntityTypeName = null;
            //string parentId = null;
            //string attributeName = null;
            //string entityId = null;
            //instance.DisassociateEntityRequestScopeIdParentEntityTypeNameParentIdAttributeNameEntityIdDelete(accept, scopeId, parentEntityTypeName, parentId, attributeName, entityId);
        }

        /// <summary>
        /// Test FindProfileInstancesRequestScopeIdEntityTypeNamefindPost
        /// </summary>
        [Fact]
        public void FindProfileInstancesRequestScopeIdEntityTypeNamefindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //FindProfileInstancesRequest body = null;
            //var response = instance.FindProfileInstancesRequestScopeIdEntityTypeNamefindPost(accept, scopeId, entityTypeName, body);
            //Assert.IsType<FindProfileInstancesQueryResult>(response);
        }

        /// <summary>
        /// Test GetAssociatedScopesRequestScopeIdEntityTypeNameEntityIdscopesGet
        /// </summary>
        [Fact]
        public void GetAssociatedScopesRequestScopeIdEntityTypeNameEntityIdscopesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //var response = instance.GetAssociatedScopesRequestScopeIdEntityTypeNameEntityIdscopesGet(accept, scopeId, entityTypeName, entityId);
            //Assert.IsType<List<ScopeAssociation>>(response);
        }

        /// <summary>
        /// Test GetProfileInstanceByNameRequestScopeIdEntityTypeNamebyNameNameGet
        /// </summary>
        [Fact]
        public void GetProfileInstanceByNameRequestScopeIdEntityTypeNamebyNameNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string name = null;
            //var response = instance.GetProfileInstanceByNameRequestScopeIdEntityTypeNamebyNameNameGet(accept, scopeId, entityTypeName, name);
            //Assert.IsType<CustomProfile>(response);
        }

        /// <summary>
        /// Test GetProfileInstanceRequestScopeIdEntityTypeNameEntityIdGet
        /// </summary>
        [Fact]
        public void GetProfileInstanceRequestScopeIdEntityTypeNameEntityIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //var response = instance.GetProfileInstanceRequestScopeIdEntityTypeNameEntityIdGet(accept, scopeId, entityTypeName, entityId);
            //Assert.IsType<CustomProfile>(response);
        }

        /// <summary>
        /// Test GetProfileInstancesRequestScopeIdEntityTypeNamebyIdsPost
        /// </summary>
        [Fact]
        public void GetProfileInstancesRequestScopeIdEntityTypeNamebyIdsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //GetProfileInstancesRequest body = null;
            //var response = instance.GetProfileInstancesRequestScopeIdEntityTypeNamebyIdsPost(accept, scopeId, entityTypeName, body);
            //Assert.IsType<List<CustomProfile>>(response);
        }

        /// <summary>
        /// Test RemoveScopeAssociationRequestScopeIdEntityTypeNameEntityIdscopesDelete
        /// </summary>
        [Fact]
        public void RemoveScopeAssociationRequestScopeIdEntityTypeNameEntityIdscopesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //var response = instance.RemoveScopeAssociationRequestScopeIdEntityTypeNameEntityIdscopesDelete(accept, scopeId, entityTypeName, entityId);
            //Assert.IsType<List<ScopeAssociation>>(response);
        }

        /// <summary>
        /// Test UpdateCustomProfileRequestScopeIdEntityTypeNameEntityIdCreate
        /// </summary>
        [Fact]
        public void UpdateCustomProfileRequestScopeIdEntityTypeNameEntityIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //UpdateCustomProfileRequest body = null;
            //var response = instance.UpdateCustomProfileRequestScopeIdEntityTypeNameEntityIdCreate(accept, scopeId, entityTypeName, entityId, body);
            //Assert.IsType<CustomProfile>(response);
        }

        /// <summary>
        /// Test UpdateScopeAssociationsRequestScopeIdEntityTypeNameEntityIdscopesCreate
        /// </summary>
        [Fact]
        public void UpdateScopeAssociationsRequestScopeIdEntityTypeNameEntityIdscopesCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityTypeName = null;
            //string entityId = null;
            //UpdateScopeAssociationsRequest body = null;
            //var response = instance.UpdateScopeAssociationsRequestScopeIdEntityTypeNameEntityIdscopesCreate(accept, scopeId, entityTypeName, entityId, body);
            //Assert.IsType<List<ScopeAssociation>>(response);
        }
    }
}
