/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing WarehousesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WarehousesApiTests : IDisposable
    {
        private WarehousesApi instance;

        public WarehousesApiTests()
        {
            instance = new WarehousesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WarehousesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WarehousesApi
            //Assert.IsType<WarehousesApi>(instance);
        }

        /// <summary>
        /// Test CreateOrUpdateWarehouseByNumberRequestScopeIdcreateOrUpdateCreate
        /// </summary>
        [Fact]
        public void CreateOrUpdateWarehouseByNumberRequestScopeIdcreateOrUpdateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateOrUpdateWarehouseByNumberRequest body = null;
            //var response = instance.CreateOrUpdateWarehouseByNumberRequestScopeIdcreateOrUpdateCreate(accept, scopeId, body);
            //Assert.IsType<Warehouse>(response);
        }

        /// <summary>
        /// Test CreateWarehouseRequestScopeIdPost
        /// </summary>
        [Fact]
        public void CreateWarehouseRequestScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateWarehouseRequest body = null;
            //var response = instance.CreateWarehouseRequestScopeIdPost(accept, scopeId, body);
            //Assert.IsType<Warehouse>(response);
        }

        /// <summary>
        /// Test DeleteWarehouseRequestScopeIdIddeleteDelete
        /// </summary>
        [Fact]
        public void DeleteWarehouseRequestScopeIdIddeleteDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //instance.DeleteWarehouseRequestScopeIdIddeleteDelete(accept, scopeId, id);
        }

        /// <summary>
        /// Test FindWarehousesRequestScopeIdfindPost
        /// </summary>
        [Fact]
        public void FindWarehousesRequestScopeIdfindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindWarehousesRequest body = null;
            //var response = instance.FindWarehousesRequestScopeIdfindPost(accept, scopeId, body);
            //Assert.IsType<FindWarehousesQueryResult>(response);
        }

        /// <summary>
        /// Test GetWarehouseRequestScopeIdIdGet
        /// </summary>
        [Fact]
        public void GetWarehouseRequestScopeIdIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //string cultureName = null;
            //bool? includeAddresses = null;
            //bool? includeSchedules = null;
            //bool? includeOperatingStatus = null;
            //var response = instance.GetWarehouseRequestScopeIdIdGet(accept, scopeId, id, cultureName, includeAddresses, includeSchedules, includeOperatingStatus);
            //Assert.IsType<Warehouse>(response);
        }

        /// <summary>
        /// Test UpdateWarehouseRequestScopeIdIdCreate
        /// </summary>
        [Fact]
        public void UpdateWarehouseRequestScopeIdIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //UpdateWarehouseRequest body = null;
            //var response = instance.UpdateWarehouseRequestScopeIdIdCreate(accept, scopeId, id, body);
            //Assert.IsType<Warehouse>(response);
        }

        /// <summary>
        /// Test UpdateWarehouseScopeAssociationsRequestScopeIdIdAssociatedScopesCreate
        /// </summary>
        [Fact]
        public void UpdateWarehouseScopeAssociationsRequestScopeIdIdAssociatedScopesCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //UpdateWarehouseScopeAssociationsRequest body = null;
            //instance.UpdateWarehouseScopeAssociationsRequestScopeIdIdAssociatedScopesCreate(accept, scopeId, id, body);
        }
    }
}
