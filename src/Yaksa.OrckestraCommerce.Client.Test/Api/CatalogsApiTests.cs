/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing CatalogsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CatalogsApiTests : IDisposable
    {
        private CatalogsApi instance;

        public CatalogsApiTests()
        {
            instance = new CatalogsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CatalogsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CatalogsApi
            //Assert.IsType<CatalogsApi>(instance);
        }

        /// <summary>
        /// Test GetCatalogChildrenIdsRequestCatalogIdchildrenGet
        /// </summary>
        [Fact]
        public void GetCatalogChildrenIdsRequestCatalogIdchildrenGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string catalogId = null;
            //string cultureName = null;
            //var response = instance.GetCatalogChildrenIdsRequestCatalogIdchildrenGet(accept, catalogId, cultureName);
            //Assert.IsType<List<Catalog>>(response);
        }

        /// <summary>
        /// Test GetCatalogRequestCatalogIdGet
        /// </summary>
        [Fact]
        public void GetCatalogRequestCatalogIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string catalogId = null;
            //string cultureName = null;
            //bool? includeChildren = null;
            //var response = instance.GetCatalogRequestCatalogIdGet(accept, catalogId, cultureName, includeChildren);
            //Assert.IsType<Catalog>(response);
        }

        /// <summary>
        /// Test GetClosestCatalogLanguageRequestclosestlanguageCatalogIdLanguageGet
        /// </summary>
        [Fact]
        public void GetClosestCatalogLanguageRequestclosestlanguageCatalogIdLanguageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string catalogId = null;
            //string language = null;
            //var response = instance.GetClosestCatalogLanguageRequestclosestlanguageCatalogIdLanguageGet(accept, catalogId, language);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetUsedLanguagesRequestusedCulturesGet
        /// </summary>
        [Fact]
        public void GetUsedLanguagesRequestusedCulturesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetUsedLanguagesRequestusedCulturesGet(accept);
            //Assert.IsType<CultureIsoList>(response);
        }

        /// <summary>
        /// Test UpdateCatalogRequestCatalogIdCreate
        /// </summary>
        [Fact]
        public void UpdateCatalogRequestCatalogIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string catalogId = null;
            //UpdateCatalogRequest body = null;
            //var response = instance.UpdateCatalogRequestCatalogIdCreate(accept, catalogId, body);
            //Assert.IsType<Catalog>(response);
        }
    }
}
