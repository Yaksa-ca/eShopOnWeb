/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing CampaignsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CampaignsApiTests : IDisposable
    {
        private CampaignsApi instance;

        public CampaignsApiTests()
        {
            instance = new CampaignsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CampaignsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CampaignsApi
            //Assert.IsType<CampaignsApi>(instance);
        }

        /// <summary>
        /// Test AddOrUpdateCampaignRequestScopeIdCampaignIdfullCreate
        /// </summary>
        [Fact]
        public void AddOrUpdateCampaignRequestScopeIdCampaignIdfullCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //AddOrUpdateCampaignRequest body = null;
            //var response = instance.AddOrUpdateCampaignRequestScopeIdCampaignIdfullCreate(accept, scopeId, campaignId, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CancelCampaignRequestScopeIdIdcancelPost
        /// </summary>
        [Fact]
        public void CancelCampaignRequestScopeIdIdcancelPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //Object body = null;
            //var response = instance.CancelCampaignRequestScopeIdIdcancelPost(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CopyCampaignRequestScopeIdFromCampaignIdcopyPost
        /// </summary>
        [Fact]
        public void CopyCampaignRequestScopeIdFromCampaignIdcopyPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string fromCampaignId = null;
            //CopyCampaignRequest body = null;
            //var response = instance.CopyCampaignRequestScopeIdFromCampaignIdcopyPost(accept, scopeId, fromCampaignId, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CreateCampaignRequestScopeIdPost
        /// </summary>
        [Fact]
        public void CreateCampaignRequestScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateCampaignRequest body = null;
            //var response = instance.CreateCampaignRequestScopeIdPost(accept, scopeId, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CreatePromotionRequestScopeIdCampaignIdpromotionsPost
        /// </summary>
        [Fact]
        public void CreatePromotionRequestScopeIdCampaignIdpromotionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //CreatePromotionRequest body = null;
            //var response = instance.CreatePromotionRequestScopeIdCampaignIdpromotionsPost(accept, scopeId, campaignId, body);
            //Assert.IsType<Promotion>(response);
        }

        /// <summary>
        /// Test DeletePromotionRequestScopeIdCampaignIdpromotionsPromotionIdDelete
        /// </summary>
        [Fact]
        public void DeletePromotionRequestScopeIdCampaignIdpromotionsPromotionIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //string promotionId = null;
            //instance.DeletePromotionRequestScopeIdCampaignIdpromotionsPromotionIdDelete(accept, scopeId, campaignId, promotionId);
        }

        /// <summary>
        /// Test FindCampaignsRequestScopeIdfindPost
        /// </summary>
        [Fact]
        public void FindCampaignsRequestScopeIdfindPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //FindCampaignsRequest body = null;
            //var response = instance.FindCampaignsRequestScopeIdfindPost(accept, scopeId, body);
            //Assert.IsType<CampaignQueryResult>(response);
        }

        /// <summary>
        /// Test GetCampaignPromotionsRequestScopeIdCampaignIdpromotionsGet
        /// </summary>
        [Fact]
        public void GetCampaignPromotionsRequestScopeIdCampaignIdpromotionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //bool? validateTargeting = null;
            //var response = instance.GetCampaignPromotionsRequestScopeIdCampaignIdpromotionsGet(accept, scopeId, campaignId, validateTargeting);
            //Assert.IsType<List<Promotion>>(response);
        }

        /// <summary>
        /// Test GetCampaignRequestScopeIdCampaignIdGet
        /// </summary>
        [Fact]
        public void GetCampaignRequestScopeIdCampaignIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //bool? includePromotions = null;
            //var response = instance.GetCampaignRequestScopeIdCampaignIdGet(accept, scopeId, campaignId, includePromotions);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test GetCampaignsRequestScopeIdbyIdsCampaignIdsGet
        /// </summary>
        [Fact]
        public void GetCampaignsRequestScopeIdbyIdsCampaignIdsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //List<string> campaignIds = null;
            //var response = instance.GetCampaignsRequestScopeIdbyIdsCampaignIdsGet(accept, scopeId, campaignIds);
            //Assert.IsType<List<Campaign>>(response);
        }

        /// <summary>
        /// Test GetLiveCampaignsRequestScopeIdgetliveGet
        /// </summary>
        [Fact]
        public void GetLiveCampaignsRequestScopeIdgetliveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //DateTime? effectiveDateTime = null;
            //bool? includePromotions = null;
            //var response = instance.GetLiveCampaignsRequestScopeIdgetliveGet(accept, scopeId, effectiveDateTime, includePromotions);
            //Assert.IsType<List<Campaign>>(response);
        }

        /// <summary>
        /// Test GetPromotionRequestScopeIdCampaignIdpromotionsPromotionIdGet
        /// </summary>
        [Fact]
        public void GetPromotionRequestScopeIdCampaignIdpromotionsPromotionIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //string promotionId = null;
            //bool? validateTargeting = null;
            //var response = instance.GetPromotionRequestScopeIdCampaignIdpromotionsPromotionIdGet(accept, scopeId, campaignId, promotionId, validateTargeting);
            //Assert.IsType<Promotion>(response);
        }

        /// <summary>
        /// Test GetPromotionSummariesRequestScopeIdCampaignIdpromotionssummariesGet
        /// </summary>
        [Fact]
        public void GetPromotionSummariesRequestScopeIdCampaignIdpromotionssummariesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //var response = instance.GetPromotionSummariesRequestScopeIdCampaignIdpromotionssummariesGet(accept, scopeId, campaignId);
            //Assert.IsType<PromotionSummaries>(response);
        }

        /// <summary>
        /// Test PauseCampaignRequestScopeIdIdpausePost
        /// </summary>
        [Fact]
        public void PauseCampaignRequestScopeIdIdpausePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //Object body = null;
            //var response = instance.PauseCampaignRequestScopeIdIdpausePost(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test PublishCampaignRequestScopeIdIdpublishPost
        /// </summary>
        [Fact]
        public void PublishCampaignRequestScopeIdIdpublishPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //Object body = null;
            //var response = instance.PublishCampaignRequestScopeIdIdpublishPost(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test RejectCampaignRequestScopeIdIdrejectPost
        /// </summary>
        [Fact]
        public void RejectCampaignRequestScopeIdIdrejectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //Object body = null;
            //var response = instance.RejectCampaignRequestScopeIdIdrejectPost(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test SubmitCampaignRequestScopeIdIdsubmitPost
        /// </summary>
        [Fact]
        public void SubmitCampaignRequestScopeIdIdsubmitPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //Object body = null;
            //var response = instance.SubmitCampaignRequestScopeIdIdsubmitPost(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test UpdateCampaignRequestScopeIdIdCreate
        /// </summary>
        [Fact]
        public void UpdateCampaignRequestScopeIdIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //UpdateCampaignRequest body = null;
            //var response = instance.UpdateCampaignRequestScopeIdIdCreate(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test UpdateCampaignStatusRequestScopeIdIdstatusCreate
        /// </summary>
        [Fact]
        public void UpdateCampaignStatusRequestScopeIdIdstatusCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string id = null;
            //UpdateCampaignStatusRequest body = null;
            //var response = instance.UpdateCampaignStatusRequestScopeIdIdstatusCreate(accept, scopeId, id, body);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test UpdatePromotionRequestScopeIdCampaignIdpromotionsPromotionIdCreate
        /// </summary>
        [Fact]
        public void UpdatePromotionRequestScopeIdCampaignIdpromotionsPromotionIdCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string campaignId = null;
            //string promotionId = null;
            //UpdatePromotionRequest body = null;
            //var response = instance.UpdatePromotionRequestScopeIdCampaignIdpromotionsPromotionIdCreate(accept, scopeId, campaignId, promotionId, body);
            //Assert.IsType<Promotion>(response);
        }
    }
}
