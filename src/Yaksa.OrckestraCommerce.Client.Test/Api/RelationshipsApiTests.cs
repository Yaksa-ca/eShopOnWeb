/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing RelationshipsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RelationshipsApiTests : IDisposable
    {
        private RelationshipsApi instance;

        public RelationshipsApiTests()
        {
            instance = new RelationshipsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RelationshipsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RelationshipsApi
            //Assert.IsType<RelationshipsApi>(instance);
        }

        /// <summary>
        /// Test ClearRelationshipsRequestScopeIdEntityTypeEntityIdDelete
        /// </summary>
        [Fact]
        public void ClearRelationshipsRequestScopeIdEntityTypeEntityIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityType = null;
            //string entityId = null;
            //string parentId = null;
            //instance.ClearRelationshipsRequestScopeIdEntityTypeEntityIdDelete(accept, scopeId, entityType, entityId, parentId);
        }

        /// <summary>
        /// Test ClearRelationshipsV2Requestv2ScopeIdEntityTypeEntityIdDelete
        /// </summary>
        [Fact]
        public void ClearRelationshipsV2Requestv2ScopeIdEntityTypeEntityIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string entityType = null;
            //string entityId = null;
            //string parentId = null;
            //instance.ClearRelationshipsV2Requestv2ScopeIdEntityTypeEntityIdDelete(accept, scopeId, entityType, entityId, parentId);
        }

        /// <summary>
        /// Test CreateRelationshipsRequestScopeIdPost
        /// </summary>
        [Fact]
        public void CreateRelationshipsRequestScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateRelationshipsRequest body = null;
            //var response = instance.CreateRelationshipsRequestScopeIdPost(accept, scopeId, body);
            //Assert.IsType<CreateRelationshipsResult>(response);
        }

        /// <summary>
        /// Test CreateRelationshipsV2Requestv2ScopeIdPost
        /// </summary>
        [Fact]
        public void CreateRelationshipsV2Requestv2ScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateRelationshipsV2Request body = null;
            //var response = instance.CreateRelationshipsV2Requestv2ScopeIdPost(accept, scopeId, body);
            //Assert.IsType<CreateRelationshipsResult>(response);
        }

        /// <summary>
        /// Test CreateSelfReferencingRelationshipsRequestScopeIdselfPost
        /// </summary>
        [Fact]
        public void CreateSelfReferencingRelationshipsRequestScopeIdselfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateSelfReferencingRelationshipsRequest body = null;
            //var response = instance.CreateSelfReferencingRelationshipsRequestScopeIdselfPost(accept, scopeId, body);
            //Assert.IsType<CreateRelationshipsResult>(response);
        }

        /// <summary>
        /// Test CreateSelfReferencingRelationshipsV2Requestv2ScopeIdselfPost
        /// </summary>
        [Fact]
        public void CreateSelfReferencingRelationshipsV2Requestv2ScopeIdselfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //CreateSelfReferencingRelationshipsV2Request body = null;
            //var response = instance.CreateSelfReferencingRelationshipsV2Requestv2ScopeIdselfPost(accept, scopeId, body);
            //Assert.IsType<CreateRelationshipsResult>(response);
        }

        /// <summary>
        /// Test DeleteRelationshipsRequestScopeIdDelete
        /// </summary>
        [Fact]
        public void DeleteRelationshipsRequestScopeIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //List<string> ids = null;
            //instance.DeleteRelationshipsRequestScopeIdDelete(accept, scopeId, ids);
        }

        /// <summary>
        /// Test DeleteRelationshipsV2Requestv2ScopeIdDelete
        /// </summary>
        [Fact]
        public void DeleteRelationshipsV2Requestv2ScopeIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //List<string> ids = null;
            //instance.DeleteRelationshipsV2Requestv2ScopeIdDelete(accept, scopeId, ids);
        }
    }
}
