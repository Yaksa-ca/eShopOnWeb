/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing AuthenticationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthenticationApiTests : IDisposable
    {
        private AuthenticationApi instance;

        public AuthenticationApiTests()
        {
            instance = new AuthenticationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthenticationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthenticationApi
            //Assert.IsType<AuthenticationApi>(instance);
        }

        /// <summary>
        /// Test CustomerSignInRequestcustomersigninPost
        /// </summary>
        [Fact]
        public void CustomerSignInRequestcustomersigninPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //CustomerSignInRequest body = null;
            //var response = instance.CustomerSignInRequestcustomersigninPost(accept, body);
            //Assert.IsType<Token>(response);
        }

        /// <summary>
        /// Test FederationSignoutReplyRequestfedsignoutreplyGet
        /// </summary>
        [Fact]
        public void FederationSignoutReplyRequestfedsignoutreplyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string returnUrl = null;
            //var response = instance.FederationSignoutReplyRequestfedsignoutreplyGet(accept, returnUrl);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetAuthenticationConfigurationconfigurationGet
        /// </summary>
        [Fact]
        public void GetAuthenticationConfigurationconfigurationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetAuthenticationConfigurationconfigurationGet(accept);
            //Assert.IsType<AuthenticationConfiguration>(response);
        }

        /// <summary>
        /// Test GetAuthenticationStatusRequeststatusGet
        /// </summary>
        [Fact]
        public void GetAuthenticationStatusRequeststatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetAuthenticationStatusRequeststatusGet(accept);
            //Assert.IsType<AuthenticatedStatus>(response);
        }

        /// <summary>
        /// Test GetUserPermissionsRequestprofileGet
        /// </summary>
        [Fact]
        public void GetUserPermissionsRequestprofileGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetUserPermissionsRequestprofileGet(accept);
            //Assert.IsType<UserPermissions>(response);
        }

        /// <summary>
        /// Test SignInRequestsigninPost
        /// </summary>
        [Fact]
        public void SignInRequestsigninPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //SignInRequest body = null;
            //var response = instance.SignInRequestsigninPost(accept, body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SignInWithCredentialsRequestsigninwithcredentialsPost
        /// </summary>
        [Fact]
        public void SignInWithCredentialsRequestsigninwithcredentialsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //SignInWithCredentialsRequest body = null;
            //var response = instance.SignInWithCredentialsRequestsigninwithcredentialsPost(accept, body);
            //Assert.IsType<UserPermissions>(response);
        }

        /// <summary>
        /// Test SignInWithIssuedTokenRequestsigninwithtokenPost
        /// </summary>
        [Fact]
        public void SignInWithIssuedTokenRequestsigninwithtokenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //SignInWithIssuedTokenRequest body = null;
            //var response = instance.SignInWithIssuedTokenRequestsigninwithtokenPost(accept, body);
            //Assert.IsType<UserPermissions>(response);
        }

        /// <summary>
        /// Test SignInWithJWTRequestsigninwithjwtPost
        /// </summary>
        [Fact]
        public void SignInWithJWTRequestsigninwithjwtPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //SignInWithJWTRequest body = null;
            //var response = instance.SignInWithJWTRequestsigninwithjwtPost(accept, body);
            //Assert.IsType<UserPermissions>(response);
        }

        /// <summary>
        /// Test SignOutRequestsignoutPost
        /// </summary>
        [Fact]
        public void SignOutRequestsignoutPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //SignOutRequest body = null;
            //var response = instance.SignOutRequestsignoutPost(accept, body);
            //Assert.IsType<string>(response);
        }
    }
}
