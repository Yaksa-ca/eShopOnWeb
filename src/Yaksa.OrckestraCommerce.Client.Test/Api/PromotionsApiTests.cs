/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing PromotionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PromotionsApiTests : IDisposable
    {
        private PromotionsApi instance;

        public PromotionsApiTests()
        {
            instance = new PromotionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PromotionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PromotionsApi
            //Assert.IsType<PromotionsApi>(instance);
        }

        /// <summary>
        /// Test ExportCouponCodesRequestPromotionIdcouponsexportPost
        /// </summary>
        [Fact]
        public void ExportCouponCodesRequestPromotionIdcouponsexportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string promotionId = null;
            //ExportCouponCodesRequest body = null;
            //var response = instance.ExportCouponCodesRequestPromotionIdcouponsexportPost(accept, promotionId, body);
            //Assert.IsType<List<string>>(response);
        }

        /// <summary>
        /// Test FindPromoCodesRequestScopeIdPromotionIdpromoCodesPost
        /// </summary>
        [Fact]
        public void FindPromoCodesRequestScopeIdPromotionIdpromoCodesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string promotionId = null;
            //FindPromoCodesRequest body = null;
            //var response = instance.FindPromoCodesRequestScopeIdPromotionIdpromoCodesPost(accept, scopeId, promotionId, body);
            //Assert.IsType<FindPromoCodesResponse>(response);
        }

        /// <summary>
        /// Test GeneratePromoCodesRequestScopeIdPromotionIdpromoCodesgeneratePost
        /// </summary>
        [Fact]
        public void GeneratePromoCodesRequestScopeIdPromotionIdpromoCodesgeneratePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string promotionId = null;
            //GeneratePromoCodesRequest body = null;
            //var response = instance.GeneratePromoCodesRequestScopeIdPromotionIdpromoCodesgeneratePost(accept, scopeId, promotionId, body);
            //Assert.IsType<GeneratePromoCodesResponse>(response);
        }

        /// <summary>
        /// Test GetPromoCodesCountRequestScopeIdPromotionIdpromoCodescountGet
        /// </summary>
        [Fact]
        public void GetPromoCodesCountRequestScopeIdPromotionIdpromoCodescountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string promotionId = null;
            //var response = instance.GetPromoCodesCountRequestScopeIdPromotionIdpromoCodescountGet(accept, scopeId, promotionId);
            //Assert.IsType<GetPromoCodesCountResponse>(response);
        }

        /// <summary>
        /// Test ImportCouponCodesRequestPromotionIdcouponsimportPost
        /// </summary>
        [Fact]
        public void ImportCouponCodesRequestPromotionIdcouponsimportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string promotionId = null;
            //ImportCouponCodesRequest body = null;
            //var response = instance.ImportCouponCodesRequestPromotionIdcouponsimportPost(accept, promotionId, body);
            //Assert.IsType<TaskInfo>(response);
        }

        /// <summary>
        /// Test ValidatePromoCodeRequestScopeIdPromotionIdpromoCodesPromoCodevalidatePost
        /// </summary>
        [Fact]
        public void ValidatePromoCodeRequestScopeIdPromotionIdpromoCodesPromoCodevalidatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string scopeId = null;
            //string promotionId = null;
            //string promoCode = null;
            //Object body = null;
            //var response = instance.ValidatePromoCodeRequestScopeIdPromotionIdpromoCodesPromoCodevalidatePost(accept, scopeId, promotionId, promoCode, body);
            //Assert.IsType<ValidationResult>(response);
        }
    }
}
