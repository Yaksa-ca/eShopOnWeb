/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Yaksa.OrckestraCommerce.Client.Client;
using Yaksa.OrckestraCommerce.Client.Api;
// uncomment below to import models
//using Yaksa.OrckestraCommerce.Client.Model;

namespace Yaksa.OrckestraCommerce.Client.Test.Api
{
    /// <summary>
    ///  Class for testing MyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MyApiTests : IDisposable
    {
        private MyApi instance;

        public MyApiTests()
        {
            instance = new MyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MyApi
            //Assert.IsType<MyApi>(instance);
        }

        /// <summary>
        /// Test GetAuthorizedApplicationsRequestapplicationsGet
        /// </summary>
        [Fact]
        public void GetAuthorizedApplicationsRequestapplicationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetAuthorizedApplicationsRequestapplicationsGet(accept);
            //Assert.IsType<List<Application>>(response);
        }

        /// <summary>
        /// Test GetUserApplicationRequestapplicationGet
        /// </summary>
        [Fact]
        public void GetUserApplicationRequestapplicationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetUserApplicationRequestapplicationGet(accept);
            //Assert.IsType<Application>(response);
        }

        /// <summary>
        /// Test GetUserCultureRequestcultureGet
        /// </summary>
        [Fact]
        public void GetUserCultureRequestcultureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //var response = instance.GetUserCultureRequestcultureGet(accept);
            //Assert.IsType<Culture>(response);
        }

        /// <summary>
        /// Test GetUserScopeRequestscopeModuleGet
        /// </summary>
        [Fact]
        public void GetUserScopeRequestscopeModuleGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string module = null;
            //var response = instance.GetUserScopeRequestscopeModuleGet(accept, module);
            //Assert.IsType<Scope>(response);
        }

        /// <summary>
        /// Test GetUserScopeTreeRequestscopeModuletreeGet
        /// </summary>
        [Fact]
        public void GetUserScopeTreeRequestscopeModuletreeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string module = null;
            //string cultureName = null;
            //var response = instance.GetUserScopeTreeRequestscopeModuletreeGet(accept, module, cultureName);
            //Assert.IsType<AuthorizedScope>(response);
        }

        /// <summary>
        /// Test SaveUserApplicationRequestapplicationApplicationIdPost
        /// </summary>
        [Fact]
        public void SaveUserApplicationRequestapplicationApplicationIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //int applicationId = null;
            //Object body = null;
            //instance.SaveUserApplicationRequestapplicationApplicationIdPost(accept, applicationId, body);
        }

        /// <summary>
        /// Test SaveUserCultureRequestcultureCultureIsoPost
        /// </summary>
        [Fact]
        public void SaveUserCultureRequestcultureCultureIsoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string cultureIso = null;
            //Object body = null;
            //instance.SaveUserCultureRequestcultureCultureIsoPost(accept, cultureIso, body);
        }

        /// <summary>
        /// Test SaveUserScopeRequestscopeModuleScopeIdPost
        /// </summary>
        [Fact]
        public void SaveUserScopeRequestscopeModuleScopeIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accept = null;
            //string module = null;
            //string scopeId = null;
            //Object body = null;
            //instance.SaveUserScopeRequestscopeModuleScopeIdPost(accept, module, scopeId, body);
        }
    }
}
