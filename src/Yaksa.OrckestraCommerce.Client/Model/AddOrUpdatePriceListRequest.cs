/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// Products are entities which represents a buyable item managed in a catalog.
    /// </summary>
    [DataContract(Name = "AddOrUpdatePriceListRequest")]
    public partial class AddOrUpdatePriceListRequest : IEquatable<AddOrUpdatePriceListRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddOrUpdatePriceListRequest" /> class.
        /// </summary>
        /// <param name="priceLists">List of PriceList to import in a specific scope..</param>
        /// <param name="rebuildSearchIndex">Whether or not the product prices search index will be built following the import. The default value is False..</param>
        public AddOrUpdatePriceListRequest(List<PriceList> priceLists = default(List<PriceList>), bool rebuildSearchIndex = default(bool))
        {
            this.PriceLists = priceLists;
            this.RebuildSearchIndex = rebuildSearchIndex;
        }

        /// <summary>
        /// List of PriceList to import in a specific scope.
        /// </summary>
        /// <value>List of PriceList to import in a specific scope.</value>
        [DataMember(Name = "priceLists", EmitDefaultValue = false)]
        public List<PriceList> PriceLists { get; set; }

        /// <summary>
        /// Whether or not the product prices search index will be built following the import. The default value is False.
        /// </summary>
        /// <value>Whether or not the product prices search index will be built following the import. The default value is False.</value>
        [DataMember(Name = "rebuildSearchIndex", EmitDefaultValue = true)]
        public bool RebuildSearchIndex { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddOrUpdatePriceListRequest {\n");
            sb.Append("  PriceLists: ").Append(PriceLists).Append("\n");
            sb.Append("  RebuildSearchIndex: ").Append(RebuildSearchIndex).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddOrUpdatePriceListRequest);
        }

        /// <summary>
        /// Returns true if AddOrUpdatePriceListRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AddOrUpdatePriceListRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddOrUpdatePriceListRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PriceLists == input.PriceLists ||
                    this.PriceLists != null &&
                    input.PriceLists != null &&
                    this.PriceLists.SequenceEqual(input.PriceLists)
                ) && 
                (
                    this.RebuildSearchIndex == input.RebuildSearchIndex ||
                    this.RebuildSearchIndex.Equals(input.RebuildSearchIndex)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PriceLists != null)
                    hashCode = hashCode * 59 + this.PriceLists.GetHashCode();
                hashCode = hashCode * 59 + this.RebuildSearchIndex.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
