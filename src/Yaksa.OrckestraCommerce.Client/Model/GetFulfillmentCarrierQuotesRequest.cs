/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// API calls used during the fulfillment process.
    /// </summary>
    [DataContract(Name = "GetFulfillmentCarrierQuotesRequest")]
    public partial class GetFulfillmentCarrierQuotesRequest : IEquatable<GetFulfillmentCarrierQuotesRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetFulfillmentCarrierQuotesRequest" /> class.
        /// </summary>
        /// <param name="addressBilling">addressBilling.</param>
        /// <param name="addressFrom">addressFrom.</param>
        /// <param name="addressTo">addressTo.</param>
        /// <param name="cultureName">The culture (language) in which the quote is being processed..</param>
        /// <param name="isReturn">A value indicating whether the quote is for a return shipment..</param>
        /// <param name="orderLocation">orderLocation.</param>
        /// <param name="package">package.</param>
        public GetFulfillmentCarrierQuotesRequest(FulfillmentCarrierAddress addressBilling = default(FulfillmentCarrierAddress), FulfillmentCarrierAddress addressFrom = default(FulfillmentCarrierAddress), FulfillmentCarrierAddress addressTo = default(FulfillmentCarrierAddress), string cultureName = default(string), bool isReturn = default(bool), FulfillmentCarrierOrderLocation orderLocation = default(FulfillmentCarrierOrderLocation), FulfillmentCarrierPackage package = default(FulfillmentCarrierPackage))
        {
            this.AddressBilling = addressBilling;
            this.AddressFrom = addressFrom;
            this.AddressTo = addressTo;
            this.CultureName = cultureName;
            this.IsReturn = isReturn;
            this.OrderLocation = orderLocation;
            this.Package = package;
        }

        /// <summary>
        /// Gets or Sets AddressBilling
        /// </summary>
        [DataMember(Name = "addressBilling", EmitDefaultValue = false)]
        public FulfillmentCarrierAddress AddressBilling { get; set; }

        /// <summary>
        /// Gets or Sets AddressFrom
        /// </summary>
        [DataMember(Name = "addressFrom", EmitDefaultValue = false)]
        public FulfillmentCarrierAddress AddressFrom { get; set; }

        /// <summary>
        /// Gets or Sets AddressTo
        /// </summary>
        [DataMember(Name = "addressTo", EmitDefaultValue = false)]
        public FulfillmentCarrierAddress AddressTo { get; set; }

        /// <summary>
        /// The culture (language) in which the quote is being processed.
        /// </summary>
        /// <value>The culture (language) in which the quote is being processed.</value>
        [DataMember(Name = "cultureName", EmitDefaultValue = false)]
        public string CultureName { get; set; }

        /// <summary>
        /// A value indicating whether the quote is for a return shipment.
        /// </summary>
        /// <value>A value indicating whether the quote is for a return shipment.</value>
        [DataMember(Name = "isReturn", EmitDefaultValue = true)]
        public bool IsReturn { get; set; }

        /// <summary>
        /// Gets or Sets OrderLocation
        /// </summary>
        [DataMember(Name = "orderLocation", EmitDefaultValue = false)]
        public FulfillmentCarrierOrderLocation OrderLocation { get; set; }

        /// <summary>
        /// Gets or Sets Package
        /// </summary>
        [DataMember(Name = "package", EmitDefaultValue = false)]
        public FulfillmentCarrierPackage Package { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetFulfillmentCarrierQuotesRequest {\n");
            sb.Append("  AddressBilling: ").Append(AddressBilling).Append("\n");
            sb.Append("  AddressFrom: ").Append(AddressFrom).Append("\n");
            sb.Append("  AddressTo: ").Append(AddressTo).Append("\n");
            sb.Append("  CultureName: ").Append(CultureName).Append("\n");
            sb.Append("  IsReturn: ").Append(IsReturn).Append("\n");
            sb.Append("  OrderLocation: ").Append(OrderLocation).Append("\n");
            sb.Append("  Package: ").Append(Package).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetFulfillmentCarrierQuotesRequest);
        }

        /// <summary>
        /// Returns true if GetFulfillmentCarrierQuotesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GetFulfillmentCarrierQuotesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetFulfillmentCarrierQuotesRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AddressBilling == input.AddressBilling ||
                    (this.AddressBilling != null &&
                    this.AddressBilling.Equals(input.AddressBilling))
                ) && 
                (
                    this.AddressFrom == input.AddressFrom ||
                    (this.AddressFrom != null &&
                    this.AddressFrom.Equals(input.AddressFrom))
                ) && 
                (
                    this.AddressTo == input.AddressTo ||
                    (this.AddressTo != null &&
                    this.AddressTo.Equals(input.AddressTo))
                ) && 
                (
                    this.CultureName == input.CultureName ||
                    (this.CultureName != null &&
                    this.CultureName.Equals(input.CultureName))
                ) && 
                (
                    this.IsReturn == input.IsReturn ||
                    this.IsReturn.Equals(input.IsReturn)
                ) && 
                (
                    this.OrderLocation == input.OrderLocation ||
                    (this.OrderLocation != null &&
                    this.OrderLocation.Equals(input.OrderLocation))
                ) && 
                (
                    this.Package == input.Package ||
                    (this.Package != null &&
                    this.Package.Equals(input.Package))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AddressBilling != null)
                    hashCode = hashCode * 59 + this.AddressBilling.GetHashCode();
                if (this.AddressFrom != null)
                    hashCode = hashCode * 59 + this.AddressFrom.GetHashCode();
                if (this.AddressTo != null)
                    hashCode = hashCode * 59 + this.AddressTo.GetHashCode();
                if (this.CultureName != null)
                    hashCode = hashCode * 59 + this.CultureName.GetHashCode();
                hashCode = hashCode * 59 + this.IsReturn.GetHashCode();
                if (this.OrderLocation != null)
                    hashCode = hashCode * 59 + this.OrderLocation.GetHashCode();
                if (this.Package != null)
                    hashCode = hashCode * 59 + this.Package.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
