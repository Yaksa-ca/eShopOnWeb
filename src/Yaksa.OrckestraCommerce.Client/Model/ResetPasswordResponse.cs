/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// ResetPasswordResponse
    /// </summary>
    [DataContract(Name = "ResetPasswordResponse")]
    public partial class ResetPasswordResponse : IEquatable<ResetPasswordResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResetPasswordResponse" /> class.
        /// </summary>
        /// <param name="success">Indicates whether the password was successfully reset..</param>
        /// <param name="ticket">Ticket generated for the customer.</param>
        public ResetPasswordResponse(bool success = default(bool), string ticket = default(string))
        {
            this.Success = success;
            this.Ticket = ticket;
        }

        /// <summary>
        /// Indicates whether the password was successfully reset.
        /// </summary>
        /// <value>Indicates whether the password was successfully reset.</value>
        [DataMember(Name = "success", EmitDefaultValue = true)]
        public bool Success { get; set; }

        /// <summary>
        /// Ticket generated for the customer
        /// </summary>
        /// <value>Ticket generated for the customer</value>
        [DataMember(Name = "ticket", EmitDefaultValue = false)]
        public string Ticket { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResetPasswordResponse {\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  Ticket: ").Append(Ticket).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResetPasswordResponse);
        }

        /// <summary>
        /// Returns true if ResetPasswordResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ResetPasswordResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResetPasswordResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Success == input.Success ||
                    this.Success.Equals(input.Success)
                ) && 
                (
                    this.Ticket == input.Ticket ||
                    (this.Ticket != null &&
                    this.Ticket.Equals(input.Ticket))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Success.GetHashCode();
                if (this.Ticket != null)
                    hashCode = hashCode * 59 + this.Ticket.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
