/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// FulfillmentCarrierQuoteConfirmation
    /// </summary>
    [DataContract(Name = "FulfillmentCarrierQuoteConfirmation")]
    public partial class FulfillmentCarrierQuoteConfirmation : IEquatable<FulfillmentCarrierQuoteConfirmation>, IValidatableObject
    {
        /// <summary>
        /// Defines CarrierManifestRequirement
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CarrierManifestRequirementEnum
        {
            /// <summary>
            /// Enum Unknown for value: Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            Unknown = 1,

            /// <summary>
            /// Enum Required for value: Required
            /// </summary>
            [EnumMember(Value = "Required")]
            Required = 2,

            /// <summary>
            /// Enum NotRequired for value: NotRequired
            /// </summary>
            [EnumMember(Value = "NotRequired")]
            NotRequired = 3,

            /// <summary>
            /// Enum Excluded for value: Excluded
            /// </summary>
            [EnumMember(Value = "Excluded")]
            Excluded = 4

        }


        /// <summary>
        /// Gets or Sets CarrierManifestRequirement
        /// </summary>
        [DataMember(Name = "carrierManifestRequirement", EmitDefaultValue = false)]
        public CarrierManifestRequirementEnum? CarrierManifestRequirement { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FulfillmentCarrierQuoteConfirmation" /> class.
        /// </summary>
        /// <param name="confirmationId">confirmationId.</param>
        /// <param name="quoteId">quoteId.</param>
        /// <param name="packageId">packageId.</param>
        /// <param name="isReturn">isReturn.</param>
        /// <param name="fulfillmentCarrierId">fulfillmentCarrierId.</param>
        /// <param name="carrierAccountIdOutbound">carrierAccountIdOutbound.</param>
        /// <param name="carrierAccountNameOutbound">carrierAccountNameOutbound.</param>
        /// <param name="carrierNameOutbound">carrierNameOutbound.</param>
        /// <param name="carrierServiceLevelOutbound">carrierServiceLevelOutbound.</param>
        /// <param name="carrierManifestRequirement">carrierManifestRequirement.</param>
        /// <param name="documents">documents.</param>
        public FulfillmentCarrierQuoteConfirmation(string confirmationId = default(string), string quoteId = default(string), string packageId = default(string), bool isReturn = default(bool), string fulfillmentCarrierId = default(string), string carrierAccountIdOutbound = default(string), string carrierAccountNameOutbound = default(string), string carrierNameOutbound = default(string), string carrierServiceLevelOutbound = default(string), CarrierManifestRequirementEnum? carrierManifestRequirement = default(CarrierManifestRequirementEnum?), List<FulfillmentCarrierDocument> documents = default(List<FulfillmentCarrierDocument>))
        {
            this.ConfirmationId = confirmationId;
            this.QuoteId = quoteId;
            this.PackageId = packageId;
            this.IsReturn = isReturn;
            this.FulfillmentCarrierId = fulfillmentCarrierId;
            this.CarrierAccountIdOutbound = carrierAccountIdOutbound;
            this.CarrierAccountNameOutbound = carrierAccountNameOutbound;
            this.CarrierNameOutbound = carrierNameOutbound;
            this.CarrierServiceLevelOutbound = carrierServiceLevelOutbound;
            this.CarrierManifestRequirement = carrierManifestRequirement;
            this.Documents = documents;
        }

        /// <summary>
        /// Gets or Sets ConfirmationId
        /// </summary>
        [DataMember(Name = "confirmationId", EmitDefaultValue = false)]
        public string ConfirmationId { get; set; }

        /// <summary>
        /// Gets or Sets QuoteId
        /// </summary>
        [DataMember(Name = "quoteId", EmitDefaultValue = false)]
        public string QuoteId { get; set; }

        /// <summary>
        /// Gets or Sets PackageId
        /// </summary>
        [DataMember(Name = "packageId", EmitDefaultValue = false)]
        public string PackageId { get; set; }

        /// <summary>
        /// Gets or Sets IsReturn
        /// </summary>
        [DataMember(Name = "isReturn", EmitDefaultValue = true)]
        public bool IsReturn { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentCarrierId
        /// </summary>
        [DataMember(Name = "fulfillmentCarrierId", EmitDefaultValue = false)]
        public string FulfillmentCarrierId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierAccountIdOutbound
        /// </summary>
        [DataMember(Name = "carrierAccountIdOutbound", EmitDefaultValue = false)]
        public string CarrierAccountIdOutbound { get; set; }

        /// <summary>
        /// Gets or Sets CarrierAccountNameOutbound
        /// </summary>
        [DataMember(Name = "carrierAccountNameOutbound", EmitDefaultValue = false)]
        public string CarrierAccountNameOutbound { get; set; }

        /// <summary>
        /// Gets or Sets CarrierNameOutbound
        /// </summary>
        [DataMember(Name = "carrierNameOutbound", EmitDefaultValue = false)]
        public string CarrierNameOutbound { get; set; }

        /// <summary>
        /// Gets or Sets CarrierServiceLevelOutbound
        /// </summary>
        [DataMember(Name = "carrierServiceLevelOutbound", EmitDefaultValue = false)]
        public string CarrierServiceLevelOutbound { get; set; }

        /// <summary>
        /// Gets or Sets Documents
        /// </summary>
        [DataMember(Name = "documents", EmitDefaultValue = false)]
        public List<FulfillmentCarrierDocument> Documents { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FulfillmentCarrierQuoteConfirmation {\n");
            sb.Append("  ConfirmationId: ").Append(ConfirmationId).Append("\n");
            sb.Append("  QuoteId: ").Append(QuoteId).Append("\n");
            sb.Append("  PackageId: ").Append(PackageId).Append("\n");
            sb.Append("  IsReturn: ").Append(IsReturn).Append("\n");
            sb.Append("  FulfillmentCarrierId: ").Append(FulfillmentCarrierId).Append("\n");
            sb.Append("  CarrierAccountIdOutbound: ").Append(CarrierAccountIdOutbound).Append("\n");
            sb.Append("  CarrierAccountNameOutbound: ").Append(CarrierAccountNameOutbound).Append("\n");
            sb.Append("  CarrierNameOutbound: ").Append(CarrierNameOutbound).Append("\n");
            sb.Append("  CarrierServiceLevelOutbound: ").Append(CarrierServiceLevelOutbound).Append("\n");
            sb.Append("  CarrierManifestRequirement: ").Append(CarrierManifestRequirement).Append("\n");
            sb.Append("  Documents: ").Append(Documents).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FulfillmentCarrierQuoteConfirmation);
        }

        /// <summary>
        /// Returns true if FulfillmentCarrierQuoteConfirmation instances are equal
        /// </summary>
        /// <param name="input">Instance of FulfillmentCarrierQuoteConfirmation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FulfillmentCarrierQuoteConfirmation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConfirmationId == input.ConfirmationId ||
                    (this.ConfirmationId != null &&
                    this.ConfirmationId.Equals(input.ConfirmationId))
                ) && 
                (
                    this.QuoteId == input.QuoteId ||
                    (this.QuoteId != null &&
                    this.QuoteId.Equals(input.QuoteId))
                ) && 
                (
                    this.PackageId == input.PackageId ||
                    (this.PackageId != null &&
                    this.PackageId.Equals(input.PackageId))
                ) && 
                (
                    this.IsReturn == input.IsReturn ||
                    this.IsReturn.Equals(input.IsReturn)
                ) && 
                (
                    this.FulfillmentCarrierId == input.FulfillmentCarrierId ||
                    (this.FulfillmentCarrierId != null &&
                    this.FulfillmentCarrierId.Equals(input.FulfillmentCarrierId))
                ) && 
                (
                    this.CarrierAccountIdOutbound == input.CarrierAccountIdOutbound ||
                    (this.CarrierAccountIdOutbound != null &&
                    this.CarrierAccountIdOutbound.Equals(input.CarrierAccountIdOutbound))
                ) && 
                (
                    this.CarrierAccountNameOutbound == input.CarrierAccountNameOutbound ||
                    (this.CarrierAccountNameOutbound != null &&
                    this.CarrierAccountNameOutbound.Equals(input.CarrierAccountNameOutbound))
                ) && 
                (
                    this.CarrierNameOutbound == input.CarrierNameOutbound ||
                    (this.CarrierNameOutbound != null &&
                    this.CarrierNameOutbound.Equals(input.CarrierNameOutbound))
                ) && 
                (
                    this.CarrierServiceLevelOutbound == input.CarrierServiceLevelOutbound ||
                    (this.CarrierServiceLevelOutbound != null &&
                    this.CarrierServiceLevelOutbound.Equals(input.CarrierServiceLevelOutbound))
                ) && 
                (
                    this.CarrierManifestRequirement == input.CarrierManifestRequirement ||
                    this.CarrierManifestRequirement.Equals(input.CarrierManifestRequirement)
                ) && 
                (
                    this.Documents == input.Documents ||
                    this.Documents != null &&
                    input.Documents != null &&
                    this.Documents.SequenceEqual(input.Documents)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConfirmationId != null)
                    hashCode = hashCode * 59 + this.ConfirmationId.GetHashCode();
                if (this.QuoteId != null)
                    hashCode = hashCode * 59 + this.QuoteId.GetHashCode();
                if (this.PackageId != null)
                    hashCode = hashCode * 59 + this.PackageId.GetHashCode();
                hashCode = hashCode * 59 + this.IsReturn.GetHashCode();
                if (this.FulfillmentCarrierId != null)
                    hashCode = hashCode * 59 + this.FulfillmentCarrierId.GetHashCode();
                if (this.CarrierAccountIdOutbound != null)
                    hashCode = hashCode * 59 + this.CarrierAccountIdOutbound.GetHashCode();
                if (this.CarrierAccountNameOutbound != null)
                    hashCode = hashCode * 59 + this.CarrierAccountNameOutbound.GetHashCode();
                if (this.CarrierNameOutbound != null)
                    hashCode = hashCode * 59 + this.CarrierNameOutbound.GetHashCode();
                if (this.CarrierServiceLevelOutbound != null)
                    hashCode = hashCode * 59 + this.CarrierServiceLevelOutbound.GetHashCode();
                hashCode = hashCode * 59 + this.CarrierManifestRequirement.GetHashCode();
                if (this.Documents != null)
                    hashCode = hashCode * 59 + this.Documents.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
