/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// ProductListPage
    /// </summary>
    [DataContract(Name = "ProductListPage")]
    public partial class ProductListPage : IEquatable<ProductListPage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductListPage" /> class.
        /// </summary>
        /// <param name="continuationToken">The continuation token that can be used to get the next result page..</param>
        /// <param name="products">Products of the list.</param>
        public ProductListPage(string continuationToken = default(string), List<Product> products = default(List<Product>))
        {
            this.ContinuationToken = continuationToken;
            this.Products = products;
        }

        /// <summary>
        /// The continuation token that can be used to get the next result page.
        /// </summary>
        /// <value>The continuation token that can be used to get the next result page.</value>
        [DataMember(Name = "continuationToken", EmitDefaultValue = false)]
        public string ContinuationToken { get; set; }

        /// <summary>
        /// Products of the list
        /// </summary>
        /// <value>Products of the list</value>
        [DataMember(Name = "products", EmitDefaultValue = false)]
        public List<Product> Products { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProductListPage {\n");
            sb.Append("  ContinuationToken: ").Append(ContinuationToken).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProductListPage);
        }

        /// <summary>
        /// Returns true if ProductListPage instances are equal
        /// </summary>
        /// <param name="input">Instance of ProductListPage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProductListPage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContinuationToken == input.ContinuationToken ||
                    (this.ContinuationToken != null &&
                    this.ContinuationToken.Equals(input.ContinuationToken))
                ) && 
                (
                    this.Products == input.Products ||
                    this.Products != null &&
                    input.Products != null &&
                    this.Products.SequenceEqual(input.Products)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContinuationToken != null)
                    hashCode = hashCode * 59 + this.ContinuationToken.GetHashCode();
                if (this.Products != null)
                    hashCode = hashCode * 59 + this.Products.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
