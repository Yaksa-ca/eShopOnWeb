/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// FulfillmentCarrierManifestIssue
    /// </summary>
    [DataContract(Name = "FulfillmentCarrierManifestIssue")]
    public partial class FulfillmentCarrierManifestIssue : IEquatable<FulfillmentCarrierManifestIssue>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FulfillmentCarrierManifestIssue" /> class.
        /// </summary>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="packageId">packageId.</param>
        /// <param name="orderInformation">orderInformation.</param>
        /// <param name="message">message.</param>
        /// <param name="messageLocalized">messageLocalized.</param>
        public FulfillmentCarrierManifestIssue(string transactionId = default(string), string packageId = default(string), string orderInformation = default(string), string message = default(string), string messageLocalized = default(string))
        {
            this.TransactionId = transactionId;
            this.PackageId = packageId;
            this.OrderInformation = orderInformation;
            this.Message = message;
            this.MessageLocalized = messageLocalized;
        }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        [DataMember(Name = "transactionId", EmitDefaultValue = false)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets PackageId
        /// </summary>
        [DataMember(Name = "packageId", EmitDefaultValue = false)]
        public string PackageId { get; set; }

        /// <summary>
        /// Gets or Sets OrderInformation
        /// </summary>
        [DataMember(Name = "orderInformation", EmitDefaultValue = false)]
        public string OrderInformation { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets MessageLocalized
        /// </summary>
        [DataMember(Name = "messageLocalized", EmitDefaultValue = false)]
        public string MessageLocalized { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FulfillmentCarrierManifestIssue {\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  PackageId: ").Append(PackageId).Append("\n");
            sb.Append("  OrderInformation: ").Append(OrderInformation).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  MessageLocalized: ").Append(MessageLocalized).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FulfillmentCarrierManifestIssue);
        }

        /// <summary>
        /// Returns true if FulfillmentCarrierManifestIssue instances are equal
        /// </summary>
        /// <param name="input">Instance of FulfillmentCarrierManifestIssue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FulfillmentCarrierManifestIssue input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TransactionId == input.TransactionId ||
                    (this.TransactionId != null &&
                    this.TransactionId.Equals(input.TransactionId))
                ) && 
                (
                    this.PackageId == input.PackageId ||
                    (this.PackageId != null &&
                    this.PackageId.Equals(input.PackageId))
                ) && 
                (
                    this.OrderInformation == input.OrderInformation ||
                    (this.OrderInformation != null &&
                    this.OrderInformation.Equals(input.OrderInformation))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.MessageLocalized == input.MessageLocalized ||
                    (this.MessageLocalized != null &&
                    this.MessageLocalized.Equals(input.MessageLocalized))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TransactionId != null)
                    hashCode = hashCode * 59 + this.TransactionId.GetHashCode();
                if (this.PackageId != null)
                    hashCode = hashCode * 59 + this.PackageId.GetHashCode();
                if (this.OrderInformation != null)
                    hashCode = hashCode * 59 + this.OrderInformation.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.MessageLocalized != null)
                    hashCode = hashCode * 59 + this.MessageLocalized.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
