/*
 * Overture API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Yaksa.OrckestraCommerce.Client.Client.OpenAPIDateConverter;

namespace Yaksa.OrckestraCommerce.Client.Model
{
    /// <summary>
    /// DeleteCouponResult
    /// </summary>
    [DataContract(Name = "DeleteCouponResult")]
    public partial class DeleteCouponResult : IEquatable<DeleteCouponResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteCouponResult" /> class.
        /// </summary>
        /// <param name="success">A value indicating whether this request is success..</param>
        /// <param name="validationResultCodes">The validation result codes.</param>
        public DeleteCouponResult(bool success = default(bool), List<string> validationResultCodes = default(List<string>))
        {
            this.Success = success;
            this.ValidationResultCodes = validationResultCodes;
        }

        /// <summary>
        /// A value indicating whether this request is success.
        /// </summary>
        /// <value>A value indicating whether this request is success.</value>
        [DataMember(Name = "success", EmitDefaultValue = true)]
        public bool Success { get; set; }

        /// <summary>
        /// The validation result codes
        /// </summary>
        /// <value>The validation result codes</value>
        [DataMember(Name = "validationResultCodes", EmitDefaultValue = false)]
        public List<string> ValidationResultCodes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeleteCouponResult {\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  ValidationResultCodes: ").Append(ValidationResultCodes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DeleteCouponResult);
        }

        /// <summary>
        /// Returns true if DeleteCouponResult instances are equal
        /// </summary>
        /// <param name="input">Instance of DeleteCouponResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeleteCouponResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Success == input.Success ||
                    this.Success.Equals(input.Success)
                ) && 
                (
                    this.ValidationResultCodes == input.ValidationResultCodes ||
                    this.ValidationResultCodes != null &&
                    input.ValidationResultCodes != null &&
                    this.ValidationResultCodes.SequenceEqual(input.ValidationResultCodes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Success.GetHashCode();
                if (this.ValidationResultCodes != null)
                    hashCode = hashCode * 59 + this.ValidationResultCodes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
